#if defined(_MSC_VER)
        #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
        #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
        #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
        #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
        #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used byclient of class 'type2'
        #pragma warning (disable:4267) // 'var' : conversion from 'size_t' to 'type', possible loss of data
        #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
        #pragma warning (disable:4307) // 'operator' : integral constant overflow
        #pragma warning (disable:4309) // 'conversion' : truncation of constant value
        #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was64bit shift intended?)
        #pragma warning (disable:4355) // 'this' : used in base member initializer list
        #pragma warning (disable:4506) // no definition for inline function 'function'
        #pragma warning (disable:4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
		 #pragma warning (disable:4946) // reinterpret_cast used between related classes: 'class1' and 'class2'
        #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
        #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonPacket.proto

#include "CommonPacket.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR S2C_ReplicatedServerTimeStamp::S2C_ReplicatedServerTimeStamp(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.time_stamp_)*/int64_t{0}
  , /*decltype(_impl_.utc_time_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_ReplicatedServerTimeStampDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_ReplicatedServerTimeStampDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_ReplicatedServerTimeStampDefaultTypeInternal() {}
  union {
    S2C_ReplicatedServerTimeStamp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_ReplicatedServerTimeStampDefaultTypeInternal _S2C_ReplicatedServerTimeStamp_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_CommonPacket_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_CommonPacket_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_CommonPacket_2eproto = nullptr;

const uint32_t TableStruct_CommonPacket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_ReplicatedServerTimeStamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_ReplicatedServerTimeStamp, _impl_.time_stamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_ReplicatedServerTimeStamp, _impl_.utc_time_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::S2C_ReplicatedServerTimeStamp)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_S2C_ReplicatedServerTimeStamp_default_instance_._instance,
};

const char descriptor_table_protodef_CommonPacket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022CommonPacket.proto\022\010Protocol\"E\n\035S2C_Re"
  "plicatedServerTimeStamp\022\022\n\ntime_stamp\030\001 "
  "\001(\003\022\020\n\010utc_time\030\002 \001(\003b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_CommonPacket_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_CommonPacket_2eproto = {
    false, false, 109, descriptor_table_protodef_CommonPacket_2eproto,
    "CommonPacket.proto",
    &descriptor_table_CommonPacket_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_CommonPacket_2eproto::offsets,
    file_level_metadata_CommonPacket_2eproto, file_level_enum_descriptors_CommonPacket_2eproto,
    file_level_service_descriptors_CommonPacket_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_CommonPacket_2eproto_getter() {
  return &descriptor_table_CommonPacket_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_CommonPacket_2eproto(&descriptor_table_CommonPacket_2eproto);
namespace Protocol {

// ===================================================================

class S2C_ReplicatedServerTimeStamp::_Internal {
 public:
};

S2C_ReplicatedServerTimeStamp::S2C_ReplicatedServerTimeStamp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_ReplicatedServerTimeStamp)
}
S2C_ReplicatedServerTimeStamp::S2C_ReplicatedServerTimeStamp(const S2C_ReplicatedServerTimeStamp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_ReplicatedServerTimeStamp* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.time_stamp_){}
    , decltype(_impl_.utc_time_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.time_stamp_, &from._impl_.time_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.utc_time_) -
    reinterpret_cast<char*>(&_impl_.time_stamp_)) + sizeof(_impl_.utc_time_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_ReplicatedServerTimeStamp)
}

inline void S2C_ReplicatedServerTimeStamp::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.time_stamp_){int64_t{0}}
    , decltype(_impl_.utc_time_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_ReplicatedServerTimeStamp::~S2C_ReplicatedServerTimeStamp() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_ReplicatedServerTimeStamp)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_ReplicatedServerTimeStamp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_ReplicatedServerTimeStamp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_ReplicatedServerTimeStamp::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_ReplicatedServerTimeStamp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.time_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.utc_time_) -
      reinterpret_cast<char*>(&_impl_.time_stamp_)) + sizeof(_impl_.utc_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_ReplicatedServerTimeStamp::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 time_stamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 utc_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.utc_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_ReplicatedServerTimeStamp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_ReplicatedServerTimeStamp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_stamp = 1;
  if (this->_internal_time_stamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_time_stamp(), target);
  }

  // int64 utc_time = 2;
  if (this->_internal_utc_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_utc_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_ReplicatedServerTimeStamp)
  return target;
}

size_t S2C_ReplicatedServerTimeStamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_ReplicatedServerTimeStamp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 time_stamp = 1;
  if (this->_internal_time_stamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time_stamp());
  }

  // int64 utc_time = 2;
  if (this->_internal_utc_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_utc_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_ReplicatedServerTimeStamp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_ReplicatedServerTimeStamp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_ReplicatedServerTimeStamp::GetClassData() const { return &_class_data_; }


void S2C_ReplicatedServerTimeStamp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_ReplicatedServerTimeStamp*>(&to_msg);
  auto& from = static_cast<const S2C_ReplicatedServerTimeStamp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_ReplicatedServerTimeStamp)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_time_stamp() != 0) {
    _this->_internal_set_time_stamp(from._internal_time_stamp());
  }
  if (from._internal_utc_time() != 0) {
    _this->_internal_set_utc_time(from._internal_utc_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_ReplicatedServerTimeStamp::CopyFrom(const S2C_ReplicatedServerTimeStamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_ReplicatedServerTimeStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_ReplicatedServerTimeStamp::IsInitialized() const {
  return true;
}

void S2C_ReplicatedServerTimeStamp::InternalSwap(S2C_ReplicatedServerTimeStamp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_ReplicatedServerTimeStamp, _impl_.utc_time_)
      + sizeof(S2C_ReplicatedServerTimeStamp::_impl_.utc_time_)
      - PROTOBUF_FIELD_OFFSET(S2C_ReplicatedServerTimeStamp, _impl_.time_stamp_)>(
          reinterpret_cast<char*>(&_impl_.time_stamp_),
          reinterpret_cast<char*>(&other->_impl_.time_stamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_ReplicatedServerTimeStamp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_CommonPacket_2eproto_getter, &descriptor_table_CommonPacket_2eproto_once,
      file_level_metadata_CommonPacket_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::S2C_ReplicatedServerTimeStamp*
Arena::CreateMaybeMessage< ::Protocol::S2C_ReplicatedServerTimeStamp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_ReplicatedServerTimeStamp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
