#if defined(_MSC_VER)
		 #pragma warning (disable:4946) // reinterpret_cast used between related classes: 'class1' and 'class2'
#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PacketStruct.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_PacketStruct_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_PacketStruct_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PacketEnum.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_PacketStruct_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_PacketStruct_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_PacketStruct_2eproto;
namespace Protocol {
class SCharacterAppearance;
struct SCharacterAppearanceDefaultTypeInternal;
extern SCharacterAppearanceDefaultTypeInternal _SCharacterAppearance_default_instance_;
class SCharacterEqipment;
struct SCharacterEqipmentDefaultTypeInternal;
extern SCharacterEqipmentDefaultTypeInternal _SCharacterEqipment_default_instance_;
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> ::Protocol::SCharacterAppearance* Arena::CreateMaybeMessage<::Protocol::SCharacterAppearance>(Arena*);
template<> ::Protocol::SCharacterEqipment* Arena::CreateMaybeMessage<::Protocol::SCharacterEqipment>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Protocol {

// ===================================================================

class SCharacterAppearance final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.SCharacterAppearance) */ {
 public:
  inline SCharacterAppearance() : SCharacterAppearance(nullptr) {}
  ~SCharacterAppearance() override;
  explicit PROTOBUF_CONSTEXPR SCharacterAppearance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SCharacterAppearance(const SCharacterAppearance& from);
  SCharacterAppearance(SCharacterAppearance&& from) noexcept
    : SCharacterAppearance() {
    *this = ::std::move(from);
  }

  inline SCharacterAppearance& operator=(const SCharacterAppearance& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCharacterAppearance& operator=(SCharacterAppearance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCharacterAppearance& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCharacterAppearance* internal_default_instance() {
    return reinterpret_cast<const SCharacterAppearance*>(
               &_SCharacterAppearance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SCharacterAppearance& a, SCharacterAppearance& b) {
    a.Swap(&b);
  }
  inline void Swap(SCharacterAppearance* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCharacterAppearance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCharacterAppearance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SCharacterAppearance>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SCharacterAppearance& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SCharacterAppearance& from) {
    SCharacterAppearance::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SCharacterAppearance* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.SCharacterAppearance";
  }
  protected:
  explicit SCharacterAppearance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRaceFieldNumber = 1,
    kCharacterClassFieldNumber = 2,
    kSeatFieldNumber = 3,
    kSkinColorFieldNumber = 4,
    kHairColorFieldNumber = 5,
    kEyeColorFieldNumber = 6,
    kEyebrowColorFieldNumber = 7,
  };
  // .Protocol.ERace race = 1;
  void clear_race();
  ::Protocol::ERace race() const;
  void set_race(::Protocol::ERace value);
  private:
  ::Protocol::ERace _internal_race() const;
  void _internal_set_race(::Protocol::ERace value);
  public:

  // .Protocol.ECharacterClass character_class = 2;
  void clear_character_class();
  ::Protocol::ECharacterClass character_class() const;
  void set_character_class(::Protocol::ECharacterClass value);
  private:
  ::Protocol::ECharacterClass _internal_character_class() const;
  void _internal_set_character_class(::Protocol::ECharacterClass value);
  public:

  // int32 seat = 3;
  void clear_seat();
  int32_t seat() const;
  void set_seat(int32_t value);
  private:
  int32_t _internal_seat() const;
  void _internal_set_seat(int32_t value);
  public:

  // int32 skin_color = 4;
  void clear_skin_color();
  int32_t skin_color() const;
  void set_skin_color(int32_t value);
  private:
  int32_t _internal_skin_color() const;
  void _internal_set_skin_color(int32_t value);
  public:

  // int32 hair_color = 5;
  void clear_hair_color();
  int32_t hair_color() const;
  void set_hair_color(int32_t value);
  private:
  int32_t _internal_hair_color() const;
  void _internal_set_hair_color(int32_t value);
  public:

  // int32 eye_color = 6;
  void clear_eye_color();
  int32_t eye_color() const;
  void set_eye_color(int32_t value);
  private:
  int32_t _internal_eye_color() const;
  void _internal_set_eye_color(int32_t value);
  public:

  // int32 eyebrow_color = 7;
  void clear_eyebrow_color();
  int32_t eyebrow_color() const;
  void set_eyebrow_color(int32_t value);
  private:
  int32_t _internal_eyebrow_color() const;
  void _internal_set_eyebrow_color(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.SCharacterAppearance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int race_;
    int character_class_;
    int32_t seat_;
    int32_t skin_color_;
    int32_t hair_color_;
    int32_t eye_color_;
    int32_t eyebrow_color_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_PacketStruct_2eproto;
};
// -------------------------------------------------------------------

class SCharacterEqipment final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protocol.SCharacterEqipment) */ {
 public:
  inline SCharacterEqipment() : SCharacterEqipment(nullptr) {}
  ~SCharacterEqipment() override;
  explicit PROTOBUF_CONSTEXPR SCharacterEqipment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SCharacterEqipment(const SCharacterEqipment& from);
  SCharacterEqipment(SCharacterEqipment&& from) noexcept
    : SCharacterEqipment() {
    *this = ::std::move(from);
  }

  inline SCharacterEqipment& operator=(const SCharacterEqipment& from) {
    CopyFrom(from);
    return *this;
  }
  inline SCharacterEqipment& operator=(SCharacterEqipment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SCharacterEqipment& default_instance() {
    return *internal_default_instance();
  }
  static inline const SCharacterEqipment* internal_default_instance() {
    return reinterpret_cast<const SCharacterEqipment*>(
               &_SCharacterEqipment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SCharacterEqipment& a, SCharacterEqipment& b) {
    a.Swap(&b);
  }
  inline void Swap(SCharacterEqipment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SCharacterEqipment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SCharacterEqipment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SCharacterEqipment>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SCharacterEqipment& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SCharacterEqipment& from) {
    SCharacterEqipment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SCharacterEqipment* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protocol.SCharacterEqipment";
  }
  protected:
  explicit SCharacterEqipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHairFieldNumber = 1,
    kHelmetFieldNumber = 2,
    kShouldersFieldNumber = 3,
    kChestAddFieldNumber = 4,
    kBracersAddFieldNumber = 5,
    kHandsAddFieldNumber = 6,
    kPantsAddFieldNumber = 7,
    kBootsFieldNumber = 8,
    kWeaponLFieldNumber = 9,
    kWeaponRFieldNumber = 10,
  };
  // int32 hair = 1;
  void clear_hair();
  int32_t hair() const;
  void set_hair(int32_t value);
  private:
  int32_t _internal_hair() const;
  void _internal_set_hair(int32_t value);
  public:

  // int32 helmet = 2;
  void clear_helmet();
  int32_t helmet() const;
  void set_helmet(int32_t value);
  private:
  int32_t _internal_helmet() const;
  void _internal_set_helmet(int32_t value);
  public:

  // int32 shoulders = 3;
  void clear_shoulders();
  int32_t shoulders() const;
  void set_shoulders(int32_t value);
  private:
  int32_t _internal_shoulders() const;
  void _internal_set_shoulders(int32_t value);
  public:

  // int32 chest_add = 4;
  void clear_chest_add();
  int32_t chest_add() const;
  void set_chest_add(int32_t value);
  private:
  int32_t _internal_chest_add() const;
  void _internal_set_chest_add(int32_t value);
  public:

  // int32 bracers_add = 5;
  void clear_bracers_add();
  int32_t bracers_add() const;
  void set_bracers_add(int32_t value);
  private:
  int32_t _internal_bracers_add() const;
  void _internal_set_bracers_add(int32_t value);
  public:

  // int32 hands_add = 6;
  void clear_hands_add();
  int32_t hands_add() const;
  void set_hands_add(int32_t value);
  private:
  int32_t _internal_hands_add() const;
  void _internal_set_hands_add(int32_t value);
  public:

  // int32 pants_add = 7;
  void clear_pants_add();
  int32_t pants_add() const;
  void set_pants_add(int32_t value);
  private:
  int32_t _internal_pants_add() const;
  void _internal_set_pants_add(int32_t value);
  public:

  // int32 boots = 8;
  void clear_boots();
  int32_t boots() const;
  void set_boots(int32_t value);
  private:
  int32_t _internal_boots() const;
  void _internal_set_boots(int32_t value);
  public:

  // int32 weapon_l = 9;
  void clear_weapon_l();
  int32_t weapon_l() const;
  void set_weapon_l(int32_t value);
  private:
  int32_t _internal_weapon_l() const;
  void _internal_set_weapon_l(int32_t value);
  public:

  // int32 weapon_r = 10;
  void clear_weapon_r();
  int32_t weapon_r() const;
  void set_weapon_r(int32_t value);
  private:
  int32_t _internal_weapon_r() const;
  void _internal_set_weapon_r(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Protocol.SCharacterEqipment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t hair_;
    int32_t helmet_;
    int32_t shoulders_;
    int32_t chest_add_;
    int32_t bracers_add_;
    int32_t hands_add_;
    int32_t pants_add_;
    int32_t boots_;
    int32_t weapon_l_;
    int32_t weapon_r_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_PacketStruct_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SCharacterAppearance

// .Protocol.ERace race = 1;
inline void SCharacterAppearance::clear_race() {
  _impl_.race_ = 0;
}
inline ::Protocol::ERace SCharacterAppearance::_internal_race() const {
  return static_cast< ::Protocol::ERace >(_impl_.race_);
}
inline ::Protocol::ERace SCharacterAppearance::race() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.race)
  return _internal_race();
}
inline void SCharacterAppearance::_internal_set_race(::Protocol::ERace value) {
  
  _impl_.race_ = value;
}
inline void SCharacterAppearance::set_race(::Protocol::ERace value) {
  _internal_set_race(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.race)
}

// .Protocol.ECharacterClass character_class = 2;
inline void SCharacterAppearance::clear_character_class() {
  _impl_.character_class_ = 0;
}
inline ::Protocol::ECharacterClass SCharacterAppearance::_internal_character_class() const {
  return static_cast< ::Protocol::ECharacterClass >(_impl_.character_class_);
}
inline ::Protocol::ECharacterClass SCharacterAppearance::character_class() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.character_class)
  return _internal_character_class();
}
inline void SCharacterAppearance::_internal_set_character_class(::Protocol::ECharacterClass value) {
  
  _impl_.character_class_ = value;
}
inline void SCharacterAppearance::set_character_class(::Protocol::ECharacterClass value) {
  _internal_set_character_class(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.character_class)
}

// int32 seat = 3;
inline void SCharacterAppearance::clear_seat() {
  _impl_.seat_ = 0;
}
inline int32_t SCharacterAppearance::_internal_seat() const {
  return _impl_.seat_;
}
inline int32_t SCharacterAppearance::seat() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.seat)
  return _internal_seat();
}
inline void SCharacterAppearance::_internal_set_seat(int32_t value) {
  
  _impl_.seat_ = value;
}
inline void SCharacterAppearance::set_seat(int32_t value) {
  _internal_set_seat(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.seat)
}

// int32 skin_color = 4;
inline void SCharacterAppearance::clear_skin_color() {
  _impl_.skin_color_ = 0;
}
inline int32_t SCharacterAppearance::_internal_skin_color() const {
  return _impl_.skin_color_;
}
inline int32_t SCharacterAppearance::skin_color() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.skin_color)
  return _internal_skin_color();
}
inline void SCharacterAppearance::_internal_set_skin_color(int32_t value) {
  
  _impl_.skin_color_ = value;
}
inline void SCharacterAppearance::set_skin_color(int32_t value) {
  _internal_set_skin_color(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.skin_color)
}

// int32 hair_color = 5;
inline void SCharacterAppearance::clear_hair_color() {
  _impl_.hair_color_ = 0;
}
inline int32_t SCharacterAppearance::_internal_hair_color() const {
  return _impl_.hair_color_;
}
inline int32_t SCharacterAppearance::hair_color() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.hair_color)
  return _internal_hair_color();
}
inline void SCharacterAppearance::_internal_set_hair_color(int32_t value) {
  
  _impl_.hair_color_ = value;
}
inline void SCharacterAppearance::set_hair_color(int32_t value) {
  _internal_set_hair_color(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.hair_color)
}

// int32 eye_color = 6;
inline void SCharacterAppearance::clear_eye_color() {
  _impl_.eye_color_ = 0;
}
inline int32_t SCharacterAppearance::_internal_eye_color() const {
  return _impl_.eye_color_;
}
inline int32_t SCharacterAppearance::eye_color() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.eye_color)
  return _internal_eye_color();
}
inline void SCharacterAppearance::_internal_set_eye_color(int32_t value) {
  
  _impl_.eye_color_ = value;
}
inline void SCharacterAppearance::set_eye_color(int32_t value) {
  _internal_set_eye_color(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.eye_color)
}

// int32 eyebrow_color = 7;
inline void SCharacterAppearance::clear_eyebrow_color() {
  _impl_.eyebrow_color_ = 0;
}
inline int32_t SCharacterAppearance::_internal_eyebrow_color() const {
  return _impl_.eyebrow_color_;
}
inline int32_t SCharacterAppearance::eyebrow_color() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterAppearance.eyebrow_color)
  return _internal_eyebrow_color();
}
inline void SCharacterAppearance::_internal_set_eyebrow_color(int32_t value) {
  
  _impl_.eyebrow_color_ = value;
}
inline void SCharacterAppearance::set_eyebrow_color(int32_t value) {
  _internal_set_eyebrow_color(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterAppearance.eyebrow_color)
}

// -------------------------------------------------------------------

// SCharacterEqipment

// int32 hair = 1;
inline void SCharacterEqipment::clear_hair() {
  _impl_.hair_ = 0;
}
inline int32_t SCharacterEqipment::_internal_hair() const {
  return _impl_.hair_;
}
inline int32_t SCharacterEqipment::hair() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.hair)
  return _internal_hair();
}
inline void SCharacterEqipment::_internal_set_hair(int32_t value) {
  
  _impl_.hair_ = value;
}
inline void SCharacterEqipment::set_hair(int32_t value) {
  _internal_set_hair(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.hair)
}

// int32 helmet = 2;
inline void SCharacterEqipment::clear_helmet() {
  _impl_.helmet_ = 0;
}
inline int32_t SCharacterEqipment::_internal_helmet() const {
  return _impl_.helmet_;
}
inline int32_t SCharacterEqipment::helmet() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.helmet)
  return _internal_helmet();
}
inline void SCharacterEqipment::_internal_set_helmet(int32_t value) {
  
  _impl_.helmet_ = value;
}
inline void SCharacterEqipment::set_helmet(int32_t value) {
  _internal_set_helmet(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.helmet)
}

// int32 shoulders = 3;
inline void SCharacterEqipment::clear_shoulders() {
  _impl_.shoulders_ = 0;
}
inline int32_t SCharacterEqipment::_internal_shoulders() const {
  return _impl_.shoulders_;
}
inline int32_t SCharacterEqipment::shoulders() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.shoulders)
  return _internal_shoulders();
}
inline void SCharacterEqipment::_internal_set_shoulders(int32_t value) {
  
  _impl_.shoulders_ = value;
}
inline void SCharacterEqipment::set_shoulders(int32_t value) {
  _internal_set_shoulders(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.shoulders)
}

// int32 chest_add = 4;
inline void SCharacterEqipment::clear_chest_add() {
  _impl_.chest_add_ = 0;
}
inline int32_t SCharacterEqipment::_internal_chest_add() const {
  return _impl_.chest_add_;
}
inline int32_t SCharacterEqipment::chest_add() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.chest_add)
  return _internal_chest_add();
}
inline void SCharacterEqipment::_internal_set_chest_add(int32_t value) {
  
  _impl_.chest_add_ = value;
}
inline void SCharacterEqipment::set_chest_add(int32_t value) {
  _internal_set_chest_add(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.chest_add)
}

// int32 bracers_add = 5;
inline void SCharacterEqipment::clear_bracers_add() {
  _impl_.bracers_add_ = 0;
}
inline int32_t SCharacterEqipment::_internal_bracers_add() const {
  return _impl_.bracers_add_;
}
inline int32_t SCharacterEqipment::bracers_add() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.bracers_add)
  return _internal_bracers_add();
}
inline void SCharacterEqipment::_internal_set_bracers_add(int32_t value) {
  
  _impl_.bracers_add_ = value;
}
inline void SCharacterEqipment::set_bracers_add(int32_t value) {
  _internal_set_bracers_add(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.bracers_add)
}

// int32 hands_add = 6;
inline void SCharacterEqipment::clear_hands_add() {
  _impl_.hands_add_ = 0;
}
inline int32_t SCharacterEqipment::_internal_hands_add() const {
  return _impl_.hands_add_;
}
inline int32_t SCharacterEqipment::hands_add() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.hands_add)
  return _internal_hands_add();
}
inline void SCharacterEqipment::_internal_set_hands_add(int32_t value) {
  
  _impl_.hands_add_ = value;
}
inline void SCharacterEqipment::set_hands_add(int32_t value) {
  _internal_set_hands_add(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.hands_add)
}

// int32 pants_add = 7;
inline void SCharacterEqipment::clear_pants_add() {
  _impl_.pants_add_ = 0;
}
inline int32_t SCharacterEqipment::_internal_pants_add() const {
  return _impl_.pants_add_;
}
inline int32_t SCharacterEqipment::pants_add() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.pants_add)
  return _internal_pants_add();
}
inline void SCharacterEqipment::_internal_set_pants_add(int32_t value) {
  
  _impl_.pants_add_ = value;
}
inline void SCharacterEqipment::set_pants_add(int32_t value) {
  _internal_set_pants_add(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.pants_add)
}

// int32 boots = 8;
inline void SCharacterEqipment::clear_boots() {
  _impl_.boots_ = 0;
}
inline int32_t SCharacterEqipment::_internal_boots() const {
  return _impl_.boots_;
}
inline int32_t SCharacterEqipment::boots() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.boots)
  return _internal_boots();
}
inline void SCharacterEqipment::_internal_set_boots(int32_t value) {
  
  _impl_.boots_ = value;
}
inline void SCharacterEqipment::set_boots(int32_t value) {
  _internal_set_boots(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.boots)
}

// int32 weapon_l = 9;
inline void SCharacterEqipment::clear_weapon_l() {
  _impl_.weapon_l_ = 0;
}
inline int32_t SCharacterEqipment::_internal_weapon_l() const {
  return _impl_.weapon_l_;
}
inline int32_t SCharacterEqipment::weapon_l() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.weapon_l)
  return _internal_weapon_l();
}
inline void SCharacterEqipment::_internal_set_weapon_l(int32_t value) {
  
  _impl_.weapon_l_ = value;
}
inline void SCharacterEqipment::set_weapon_l(int32_t value) {
  _internal_set_weapon_l(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.weapon_l)
}

// int32 weapon_r = 10;
inline void SCharacterEqipment::clear_weapon_r() {
  _impl_.weapon_r_ = 0;
}
inline int32_t SCharacterEqipment::_internal_weapon_r() const {
  return _impl_.weapon_r_;
}
inline int32_t SCharacterEqipment::weapon_r() const {
  // @@protoc_insertion_point(field_get:Protocol.SCharacterEqipment.weapon_r)
  return _internal_weapon_r();
}
inline void SCharacterEqipment::_internal_set_weapon_r(int32_t value) {
  
  _impl_.weapon_r_ = value;
}
inline void SCharacterEqipment::set_weapon_r(int32_t value) {
  _internal_set_weapon_r(value);
  // @@protoc_insertion_point(field_set:Protocol.SCharacterEqipment.weapon_r)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protocol

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_PacketStruct_2eproto
