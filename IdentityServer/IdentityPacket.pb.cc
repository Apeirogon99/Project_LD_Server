#if defined(_MSC_VER)
        #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
        #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
        #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
        #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
        #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used byclient of class 'type2'
        #pragma warning (disable:4267) // 'var' : conversion from 'size_t' to 'type', possible loss of data
        #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
        #pragma warning (disable:4307) // 'operator' : integral constant overflow
        #pragma warning (disable:4309) // 'conversion' : truncation of constant value
        #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was64bit shift intended?)
        #pragma warning (disable:4355) // 'this' : used in base member initializer list
        #pragma warning (disable:4506) // no definition for inline function 'function'
        #pragma warning (disable:4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
		 #pragma warning (disable:4946) // reinterpret_cast used between related classes: 'class1' and 'class2'
        #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
        #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IdentityPacket.proto

#include "IdentityPacket.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR C2S_EnterIdentityServer::C2S_EnterIdentityServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_EnterIdentityServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_EnterIdentityServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_EnterIdentityServerDefaultTypeInternal() {}
  union {
    C2S_EnterIdentityServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_EnterIdentityServerDefaultTypeInternal _C2S_EnterIdentityServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_EnterIdentityServer::S2C_EnterIdentityServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_EnterIdentityServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_EnterIdentityServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_EnterIdentityServerDefaultTypeInternal() {}
  union {
    S2C_EnterIdentityServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_EnterIdentityServerDefaultTypeInternal _S2C_EnterIdentityServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_LeaveIdentityServer::C2S_LeaveIdentityServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_LeaveIdentityServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LeaveIdentityServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LeaveIdentityServerDefaultTypeInternal() {}
  union {
    C2S_LeaveIdentityServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LeaveIdentityServerDefaultTypeInternal _C2S_LeaveIdentityServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_LeaveIdentityServer::S2C_LeaveIdentityServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LeaveIdentityServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LeaveIdentityServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LeaveIdentityServerDefaultTypeInternal() {}
  union {
    S2C_LeaveIdentityServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LeaveIdentityServerDefaultTypeInternal _S2C_LeaveIdentityServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_Singin::C2S_Singin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_SinginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_SinginDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_SinginDefaultTypeInternal() {}
  union {
    C2S_Singin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_SinginDefaultTypeInternal _C2S_Singin_default_instance_;
PROTOBUF_CONSTEXPR S2C_Singin::S2C_Singin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_SinginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_SinginDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_SinginDefaultTypeInternal() {}
  union {
    S2C_Singin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_SinginDefaultTypeInternal _S2C_Singin_default_instance_;
PROTOBUF_CONSTEXPR C2S_Singup::C2S_Singup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_SingupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_SingupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_SingupDefaultTypeInternal() {}
  union {
    C2S_Singup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_SingupDefaultTypeInternal _C2S_Singup_default_instance_;
PROTOBUF_CONSTEXPR S2C_Singup::S2C_Singup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_SingupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_SingupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_SingupDefaultTypeInternal() {}
  union {
    S2C_Singup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_SingupDefaultTypeInternal _S2C_Singup_default_instance_;
PROTOBUF_CONSTEXPR C2S_EmailVerified::C2S_EmailVerified(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.verified_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_EmailVerifiedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_EmailVerifiedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_EmailVerifiedDefaultTypeInternal() {}
  union {
    C2S_EmailVerified _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_EmailVerifiedDefaultTypeInternal _C2S_EmailVerified_default_instance_;
PROTOBUF_CONSTEXPR S2C_EmailVerified::S2C_EmailVerified(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_EmailVerifiedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_EmailVerifiedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_EmailVerifiedDefaultTypeInternal() {}
  union {
    S2C_EmailVerified _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_EmailVerifiedDefaultTypeInternal _S2C_EmailVerified_default_instance_;
PROTOBUF_CONSTEXPR S2C_LoadServer::S2C_LoadServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ip_)*/{}
  , /*decltype(_impl_.port_)*/{}
  , /*decltype(_impl_._port_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LoadServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LoadServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LoadServerDefaultTypeInternal() {}
  union {
    S2C_LoadServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LoadServerDefaultTypeInternal _S2C_LoadServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_LoadCharacters::C2S_LoadCharacters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.server_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_LoadCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LoadCharactersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LoadCharactersDefaultTypeInternal() {}
  union {
    C2S_LoadCharacters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LoadCharactersDefaultTypeInternal _C2S_LoadCharacters_default_instance_;
PROTOBUF_CONSTEXPR S2C_LoadCharacters::S2C_LoadCharacters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{}
  , /*decltype(_impl_.appearance_)*/{}
  , /*decltype(_impl_.eqipment_)*/{}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LoadCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LoadCharactersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LoadCharactersDefaultTypeInternal() {}
  union {
    S2C_LoadCharacters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LoadCharactersDefaultTypeInternal _S2C_LoadCharacters_default_instance_;
PROTOBUF_CONSTEXPR C2S_CreateCharacter::C2S_CreateCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.appearance_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.server_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_CreateCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_CreateCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_CreateCharacterDefaultTypeInternal() {}
  union {
    C2S_CreateCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_CreateCharacterDefaultTypeInternal _C2S_CreateCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_CreateCharacter::S2C_CreateCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_CreateCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_CreateCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_CreateCharacterDefaultTypeInternal() {}
  union {
    S2C_CreateCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_CreateCharacterDefaultTypeInternal _S2C_CreateCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_UpdateAppearance::C2S_UpdateAppearance(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.appearance_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_UpdateAppearanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UpdateAppearanceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UpdateAppearanceDefaultTypeInternal() {}
  union {
    C2S_UpdateAppearance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UpdateAppearanceDefaultTypeInternal _C2S_UpdateAppearance_default_instance_;
PROTOBUF_CONSTEXPR S2C_UpdateAppearance::S2C_UpdateAppearance(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_UpdateAppearanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UpdateAppearanceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UpdateAppearanceDefaultTypeInternal() {}
  union {
    S2C_UpdateAppearance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UpdateAppearanceDefaultTypeInternal _S2C_UpdateAppearance_default_instance_;
PROTOBUF_CONSTEXPR C2S_DeleteCharacter::C2S_DeleteCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_DeleteCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_DeleteCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_DeleteCharacterDefaultTypeInternal() {}
  union {
    C2S_DeleteCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_DeleteCharacterDefaultTypeInternal _C2S_DeleteCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_DeleteCharacter::S2C_DeleteCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DeleteCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DeleteCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DeleteCharacterDefaultTypeInternal() {}
  union {
    S2C_DeleteCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DeleteCharacterDefaultTypeInternal _S2C_DeleteCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_UpdateNickName::C2S_UpdateNickName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.new_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_UpdateNickNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UpdateNickNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UpdateNickNameDefaultTypeInternal() {}
  union {
    C2S_UpdateNickName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UpdateNickNameDefaultTypeInternal _C2S_UpdateNickName_default_instance_;
PROTOBUF_CONSTEXPR S2C_UpdateNickName::S2C_UpdateNickName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_UpdateNickNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UpdateNickNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UpdateNickNameDefaultTypeInternal() {}
  union {
    S2C_UpdateNickName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UpdateNickNameDefaultTypeInternal _S2C_UpdateNickName_default_instance_;
PROTOBUF_CONSTEXPR C2S_TravelServer::C2S_TravelServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_TravelServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_TravelServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_TravelServerDefaultTypeInternal() {}
  union {
    C2S_TravelServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_TravelServerDefaultTypeInternal _C2S_TravelServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_TravelServer::S2C_TravelServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_TravelServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_TravelServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_TravelServerDefaultTypeInternal() {}
  union {
    S2C_TravelServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_TravelServerDefaultTypeInternal _S2C_TravelServer_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_IdentityPacket_2eproto[23];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_IdentityPacket_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_IdentityPacket_2eproto = nullptr;

const uint32_t TableStruct_IdentityPacket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterIdentityServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterIdentityServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterIdentityServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterIdentityServer, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterIdentityServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveIdentityServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveIdentityServer, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveIdentityServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveIdentityServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveIdentityServer, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveIdentityServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _impl_.user_password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.user_password_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.user_email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singup, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singup, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EmailVerified, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EmailVerified, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EmailVerified, _impl_.verified_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EmailVerified, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EmailVerified, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EmailVerified, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _impl_.ip_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _impl_.port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadCharacters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadCharacters, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadCharacters, _impl_.server_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.appearance_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.eqipment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.appearance_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.server_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateCharacter, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateAppearance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateAppearance, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateAppearance, _impl_.appearance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateAppearance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateAppearance, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateAppearance, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteCharacter, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteCharacter, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _impl_.new_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateNickName, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateNickName, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_TravelServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_TravelServer, _impl_.remote_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_TravelServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_TravelServer, _impl_.error_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::C2S_EnterIdentityServer)},
  { 7, -1, -1, sizeof(::Protocol::S2C_EnterIdentityServer)},
  { 15, -1, -1, sizeof(::Protocol::C2S_LeaveIdentityServer)},
  { 23, -1, -1, sizeof(::Protocol::S2C_LeaveIdentityServer)},
  { 31, -1, -1, sizeof(::Protocol::C2S_Singin)},
  { 40, -1, -1, sizeof(::Protocol::S2C_Singin)},
  { 49, -1, -1, sizeof(::Protocol::C2S_Singup)},
  { 59, -1, -1, sizeof(::Protocol::S2C_Singup)},
  { 67, -1, -1, sizeof(::Protocol::C2S_EmailVerified)},
  { 75, -1, -1, sizeof(::Protocol::S2C_EmailVerified)},
  { 83, -1, -1, sizeof(::Protocol::S2C_LoadServer)},
  { 91, -1, -1, sizeof(::Protocol::C2S_LoadCharacters)},
  { 99, -1, -1, sizeof(::Protocol::S2C_LoadCharacters)},
  { 109, -1, -1, sizeof(::Protocol::C2S_CreateCharacter)},
  { 119, -1, -1, sizeof(::Protocol::S2C_CreateCharacter)},
  { 127, -1, -1, sizeof(::Protocol::C2S_UpdateAppearance)},
  { 135, -1, -1, sizeof(::Protocol::S2C_UpdateAppearance)},
  { 143, -1, -1, sizeof(::Protocol::C2S_DeleteCharacter)},
  { 151, -1, -1, sizeof(::Protocol::S2C_DeleteCharacter)},
  { 159, -1, -1, sizeof(::Protocol::C2S_UpdateNickName)},
  { 167, -1, -1, sizeof(::Protocol::S2C_UpdateNickName)},
  { 175, -1, -1, sizeof(::Protocol::C2S_TravelServer)},
  { 182, -1, -1, sizeof(::Protocol::S2C_TravelServer)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_C2S_EnterIdentityServer_default_instance_._instance,
  &::Protocol::_S2C_EnterIdentityServer_default_instance_._instance,
  &::Protocol::_C2S_LeaveIdentityServer_default_instance_._instance,
  &::Protocol::_S2C_LeaveIdentityServer_default_instance_._instance,
  &::Protocol::_C2S_Singin_default_instance_._instance,
  &::Protocol::_S2C_Singin_default_instance_._instance,
  &::Protocol::_C2S_Singup_default_instance_._instance,
  &::Protocol::_S2C_Singup_default_instance_._instance,
  &::Protocol::_C2S_EmailVerified_default_instance_._instance,
  &::Protocol::_S2C_EmailVerified_default_instance_._instance,
  &::Protocol::_S2C_LoadServer_default_instance_._instance,
  &::Protocol::_C2S_LoadCharacters_default_instance_._instance,
  &::Protocol::_S2C_LoadCharacters_default_instance_._instance,
  &::Protocol::_C2S_CreateCharacter_default_instance_._instance,
  &::Protocol::_S2C_CreateCharacter_default_instance_._instance,
  &::Protocol::_C2S_UpdateAppearance_default_instance_._instance,
  &::Protocol::_S2C_UpdateAppearance_default_instance_._instance,
  &::Protocol::_C2S_DeleteCharacter_default_instance_._instance,
  &::Protocol::_S2C_DeleteCharacter_default_instance_._instance,
  &::Protocol::_C2S_UpdateNickName_default_instance_._instance,
  &::Protocol::_S2C_UpdateNickName_default_instance_._instance,
  &::Protocol::_C2S_TravelServer_default_instance_._instance,
  &::Protocol::_S2C_TravelServer_default_instance_._instance,
};

const char descriptor_table_protodef_IdentityPacket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024IdentityPacket.proto\022\010Protocol\032\022Packet"
  "Struct.proto\"(\n\027C2S_EnterIdentityServer\022"
  "\r\n\005error\030\001 \001(\005\";\n\027S2C_EnterIdentityServe"
  "r\022\021\n\tremote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\";\n\027C"
  "2S_LeaveIdentityServer\022\021\n\tremote_id\030\001 \001("
  "\003\022\r\n\005error\030\002 \001(\005\";\n\027S2C_LeaveIdentitySer"
  "ver\022\021\n\tremote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"G\n"
  "\nC2S_Singin\022\021\n\tremote_id\030\001 \001(\003\022\017\n\007user_i"
  "d\030\002 \001(\t\022\025\n\ruser_password\030\003 \001(\t\"=\n\nS2C_Si"
  "ngin\022\021\n\tremote_id\030\001 \001(\003\022\r\n\005token\030\002 \001(\t\022\r"
  "\n\005error\030\003 \001(\005\"[\n\nC2S_Singup\022\021\n\tremote_id"
  "\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\t\022\025\n\ruser_password"
  "\030\003 \001(\t\022\022\n\nuser_email\030\004 \001(\t\".\n\nS2C_Singup"
  "\022\021\n\tremote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"=\n\021C2"
  "S_EmailVerified\022\021\n\tremote_id\030\001 \001(\003\022\025\n\rve"
  "rified_code\030\002 \001(\t\"5\n\021S2C_EmailVerified\022\021"
  "\n\tremote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"*\n\016S2C_"
  "LoadServer\022\n\n\002ip\030\001 \003(\t\022\014\n\004port\030\002 \003(\005\":\n\022"
  "C2S_LoadCharacters\022\021\n\tremote_id\030\001 \001(\003\022\021\n"
  "\tserver_id\030\002 \001(\005\"\231\001\n\022S2C_LoadCharacters\022"
  "\021\n\tremote_id\030\001 \001(\003\022\014\n\004name\030\002 \003(\014\0222\n\nappe"
  "arance\030\003 \003(\0132\036.Protocol.SCharacterAppear"
  "ance\022.\n\010eqipment\030\004 \003(\0132\034.Protocol.SChara"
  "cterEqipment\"}\n\023C2S_CreateCharacter\022\021\n\tr"
  "emote_id\030\001 \001(\003\022\014\n\004name\030\002 \001(\014\0222\n\nappearan"
  "ce\030\003 \001(\0132\036.Protocol.SCharacterAppearance"
  "\022\021\n\tserver_id\030\004 \001(\005\"7\n\023S2C_CreateCharact"
  "er\022\021\n\tremote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"]\n\024"
  "C2S_UpdateAppearance\022\021\n\tremote_id\030\001 \001(\003\022"
  "2\n\nappearance\030\002 \001(\0132\036.Protocol.SCharacte"
  "rAppearance\"8\n\024S2C_UpdateAppearance\022\021\n\tr"
  "emote_id\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"6\n\023C2S_Del"
  "eteCharacter\022\021\n\tremote_id\030\001 \001(\003\022\014\n\004name\030"
  "\002 \001(\014\"7\n\023S2C_DeleteCharacter\022\021\n\tremote_i"
  "d\030\001 \001(\003\022\r\n\005error\030\002 \001(\005\"9\n\022C2S_UpdateNick"
  "Name\022\021\n\tremote_id\030\001 \001(\003\022\020\n\010new_name\030\002 \001("
  "\014\"6\n\022S2C_UpdateNickName\022\021\n\tremote_id\030\001 \001"
  "(\003\022\r\n\005error\030\002 \001(\005\"%\n\020C2S_TravelServer\022\021\n"
  "\tremote_id\030\001 \001(\003\"!\n\020S2C_TravelServer\022\r\n\005"
  "error\030\001 \001(\005b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_IdentityPacket_2eproto_deps[1] = {
  &::descriptor_table_PacketStruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_IdentityPacket_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_IdentityPacket_2eproto = {
    false, false, 1579, descriptor_table_protodef_IdentityPacket_2eproto,
    "IdentityPacket.proto",
    &descriptor_table_IdentityPacket_2eproto_once, descriptor_table_IdentityPacket_2eproto_deps, 1, 23,
    schemas, file_default_instances, TableStruct_IdentityPacket_2eproto::offsets,
    file_level_metadata_IdentityPacket_2eproto, file_level_enum_descriptors_IdentityPacket_2eproto,
    file_level_service_descriptors_IdentityPacket_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_IdentityPacket_2eproto_getter() {
  return &descriptor_table_IdentityPacket_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_IdentityPacket_2eproto(&descriptor_table_IdentityPacket_2eproto);
namespace Protocol {

// ===================================================================

class C2S_EnterIdentityServer::_Internal {
 public:
};

C2S_EnterIdentityServer::C2S_EnterIdentityServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EnterIdentityServer)
}
C2S_EnterIdentityServer::C2S_EnterIdentityServer(const C2S_EnterIdentityServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_EnterIdentityServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EnterIdentityServer)
}

inline void C2S_EnterIdentityServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_EnterIdentityServer::~C2S_EnterIdentityServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_EnterIdentityServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_EnterIdentityServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_EnterIdentityServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_EnterIdentityServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_EnterIdentityServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_EnterIdentityServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_EnterIdentityServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_EnterIdentityServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_EnterIdentityServer)
  return target;
}

size_t C2S_EnterIdentityServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_EnterIdentityServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EnterIdentityServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_EnterIdentityServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EnterIdentityServer::GetClassData() const { return &_class_data_; }


void C2S_EnterIdentityServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_EnterIdentityServer*>(&to_msg);
  auto& from = static_cast<const C2S_EnterIdentityServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_EnterIdentityServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_EnterIdentityServer::CopyFrom(const C2S_EnterIdentityServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_EnterIdentityServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_EnterIdentityServer::IsInitialized() const {
  return true;
}

void C2S_EnterIdentityServer::InternalSwap(C2S_EnterIdentityServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_EnterIdentityServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[0]);
}

// ===================================================================

class S2C_EnterIdentityServer::_Internal {
 public:
};

S2C_EnterIdentityServer::S2C_EnterIdentityServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EnterIdentityServer)
}
S2C_EnterIdentityServer::S2C_EnterIdentityServer(const S2C_EnterIdentityServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_EnterIdentityServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EnterIdentityServer)
}

inline void S2C_EnterIdentityServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_EnterIdentityServer::~S2C_EnterIdentityServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EnterIdentityServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_EnterIdentityServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_EnterIdentityServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_EnterIdentityServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EnterIdentityServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EnterIdentityServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EnterIdentityServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EnterIdentityServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EnterIdentityServer)
  return target;
}

size_t S2C_EnterIdentityServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EnterIdentityServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EnterIdentityServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_EnterIdentityServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EnterIdentityServer::GetClassData() const { return &_class_data_; }


void S2C_EnterIdentityServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_EnterIdentityServer*>(&to_msg);
  auto& from = static_cast<const S2C_EnterIdentityServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EnterIdentityServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EnterIdentityServer::CopyFrom(const S2C_EnterIdentityServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EnterIdentityServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EnterIdentityServer::IsInitialized() const {
  return true;
}

void S2C_EnterIdentityServer::InternalSwap(S2C_EnterIdentityServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_EnterIdentityServer, _impl_.error_)
      + sizeof(S2C_EnterIdentityServer::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_EnterIdentityServer, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EnterIdentityServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[1]);
}

// ===================================================================

class C2S_LeaveIdentityServer::_Internal {
 public:
};

C2S_LeaveIdentityServer::C2S_LeaveIdentityServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LeaveIdentityServer)
}
C2S_LeaveIdentityServer::C2S_LeaveIdentityServer(const C2S_LeaveIdentityServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_LeaveIdentityServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LeaveIdentityServer)
}

inline void C2S_LeaveIdentityServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_LeaveIdentityServer::~C2S_LeaveIdentityServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_LeaveIdentityServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_LeaveIdentityServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_LeaveIdentityServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_LeaveIdentityServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_LeaveIdentityServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_LeaveIdentityServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_LeaveIdentityServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_LeaveIdentityServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_LeaveIdentityServer)
  return target;
}

size_t C2S_LeaveIdentityServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_LeaveIdentityServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LeaveIdentityServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_LeaveIdentityServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LeaveIdentityServer::GetClassData() const { return &_class_data_; }


void C2S_LeaveIdentityServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_LeaveIdentityServer*>(&to_msg);
  auto& from = static_cast<const C2S_LeaveIdentityServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_LeaveIdentityServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_LeaveIdentityServer::CopyFrom(const C2S_LeaveIdentityServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_LeaveIdentityServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LeaveIdentityServer::IsInitialized() const {
  return true;
}

void C2S_LeaveIdentityServer::InternalSwap(C2S_LeaveIdentityServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_LeaveIdentityServer, _impl_.error_)
      + sizeof(C2S_LeaveIdentityServer::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(C2S_LeaveIdentityServer, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_LeaveIdentityServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[2]);
}

// ===================================================================

class S2C_LeaveIdentityServer::_Internal {
 public:
};

S2C_LeaveIdentityServer::S2C_LeaveIdentityServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LeaveIdentityServer)
}
S2C_LeaveIdentityServer::S2C_LeaveIdentityServer(const S2C_LeaveIdentityServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LeaveIdentityServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LeaveIdentityServer)
}

inline void S2C_LeaveIdentityServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LeaveIdentityServer::~S2C_LeaveIdentityServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LeaveIdentityServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LeaveIdentityServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_LeaveIdentityServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LeaveIdentityServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LeaveIdentityServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LeaveIdentityServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LeaveIdentityServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LeaveIdentityServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LeaveIdentityServer)
  return target;
}

size_t S2C_LeaveIdentityServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LeaveIdentityServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LeaveIdentityServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LeaveIdentityServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LeaveIdentityServer::GetClassData() const { return &_class_data_; }


void S2C_LeaveIdentityServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LeaveIdentityServer*>(&to_msg);
  auto& from = static_cast<const S2C_LeaveIdentityServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LeaveIdentityServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LeaveIdentityServer::CopyFrom(const S2C_LeaveIdentityServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LeaveIdentityServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LeaveIdentityServer::IsInitialized() const {
  return true;
}

void S2C_LeaveIdentityServer::InternalSwap(S2C_LeaveIdentityServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_LeaveIdentityServer, _impl_.error_)
      + sizeof(S2C_LeaveIdentityServer::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_LeaveIdentityServer, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LeaveIdentityServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[3]);
}

// ===================================================================

class C2S_Singin::_Internal {
 public:
};

C2S_Singin::C2S_Singin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_Singin)
}
C2S_Singin::C2S_Singin(const C2S_Singin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_Singin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_password_){}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_password().empty()) {
    _this->_impl_.user_password_.Set(from._internal_user_password(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_Singin)
}

inline void C2S_Singin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_password_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_Singin::~C2S_Singin() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_Singin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_Singin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.user_password_.Destroy();
}

void C2S_Singin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_Singin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_Singin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.user_password_.ClearToEmpty();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_Singin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singin.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_user_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singin.user_password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_Singin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_Singin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singin.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string user_password = 3;
  if (!this->_internal_user_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_password().data(), static_cast<int>(this->_internal_user_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singin.user_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_Singin)
  return target;
}

size_t C2S_Singin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_Singin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string user_password = 3;
  if (!this->_internal_user_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_password());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_Singin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_Singin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_Singin::GetClassData() const { return &_class_data_; }


void C2S_Singin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_Singin*>(&to_msg);
  auto& from = static_cast<const C2S_Singin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_Singin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_user_password().empty()) {
    _this->_internal_set_user_password(from._internal_user_password());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Singin::CopyFrom(const C2S_Singin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_Singin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Singin::IsInitialized() const {
  return true;
}

void C2S_Singin::InternalSwap(C2S_Singin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_password_, lhs_arena,
      &other->_impl_.user_password_, rhs_arena
  );
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_Singin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[4]);
}

// ===================================================================

class S2C_Singin::_Internal {
 public:
};

S2C_Singin::S2C_Singin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_Singin)
}
S2C_Singin::S2C_Singin(const S2C_Singin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_Singin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_Singin)
}

inline void S2C_Singin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2C_Singin::~S2C_Singin() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_Singin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_Singin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}

void S2C_Singin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_Singin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_Singin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_Singin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.S2C_Singin.token"));
        } else
          goto handle_unusual;
        continue;
      // int32 error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_Singin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_Singin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // string token = 2;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_Singin.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_Singin)
  return target;
}

size_t S2C_Singin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_Singin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_Singin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_Singin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_Singin::GetClassData() const { return &_class_data_; }


void S2C_Singin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_Singin*>(&to_msg);
  auto& from = static_cast<const S2C_Singin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_Singin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_Singin::CopyFrom(const S2C_Singin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_Singin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Singin::IsInitialized() const {
  return true;
}

void S2C_Singin::InternalSwap(S2C_Singin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_Singin, _impl_.error_)
      + sizeof(S2C_Singin::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_Singin, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_Singin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[5]);
}

// ===================================================================

class C2S_Singup::_Internal {
 public:
};

C2S_Singup::C2S_Singup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_Singup)
}
C2S_Singup::C2S_Singup(const C2S_Singup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_Singup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_password_){}
    , decltype(_impl_.user_email_){}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_password().empty()) {
    _this->_impl_.user_password_.Set(from._internal_user_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_email().empty()) {
    _this->_impl_.user_email_.Set(from._internal_user_email(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_Singup)
}

inline void C2S_Singup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.user_password_){}
    , decltype(_impl_.user_email_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_Singup::~C2S_Singup() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_Singup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_Singup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.user_password_.Destroy();
  _impl_.user_email_.Destroy();
}

void C2S_Singup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_Singup::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_Singup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.user_password_.ClearToEmpty();
  _impl_.user_email_.ClearToEmpty();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_Singup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_user_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.user_password"));
        } else
          goto handle_unusual;
        continue;
      // string user_email = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_user_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.user_email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_Singup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_Singup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string user_password = 3;
  if (!this->_internal_user_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_password().data(), static_cast<int>(this->_internal_user_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.user_password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user_password(), target);
  }

  // string user_email = 4;
  if (!this->_internal_user_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_email().data(), static_cast<int>(this->_internal_user_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.user_email");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_user_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_Singup)
  return target;
}

size_t C2S_Singup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_Singup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string user_password = 3;
  if (!this->_internal_user_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_password());
  }

  // string user_email = 4;
  if (!this->_internal_user_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_email());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_Singup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_Singup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_Singup::GetClassData() const { return &_class_data_; }


void C2S_Singup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_Singup*>(&to_msg);
  auto& from = static_cast<const C2S_Singup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_Singup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_user_password().empty()) {
    _this->_internal_set_user_password(from._internal_user_password());
  }
  if (!from._internal_user_email().empty()) {
    _this->_internal_set_user_email(from._internal_user_email());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Singup::CopyFrom(const C2S_Singup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_Singup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Singup::IsInitialized() const {
  return true;
}

void C2S_Singup::InternalSwap(C2S_Singup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_password_, lhs_arena,
      &other->_impl_.user_password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_email_, lhs_arena,
      &other->_impl_.user_email_, rhs_arena
  );
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_Singup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[6]);
}

// ===================================================================

class S2C_Singup::_Internal {
 public:
};

S2C_Singup::S2C_Singup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_Singup)
}
S2C_Singup::S2C_Singup(const S2C_Singup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_Singup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_Singup)
}

inline void S2C_Singup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_Singup::~S2C_Singup() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_Singup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_Singup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_Singup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_Singup::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_Singup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_Singup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_Singup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_Singup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_Singup)
  return target;
}

size_t S2C_Singup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_Singup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_Singup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_Singup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_Singup::GetClassData() const { return &_class_data_; }


void S2C_Singup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_Singup*>(&to_msg);
  auto& from = static_cast<const S2C_Singup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_Singup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_Singup::CopyFrom(const S2C_Singup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_Singup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Singup::IsInitialized() const {
  return true;
}

void S2C_Singup::InternalSwap(S2C_Singup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_Singup, _impl_.error_)
      + sizeof(S2C_Singup::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_Singup, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_Singup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[7]);
}

// ===================================================================

class C2S_EmailVerified::_Internal {
 public:
};

C2S_EmailVerified::C2S_EmailVerified(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EmailVerified)
}
C2S_EmailVerified::C2S_EmailVerified(const C2S_EmailVerified& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_EmailVerified* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.verified_code_){}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.verified_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verified_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_verified_code().empty()) {
    _this->_impl_.verified_code_.Set(from._internal_verified_code(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EmailVerified)
}

inline void C2S_EmailVerified::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.verified_code_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.verified_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verified_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_EmailVerified::~C2S_EmailVerified() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_EmailVerified)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_EmailVerified::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.verified_code_.Destroy();
}

void C2S_EmailVerified::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_EmailVerified::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_EmailVerified)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.verified_code_.ClearToEmpty();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_EmailVerified::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string verified_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_verified_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_EmailVerified.verified_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_EmailVerified::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_EmailVerified)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // string verified_code = 2;
  if (!this->_internal_verified_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_verified_code().data(), static_cast<int>(this->_internal_verified_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_EmailVerified.verified_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_verified_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_EmailVerified)
  return target;
}

size_t C2S_EmailVerified::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_EmailVerified)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string verified_code = 2;
  if (!this->_internal_verified_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_verified_code());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EmailVerified::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_EmailVerified::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EmailVerified::GetClassData() const { return &_class_data_; }


void C2S_EmailVerified::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_EmailVerified*>(&to_msg);
  auto& from = static_cast<const C2S_EmailVerified&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_EmailVerified)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_verified_code().empty()) {
    _this->_internal_set_verified_code(from._internal_verified_code());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_EmailVerified::CopyFrom(const C2S_EmailVerified& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_EmailVerified)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_EmailVerified::IsInitialized() const {
  return true;
}

void C2S_EmailVerified::InternalSwap(C2S_EmailVerified* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.verified_code_, lhs_arena,
      &other->_impl_.verified_code_, rhs_arena
  );
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_EmailVerified::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[8]);
}

// ===================================================================

class S2C_EmailVerified::_Internal {
 public:
};

S2C_EmailVerified::S2C_EmailVerified(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EmailVerified)
}
S2C_EmailVerified::S2C_EmailVerified(const S2C_EmailVerified& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_EmailVerified* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EmailVerified)
}

inline void S2C_EmailVerified::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_EmailVerified::~S2C_EmailVerified() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EmailVerified)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_EmailVerified::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_EmailVerified::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_EmailVerified::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EmailVerified)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EmailVerified::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EmailVerified::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EmailVerified)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EmailVerified)
  return target;
}

size_t S2C_EmailVerified::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EmailVerified)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EmailVerified::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_EmailVerified::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EmailVerified::GetClassData() const { return &_class_data_; }


void S2C_EmailVerified::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_EmailVerified*>(&to_msg);
  auto& from = static_cast<const S2C_EmailVerified&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EmailVerified)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EmailVerified::CopyFrom(const S2C_EmailVerified& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EmailVerified)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EmailVerified::IsInitialized() const {
  return true;
}

void S2C_EmailVerified::InternalSwap(S2C_EmailVerified* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_EmailVerified, _impl_.error_)
      + sizeof(S2C_EmailVerified::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_EmailVerified, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EmailVerified::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[9]);
}

// ===================================================================

class S2C_LoadServer::_Internal {
 public:
};

S2C_LoadServer::S2C_LoadServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoadServer)
}
S2C_LoadServer::S2C_LoadServer(const S2C_LoadServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LoadServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ip_){from._impl_.ip_}
    , decltype(_impl_.port_){from._impl_.port_}
    , /*decltype(_impl_._port_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoadServer)
}

inline void S2C_LoadServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ip_){arena}
    , decltype(_impl_.port_){arena}
    , /*decltype(_impl_._port_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LoadServer::~S2C_LoadServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoadServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LoadServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ip_.~RepeatedPtrField();
  _impl_.port_.~RepeatedField();
}

void S2C_LoadServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LoadServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoadServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.Clear();
  _impl_.port_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoadServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ip();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "Protocol.S2C_LoadServer.ip"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_port(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_port(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoadServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoadServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string ip = 1;
  for (int i = 0, n = this->_internal_ip_size(); i < n; i++) {
    const auto& s = this->_internal_ip(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_LoadServer.ip");
    target = stream->WriteString(1, s, target);
  }

  // repeated int32 port = 2;
  {
    int byte_size = _impl_._port_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_port(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoadServer)
  return target;
}

size_t S2C_LoadServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoadServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ip = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.ip_.size());
  for (int i = 0, n = _impl_.ip_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.ip_.Get(i));
  }

  // repeated int32 port = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.port_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._port_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoadServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LoadServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoadServer::GetClassData() const { return &_class_data_; }


void S2C_LoadServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LoadServer*>(&to_msg);
  auto& from = static_cast<const S2C_LoadServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoadServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ip_.MergeFrom(from._impl_.ip_);
  _this->_impl_.port_.MergeFrom(from._impl_.port_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoadServer::CopyFrom(const S2C_LoadServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoadServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoadServer::IsInitialized() const {
  return true;
}

void S2C_LoadServer::InternalSwap(S2C_LoadServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ip_.InternalSwap(&other->_impl_.ip_);
  _impl_.port_.InternalSwap(&other->_impl_.port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoadServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[10]);
}

// ===================================================================

class C2S_LoadCharacters::_Internal {
 public:
};

C2S_LoadCharacters::C2S_LoadCharacters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LoadCharacters)
}
C2S_LoadCharacters::C2S_LoadCharacters(const C2S_LoadCharacters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_LoadCharacters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.server_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.server_id_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.server_id_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LoadCharacters)
}

inline void C2S_LoadCharacters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.server_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_LoadCharacters::~C2S_LoadCharacters() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_LoadCharacters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_LoadCharacters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_LoadCharacters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_LoadCharacters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_LoadCharacters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.server_id_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.server_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_LoadCharacters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 server_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.server_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_LoadCharacters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_LoadCharacters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 server_id = 2;
  if (this->_internal_server_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_server_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_LoadCharacters)
  return target;
}

size_t C2S_LoadCharacters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_LoadCharacters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 server_id = 2;
  if (this->_internal_server_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_server_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LoadCharacters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_LoadCharacters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LoadCharacters::GetClassData() const { return &_class_data_; }


void C2S_LoadCharacters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_LoadCharacters*>(&to_msg);
  auto& from = static_cast<const C2S_LoadCharacters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_LoadCharacters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_server_id() != 0) {
    _this->_internal_set_server_id(from._internal_server_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_LoadCharacters::CopyFrom(const C2S_LoadCharacters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_LoadCharacters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LoadCharacters::IsInitialized() const {
  return true;
}

void C2S_LoadCharacters::InternalSwap(C2S_LoadCharacters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_LoadCharacters, _impl_.server_id_)
      + sizeof(C2S_LoadCharacters::_impl_.server_id_)
      - PROTOBUF_FIELD_OFFSET(C2S_LoadCharacters, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_LoadCharacters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[11]);
}

// ===================================================================

class S2C_LoadCharacters::_Internal {
 public:
};

void S2C_LoadCharacters::clear_appearance() {
  _impl_.appearance_.Clear();
}
void S2C_LoadCharacters::clear_eqipment() {
  _impl_.eqipment_.Clear();
}
S2C_LoadCharacters::S2C_LoadCharacters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoadCharacters)
}
S2C_LoadCharacters::S2C_LoadCharacters(const S2C_LoadCharacters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LoadCharacters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){from._impl_.name_}
    , decltype(_impl_.appearance_){from._impl_.appearance_}
    , decltype(_impl_.eqipment_){from._impl_.eqipment_}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoadCharacters)
}

inline void S2C_LoadCharacters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){arena}
    , decltype(_impl_.appearance_){arena}
    , decltype(_impl_.eqipment_){arena}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LoadCharacters::~S2C_LoadCharacters() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoadCharacters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LoadCharacters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.~RepeatedPtrField();
  _impl_.appearance_.~RepeatedPtrField();
  _impl_.eqipment_.~RepeatedPtrField();
}

void S2C_LoadCharacters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LoadCharacters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoadCharacters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.Clear();
  _impl_.appearance_.Clear();
  _impl_.eqipment_.Clear();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoadCharacters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_name();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.SCharacterAppearance appearance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_appearance(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.SCharacterEqipment eqipment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_eqipment(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoadCharacters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoadCharacters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // repeated bytes name = 2;
  for (int i = 0, n = this->_internal_name_size(); i < n; i++) {
    const auto& s = this->_internal_name(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated .Protocol.SCharacterAppearance appearance = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_appearance_size()); i < n; i++) {
    const auto& repfield = this->_internal_appearance(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Protocol.SCharacterEqipment eqipment = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_eqipment_size()); i < n; i++) {
    const auto& repfield = this->_internal_eqipment(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoadCharacters)
  return target;
}

size_t S2C_LoadCharacters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoadCharacters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes name = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.name_.size());
  for (int i = 0, n = _impl_.name_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.name_.Get(i));
  }

  // repeated .Protocol.SCharacterAppearance appearance = 3;
  total_size += 1UL * this->_internal_appearance_size();
  for (const auto& msg : this->_impl_.appearance_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Protocol.SCharacterEqipment eqipment = 4;
  total_size += 1UL * this->_internal_eqipment_size();
  for (const auto& msg : this->_impl_.eqipment_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoadCharacters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LoadCharacters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoadCharacters::GetClassData() const { return &_class_data_; }


void S2C_LoadCharacters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LoadCharacters*>(&to_msg);
  auto& from = static_cast<const S2C_LoadCharacters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoadCharacters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.name_.MergeFrom(from._impl_.name_);
  _this->_impl_.appearance_.MergeFrom(from._impl_.appearance_);
  _this->_impl_.eqipment_.MergeFrom(from._impl_.eqipment_);
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoadCharacters::CopyFrom(const S2C_LoadCharacters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoadCharacters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoadCharacters::IsInitialized() const {
  return true;
}

void S2C_LoadCharacters::InternalSwap(S2C_LoadCharacters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.name_.InternalSwap(&other->_impl_.name_);
  _impl_.appearance_.InternalSwap(&other->_impl_.appearance_);
  _impl_.eqipment_.InternalSwap(&other->_impl_.eqipment_);
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoadCharacters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[12]);
}

// ===================================================================

class C2S_CreateCharacter::_Internal {
 public:
  static const ::Protocol::SCharacterAppearance& appearance(const C2S_CreateCharacter* msg);
};

const ::Protocol::SCharacterAppearance&
C2S_CreateCharacter::_Internal::appearance(const C2S_CreateCharacter* msg) {
  return *msg->_impl_.appearance_;
}
void C2S_CreateCharacter::clear_appearance() {
  if (GetArenaForAllocation() == nullptr && _impl_.appearance_ != nullptr) {
    delete _impl_.appearance_;
  }
  _impl_.appearance_ = nullptr;
}
C2S_CreateCharacter::C2S_CreateCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_CreateCharacter)
}
C2S_CreateCharacter::C2S_CreateCharacter(const C2S_CreateCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_CreateCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.server_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_appearance()) {
    _this->_impl_.appearance_ = new ::Protocol::SCharacterAppearance(*from._impl_.appearance_);
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.server_id_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.server_id_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_CreateCharacter)
}

inline void C2S_CreateCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.server_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_CreateCharacter::~C2S_CreateCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_CreateCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_CreateCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.appearance_;
}

void C2S_CreateCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_CreateCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_CreateCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.appearance_ != nullptr) {
    delete _impl_.appearance_;
  }
  _impl_.appearance_ = nullptr;
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.server_id_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.server_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_CreateCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SCharacterAppearance appearance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_appearance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 server_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.server_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_CreateCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_CreateCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .Protocol.SCharacterAppearance appearance = 3;
  if (this->_internal_has_appearance()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::appearance(this),
        _Internal::appearance(this).GetCachedSize(), target, stream);
  }

  // int32 server_id = 4;
  if (this->_internal_server_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_server_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_CreateCharacter)
  return target;
}

size_t C2S_CreateCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_CreateCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // .Protocol.SCharacterAppearance appearance = 3;
  if (this->_internal_has_appearance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.appearance_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 server_id = 4;
  if (this->_internal_server_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_server_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_CreateCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_CreateCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_CreateCharacter::GetClassData() const { return &_class_data_; }


void C2S_CreateCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_CreateCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_CreateCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_CreateCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_appearance()) {
    _this->_internal_mutable_appearance()->::Protocol::SCharacterAppearance::MergeFrom(
        from._internal_appearance());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_server_id() != 0) {
    _this->_internal_set_server_id(from._internal_server_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_CreateCharacter::CopyFrom(const C2S_CreateCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_CreateCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_CreateCharacter::IsInitialized() const {
  return true;
}

void C2S_CreateCharacter::InternalSwap(C2S_CreateCharacter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_CreateCharacter, _impl_.server_id_)
      + sizeof(C2S_CreateCharacter::_impl_.server_id_)
      - PROTOBUF_FIELD_OFFSET(C2S_CreateCharacter, _impl_.appearance_)>(
          reinterpret_cast<char*>(&_impl_.appearance_),
          reinterpret_cast<char*>(&other->_impl_.appearance_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_CreateCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[13]);
}

// ===================================================================

class S2C_CreateCharacter::_Internal {
 public:
};

S2C_CreateCharacter::S2C_CreateCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_CreateCharacter)
}
S2C_CreateCharacter::S2C_CreateCharacter(const S2C_CreateCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_CreateCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_CreateCharacter)
}

inline void S2C_CreateCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_CreateCharacter::~S2C_CreateCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_CreateCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_CreateCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_CreateCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_CreateCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_CreateCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_CreateCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_CreateCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_CreateCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_CreateCharacter)
  return target;
}

size_t S2C_CreateCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_CreateCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_CreateCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_CreateCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_CreateCharacter::GetClassData() const { return &_class_data_; }


void S2C_CreateCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_CreateCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_CreateCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_CreateCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_CreateCharacter::CopyFrom(const S2C_CreateCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_CreateCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_CreateCharacter::IsInitialized() const {
  return true;
}

void S2C_CreateCharacter::InternalSwap(S2C_CreateCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_CreateCharacter, _impl_.error_)
      + sizeof(S2C_CreateCharacter::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_CreateCharacter, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_CreateCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[14]);
}

// ===================================================================

class C2S_UpdateAppearance::_Internal {
 public:
  static const ::Protocol::SCharacterAppearance& appearance(const C2S_UpdateAppearance* msg);
};

const ::Protocol::SCharacterAppearance&
C2S_UpdateAppearance::_Internal::appearance(const C2S_UpdateAppearance* msg) {
  return *msg->_impl_.appearance_;
}
void C2S_UpdateAppearance::clear_appearance() {
  if (GetArenaForAllocation() == nullptr && _impl_.appearance_ != nullptr) {
    delete _impl_.appearance_;
  }
  _impl_.appearance_ = nullptr;
}
C2S_UpdateAppearance::C2S_UpdateAppearance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_UpdateAppearance)
}
C2S_UpdateAppearance::C2S_UpdateAppearance(const C2S_UpdateAppearance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_UpdateAppearance* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_appearance()) {
    _this->_impl_.appearance_ = new ::Protocol::SCharacterAppearance(*from._impl_.appearance_);
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_UpdateAppearance)
}

inline void C2S_UpdateAppearance::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_UpdateAppearance::~C2S_UpdateAppearance() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_UpdateAppearance)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_UpdateAppearance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.appearance_;
}

void C2S_UpdateAppearance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_UpdateAppearance::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_UpdateAppearance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.appearance_ != nullptr) {
    delete _impl_.appearance_;
  }
  _impl_.appearance_ = nullptr;
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_UpdateAppearance::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SCharacterAppearance appearance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_appearance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_UpdateAppearance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_UpdateAppearance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // .Protocol.SCharacterAppearance appearance = 2;
  if (this->_internal_has_appearance()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::appearance(this),
        _Internal::appearance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_UpdateAppearance)
  return target;
}

size_t C2S_UpdateAppearance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_UpdateAppearance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SCharacterAppearance appearance = 2;
  if (this->_internal_has_appearance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.appearance_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_UpdateAppearance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_UpdateAppearance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_UpdateAppearance::GetClassData() const { return &_class_data_; }


void C2S_UpdateAppearance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_UpdateAppearance*>(&to_msg);
  auto& from = static_cast<const C2S_UpdateAppearance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_UpdateAppearance)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_appearance()) {
    _this->_internal_mutable_appearance()->::Protocol::SCharacterAppearance::MergeFrom(
        from._internal_appearance());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UpdateAppearance::CopyFrom(const C2S_UpdateAppearance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_UpdateAppearance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateAppearance::IsInitialized() const {
  return true;
}

void C2S_UpdateAppearance::InternalSwap(C2S_UpdateAppearance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_UpdateAppearance, _impl_.remote_id_)
      + sizeof(C2S_UpdateAppearance::_impl_.remote_id_)
      - PROTOBUF_FIELD_OFFSET(C2S_UpdateAppearance, _impl_.appearance_)>(
          reinterpret_cast<char*>(&_impl_.appearance_),
          reinterpret_cast<char*>(&other->_impl_.appearance_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_UpdateAppearance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[15]);
}

// ===================================================================

class S2C_UpdateAppearance::_Internal {
 public:
};

S2C_UpdateAppearance::S2C_UpdateAppearance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_UpdateAppearance)
}
S2C_UpdateAppearance::S2C_UpdateAppearance(const S2C_UpdateAppearance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_UpdateAppearance* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_UpdateAppearance)
}

inline void S2C_UpdateAppearance::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_UpdateAppearance::~S2C_UpdateAppearance() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_UpdateAppearance)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_UpdateAppearance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_UpdateAppearance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_UpdateAppearance::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_UpdateAppearance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_UpdateAppearance::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_UpdateAppearance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_UpdateAppearance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_UpdateAppearance)
  return target;
}

size_t S2C_UpdateAppearance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_UpdateAppearance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_UpdateAppearance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_UpdateAppearance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_UpdateAppearance::GetClassData() const { return &_class_data_; }


void S2C_UpdateAppearance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_UpdateAppearance*>(&to_msg);
  auto& from = static_cast<const S2C_UpdateAppearance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_UpdateAppearance)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UpdateAppearance::CopyFrom(const S2C_UpdateAppearance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_UpdateAppearance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateAppearance::IsInitialized() const {
  return true;
}

void S2C_UpdateAppearance::InternalSwap(S2C_UpdateAppearance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_UpdateAppearance, _impl_.error_)
      + sizeof(S2C_UpdateAppearance::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_UpdateAppearance, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_UpdateAppearance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[16]);
}

// ===================================================================

class C2S_DeleteCharacter::_Internal {
 public:
};

C2S_DeleteCharacter::C2S_DeleteCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_DeleteCharacter)
}
C2S_DeleteCharacter::C2S_DeleteCharacter(const C2S_DeleteCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_DeleteCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_DeleteCharacter)
}

inline void C2S_DeleteCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_DeleteCharacter::~C2S_DeleteCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_DeleteCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_DeleteCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void C2S_DeleteCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_DeleteCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_DeleteCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_DeleteCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_DeleteCharacter)
  return target;
}

size_t C2S_DeleteCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_DeleteCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_DeleteCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_DeleteCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_DeleteCharacter::GetClassData() const { return &_class_data_; }


void C2S_DeleteCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_DeleteCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_DeleteCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_DeleteCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_DeleteCharacter::CopyFrom(const C2S_DeleteCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_DeleteCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DeleteCharacter::IsInitialized() const {
  return true;
}

void C2S_DeleteCharacter::InternalSwap(C2S_DeleteCharacter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_DeleteCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[17]);
}

// ===================================================================

class S2C_DeleteCharacter::_Internal {
 public:
};

S2C_DeleteCharacter::S2C_DeleteCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DeleteCharacter)
}
S2C_DeleteCharacter::S2C_DeleteCharacter(const S2C_DeleteCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DeleteCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DeleteCharacter)
}

inline void S2C_DeleteCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DeleteCharacter::~S2C_DeleteCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DeleteCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DeleteCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_DeleteCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DeleteCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DeleteCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DeleteCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DeleteCharacter)
  return target;
}

size_t S2C_DeleteCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DeleteCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DeleteCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DeleteCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DeleteCharacter::GetClassData() const { return &_class_data_; }


void S2C_DeleteCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DeleteCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_DeleteCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DeleteCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DeleteCharacter::CopyFrom(const S2C_DeleteCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DeleteCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DeleteCharacter::IsInitialized() const {
  return true;
}

void S2C_DeleteCharacter::InternalSwap(S2C_DeleteCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_DeleteCharacter, _impl_.error_)
      + sizeof(S2C_DeleteCharacter::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_DeleteCharacter, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DeleteCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[18]);
}

// ===================================================================

class C2S_UpdateNickName::_Internal {
 public:
};

C2S_UpdateNickName::C2S_UpdateNickName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_UpdateNickName)
}
C2S_UpdateNickName::C2S_UpdateNickName(const C2S_UpdateNickName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_UpdateNickName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.new_name_){}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_name().empty()) {
    _this->_impl_.new_name_.Set(from._internal_new_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_UpdateNickName)
}

inline void C2S_UpdateNickName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.new_name_){}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_UpdateNickName::~C2S_UpdateNickName() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_UpdateNickName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_UpdateNickName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.new_name_.Destroy();
}

void C2S_UpdateNickName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_UpdateNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_UpdateNickName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_name_.ClearToEmpty();
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_UpdateNickName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes new_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_new_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_UpdateNickName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_UpdateNickName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // bytes new_name = 2;
  if (!this->_internal_new_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_new_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_UpdateNickName)
  return target;
}

size_t C2S_UpdateNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_UpdateNickName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes new_name = 2;
  if (!this->_internal_new_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_new_name());
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_UpdateNickName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_UpdateNickName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_UpdateNickName::GetClassData() const { return &_class_data_; }


void C2S_UpdateNickName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_UpdateNickName*>(&to_msg);
  auto& from = static_cast<const C2S_UpdateNickName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_UpdateNickName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_name().empty()) {
    _this->_internal_set_new_name(from._internal_new_name());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UpdateNickName::CopyFrom(const C2S_UpdateNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_UpdateNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateNickName::IsInitialized() const {
  return true;
}

void C2S_UpdateNickName::InternalSwap(C2S_UpdateNickName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.new_name_, lhs_arena,
      &other->_impl_.new_name_, rhs_arena
  );
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_UpdateNickName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[19]);
}

// ===================================================================

class S2C_UpdateNickName::_Internal {
 public:
};

S2C_UpdateNickName::S2C_UpdateNickName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_UpdateNickName)
}
S2C_UpdateNickName::S2C_UpdateNickName(const S2C_UpdateNickName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_UpdateNickName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_UpdateNickName)
}

inline void S2C_UpdateNickName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_UpdateNickName::~S2C_UpdateNickName() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_UpdateNickName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_UpdateNickName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_UpdateNickName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_UpdateNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_UpdateNickName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_UpdateNickName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_UpdateNickName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_UpdateNickName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_UpdateNickName)
  return target;
}

size_t S2C_UpdateNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_UpdateNickName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_UpdateNickName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_UpdateNickName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_UpdateNickName::GetClassData() const { return &_class_data_; }


void S2C_UpdateNickName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_UpdateNickName*>(&to_msg);
  auto& from = static_cast<const S2C_UpdateNickName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_UpdateNickName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UpdateNickName::CopyFrom(const S2C_UpdateNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_UpdateNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateNickName::IsInitialized() const {
  return true;
}

void S2C_UpdateNickName::InternalSwap(S2C_UpdateNickName* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_UpdateNickName, _impl_.error_)
      + sizeof(S2C_UpdateNickName::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_UpdateNickName, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_UpdateNickName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[20]);
}

// ===================================================================

class C2S_TravelServer::_Internal {
 public:
};

C2S_TravelServer::C2S_TravelServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_TravelServer)
}
C2S_TravelServer::C2S_TravelServer(const C2S_TravelServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_TravelServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_TravelServer)
}

inline void C2S_TravelServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_TravelServer::~C2S_TravelServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_TravelServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_TravelServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_TravelServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_TravelServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_TravelServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_TravelServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_TravelServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_TravelServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_TravelServer)
  return target;
}

size_t C2S_TravelServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_TravelServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_TravelServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_TravelServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_TravelServer::GetClassData() const { return &_class_data_; }


void C2S_TravelServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_TravelServer*>(&to_msg);
  auto& from = static_cast<const C2S_TravelServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_TravelServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_TravelServer::CopyFrom(const C2S_TravelServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_TravelServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_TravelServer::IsInitialized() const {
  return true;
}

void C2S_TravelServer::InternalSwap(C2S_TravelServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_TravelServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[21]);
}

// ===================================================================

class S2C_TravelServer::_Internal {
 public:
};

S2C_TravelServer::S2C_TravelServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_TravelServer)
}
S2C_TravelServer::S2C_TravelServer(const S2C_TravelServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_TravelServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_TravelServer)
}

inline void S2C_TravelServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_TravelServer::~S2C_TravelServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_TravelServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_TravelServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_TravelServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_TravelServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_TravelServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_TravelServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_TravelServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_TravelServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_TravelServer)
  return target;
}

size_t S2C_TravelServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_TravelServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_TravelServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_TravelServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_TravelServer::GetClassData() const { return &_class_data_; }


void S2C_TravelServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_TravelServer*>(&to_msg);
  auto& from = static_cast<const S2C_TravelServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_TravelServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_TravelServer::CopyFrom(const S2C_TravelServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_TravelServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_TravelServer::IsInitialized() const {
  return true;
}

void S2C_TravelServer::InternalSwap(S2C_TravelServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_TravelServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[22]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EnterIdentityServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_EnterIdentityServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EnterIdentityServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EnterIdentityServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_EnterIdentityServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EnterIdentityServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LeaveIdentityServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_LeaveIdentityServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LeaveIdentityServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LeaveIdentityServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_LeaveIdentityServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LeaveIdentityServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_Singin*
Arena::CreateMaybeMessage< ::Protocol::C2S_Singin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_Singin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_Singin*
Arena::CreateMaybeMessage< ::Protocol::S2C_Singin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_Singin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_Singup*
Arena::CreateMaybeMessage< ::Protocol::C2S_Singup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_Singup >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_Singup*
Arena::CreateMaybeMessage< ::Protocol::S2C_Singup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_Singup >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EmailVerified*
Arena::CreateMaybeMessage< ::Protocol::C2S_EmailVerified >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EmailVerified >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EmailVerified*
Arena::CreateMaybeMessage< ::Protocol::S2C_EmailVerified >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EmailVerified >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoadServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_LoadServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoadServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LoadCharacters*
Arena::CreateMaybeMessage< ::Protocol::C2S_LoadCharacters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LoadCharacters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoadCharacters*
Arena::CreateMaybeMessage< ::Protocol::S2C_LoadCharacters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoadCharacters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_CreateCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_CreateCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_CreateCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_CreateCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_CreateCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_CreateCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_UpdateAppearance*
Arena::CreateMaybeMessage< ::Protocol::C2S_UpdateAppearance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_UpdateAppearance >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_UpdateAppearance*
Arena::CreateMaybeMessage< ::Protocol::S2C_UpdateAppearance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_UpdateAppearance >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_DeleteCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_DeleteCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_DeleteCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DeleteCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_DeleteCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DeleteCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_UpdateNickName*
Arena::CreateMaybeMessage< ::Protocol::C2S_UpdateNickName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_UpdateNickName >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_UpdateNickName*
Arena::CreateMaybeMessage< ::Protocol::S2C_UpdateNickName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_UpdateNickName >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_TravelServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_TravelServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_TravelServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_TravelServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_TravelServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_TravelServer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
