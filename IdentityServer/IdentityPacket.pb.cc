#if defined(_MSC_VER)
        #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
        #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
        #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
        #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
        #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used byclient of class 'type2'
        #pragma warning (disable:4267) // 'var' : conversion from 'size_t' to 'type', possible loss of data
        #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
        #pragma warning (disable:4307) // 'operator' : integral constant overflow
        #pragma warning (disable:4309) // 'conversion' : truncation of constant value
        #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was64bit shift intended?)
        #pragma warning (disable:4355) // 'this' : used in base member initializer list
        #pragma warning (disable:4506) // no definition for inline function 'function'
        #pragma warning (disable:4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
		 #pragma warning (disable:4946) // reinterpret_cast used between related classes: 'class1' and 'class2'
        #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
        #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IdentityPacket.proto

#include "IdentityPacket.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR UserData::UserData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.update_date_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.create_date_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.activate_)*/false
  , /*decltype(_impl_.confirmed_)*/false
  , /*decltype(_impl_.verified_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDataDefaultTypeInternal() {}
  union {
    UserData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDataDefaultTypeInternal _UserData_default_instance_;
PROTOBUF_CONSTEXPR SCharacterData::SCharacterData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.job_)*/0
  , /*decltype(_impl_.tribe_)*/0
  , /*decltype(_impl_.position_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SCharacterDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCharacterDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCharacterDataDefaultTypeInternal() {}
  union {
    SCharacterData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCharacterDataDefaultTypeInternal _SCharacterData_default_instance_;
PROTOBUF_CONSTEXPR SCharacterAppearance::SCharacterAppearance(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.body_color_)*/0u
  , /*decltype(_impl_.hair_color_)*/0u
  , /*decltype(_impl_.eye_color_)*/0u
  , /*decltype(_impl_.head_)*/0
  , /*decltype(_impl_.ears_)*/0
  , /*decltype(_impl_.feet_)*/0
  , /*decltype(_impl_.hair_)*/0
  , /*decltype(_impl_.facials_01_)*/0
  , /*decltype(_impl_.facials_02_)*/0
  , /*decltype(_impl_.helmet_)*/0
  , /*decltype(_impl_.shoulders_)*/0
  , /*decltype(_impl_.skirt_)*/0
  , /*decltype(_impl_.legs_)*/0
  , /*decltype(_impl_.legs_add_)*/0
  , /*decltype(_impl_.hands_)*/0
  , /*decltype(_impl_.hands_add_)*/0
  , /*decltype(_impl_.chest_)*/0
  , /*decltype(_impl_.chest_add_)*/0
  , /*decltype(_impl_.cape_)*/0
  , /*decltype(_impl_.bracers_)*/0
  , /*decltype(_impl_.bracers_add_)*/0
  , /*decltype(_impl_.boots_)*/0
  , /*decltype(_impl_.belt_)*/0
  , /*decltype(_impl_.tabard_)*/0
  , /*decltype(_impl_.back_2hl_)*/0
  , /*decltype(_impl_.back_shield_)*/0
  , /*decltype(_impl_.back_weapon_l_)*/0
  , /*decltype(_impl_.back_weapon_r_)*/0
  , /*decltype(_impl_.back_bow_)*/0
  , /*decltype(_impl_.quiver_)*/0
  , /*decltype(_impl_.weapon_r_arrow_)*/0
  , /*decltype(_impl_.weapon_shield_)*/0
  , /*decltype(_impl_.weapon_l_)*/0
  , /*decltype(_impl_.weapon_r_)*/0
  , /*decltype(_impl_.hip_l_)*/0
  , /*decltype(_impl_.hip_r_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SCharacterAppearanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SCharacterAppearanceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SCharacterAppearanceDefaultTypeInternal() {}
  union {
    SCharacterAppearance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SCharacterAppearanceDefaultTypeInternal _SCharacterAppearance_default_instance_;
PROTOBUF_CONSTEXPR C2S_EnterServer::C2S_EnterServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_EnterServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_EnterServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_EnterServerDefaultTypeInternal() {}
  union {
    C2S_EnterServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_EnterServerDefaultTypeInternal _C2S_EnterServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_EnterServer::S2C_EnterServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_EnterServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_EnterServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_EnterServerDefaultTypeInternal() {}
  union {
    S2C_EnterServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_EnterServerDefaultTypeInternal _S2C_EnterServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_LeaveServer::C2S_LeaveServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_LeaveServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LeaveServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LeaveServerDefaultTypeInternal() {}
  union {
    C2S_LeaveServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LeaveServerDefaultTypeInternal _C2S_LeaveServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_LeaveServer::S2C_LeaveServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LeaveServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LeaveServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LeaveServerDefaultTypeInternal() {}
  union {
    S2C_LeaveServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LeaveServerDefaultTypeInternal _S2C_LeaveServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_Singin::C2S_Singin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_SinginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_SinginDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_SinginDefaultTypeInternal() {}
  union {
    C2S_Singin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_SinginDefaultTypeInternal _C2S_Singin_default_instance_;
PROTOBUF_CONSTEXPR S2C_Singin::S2C_Singin(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ticket_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_SinginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_SinginDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_SinginDefaultTypeInternal() {}
  union {
    S2C_Singin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_SinginDefaultTypeInternal _S2C_Singin_default_instance_;
PROTOBUF_CONSTEXPR C2S_Singup::C2S_Singup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_SingupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_SingupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_SingupDefaultTypeInternal() {}
  union {
    C2S_Singup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_SingupDefaultTypeInternal _C2S_Singup_default_instance_;
PROTOBUF_CONSTEXPR S2C_Singup::S2C_Singup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_SingupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_SingupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_SingupDefaultTypeInternal() {}
  union {
    S2C_Singup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_SingupDefaultTypeInternal _S2C_Singup_default_instance_;
PROTOBUF_CONSTEXPR C2S_EmailVerified::C2S_EmailVerified(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.verified_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_EmailVerifiedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_EmailVerifiedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_EmailVerifiedDefaultTypeInternal() {}
  union {
    C2S_EmailVerified _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_EmailVerifiedDefaultTypeInternal _C2S_EmailVerified_default_instance_;
PROTOBUF_CONSTEXPR S2C_EmailVerified::S2C_EmailVerified(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_EmailVerifiedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_EmailVerifiedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_EmailVerifiedDefaultTypeInternal() {}
  union {
    S2C_EmailVerified _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_EmailVerifiedDefaultTypeInternal _S2C_EmailVerified_default_instance_;
PROTOBUF_CONSTEXPR C2S_LoadServer::C2S_LoadServer(
    ::_pbi::ConstantInitialized) {}
struct C2S_LoadServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LoadServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LoadServerDefaultTypeInternal() {}
  union {
    C2S_LoadServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LoadServerDefaultTypeInternal _C2S_LoadServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_LoadServer::S2C_LoadServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.port_)*/{}
  , /*decltype(_impl_._port_cached_byte_size_)*/{0}
  , /*decltype(_impl_.ip_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LoadServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LoadServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LoadServerDefaultTypeInternal() {}
  union {
    S2C_LoadServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LoadServerDefaultTypeInternal _S2C_LoadServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_LoadCharacters::C2S_LoadCharacters(
    ::_pbi::ConstantInitialized) {}
struct C2S_LoadCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LoadCharactersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LoadCharactersDefaultTypeInternal() {}
  union {
    C2S_LoadCharacters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LoadCharactersDefaultTypeInternal _C2S_LoadCharacters_default_instance_;
PROTOBUF_CONSTEXPR S2C_LoadCharacters::S2C_LoadCharacters(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/{}
  , /*decltype(_impl_.appearance_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LoadCharactersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LoadCharactersDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LoadCharactersDefaultTypeInternal() {}
  union {
    S2C_LoadCharacters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LoadCharactersDefaultTypeInternal _S2C_LoadCharacters_default_instance_;
PROTOBUF_CONSTEXPR C2S_SelectServer::C2S_SelectServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.server_num_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_SelectServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_SelectServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_SelectServerDefaultTypeInternal() {}
  union {
    C2S_SelectServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_SelectServerDefaultTypeInternal _C2S_SelectServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_SelectServer::S2C_SelectServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_SelectServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_SelectServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_SelectServerDefaultTypeInternal() {}
  union {
    S2C_SelectServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_SelectServerDefaultTypeInternal _S2C_SelectServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_CreateCharacter::C2S_CreateCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/nullptr
  , /*decltype(_impl_.appearance_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_CreateCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_CreateCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_CreateCharacterDefaultTypeInternal() {}
  union {
    C2S_CreateCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_CreateCharacterDefaultTypeInternal _C2S_CreateCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_CreateCharacter::S2C_CreateCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_CreateCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_CreateCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_CreateCharacterDefaultTypeInternal() {}
  union {
    S2C_CreateCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_CreateCharacterDefaultTypeInternal _S2C_CreateCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_AppearanceCharacter::C2S_AppearanceCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_AppearanceCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_AppearanceCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_AppearanceCharacterDefaultTypeInternal() {}
  union {
    C2S_AppearanceCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_AppearanceCharacterDefaultTypeInternal _C2S_AppearanceCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_AppearanceCharacter::S2C_AppearanceCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_AppearanceCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_AppearanceCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_AppearanceCharacterDefaultTypeInternal() {}
  union {
    S2C_AppearanceCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_AppearanceCharacterDefaultTypeInternal _S2C_AppearanceCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_DeleteCharacter::C2S_DeleteCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_DeleteCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_DeleteCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_DeleteCharacterDefaultTypeInternal() {}
  union {
    C2S_DeleteCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_DeleteCharacterDefaultTypeInternal _C2S_DeleteCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_DeleteCharacter::S2C_DeleteCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DeleteCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DeleteCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DeleteCharacterDefaultTypeInternal() {}
  union {
    S2C_DeleteCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DeleteCharacterDefaultTypeInternal _S2C_DeleteCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_UpdateNickName::C2S_UpdateNickName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.old_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.new_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_UpdateNickNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UpdateNickNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UpdateNickNameDefaultTypeInternal() {}
  union {
    C2S_UpdateNickName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UpdateNickNameDefaultTypeInternal _C2S_UpdateNickName_default_instance_;
PROTOBUF_CONSTEXPR S2C_UpdateNickName::S2C_UpdateNickName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_UpdateNickNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UpdateNickNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UpdateNickNameDefaultTypeInternal() {}
  union {
    S2C_UpdateNickName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UpdateNickNameDefaultTypeInternal _S2C_UpdateNickName_default_instance_;
PROTOBUF_CONSTEXPR C2S_TravelServer::C2S_TravelServer(
    ::_pbi::ConstantInitialized) {}
struct C2S_TravelServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_TravelServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_TravelServerDefaultTypeInternal() {}
  union {
    C2S_TravelServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_TravelServerDefaultTypeInternal _C2S_TravelServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_TravelServer::S2C_TravelServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_TravelServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_TravelServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_TravelServerDefaultTypeInternal() {}
  union {
    S2C_TravelServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_TravelServerDefaultTypeInternal _S2C_TravelServer_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_IdentityPacket_2eproto[29];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_IdentityPacket_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_IdentityPacket_2eproto = nullptr;

const uint32_t TableStruct_IdentityPacket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.activate_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.confirmed_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.verified_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.update_date_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UserData, _impl_.create_date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _impl_.job_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _impl_.tribe_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterData, _impl_.position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.body_color_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hair_color_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.eye_color_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.head_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.ears_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.feet_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hair_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.facials_01_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.facials_02_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.helmet_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.shoulders_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.skirt_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.legs_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.legs_add_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hands_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hands_add_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.chest_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.chest_add_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.cape_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.bracers_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.bracers_add_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.boots_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.belt_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.tabard_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.back_2hl_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.back_shield_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.back_weapon_l_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.back_weapon_r_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.back_bow_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.quiver_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.weapon_r_arrow_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.weapon_shield_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.weapon_l_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.weapon_r_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hip_l_),
  PROTOBUF_FIELD_OFFSET(::Protocol::SCharacterAppearance, _impl_.hip_r_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singin, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _impl_.error_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singin, _impl_.ticket_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_Singup, _impl_.email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_Singup, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EmailVerified, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EmailVerified, _impl_.verified_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EmailVerified, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EmailVerified, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _impl_.port_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadServer, _impl_.ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadCharacters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadCharacters, _impl_.appearance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_SelectServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_SelectServer, _impl_.server_num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_SelectServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_SelectServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.data_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_CreateCharacter, _impl_.appearance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_CreateCharacter, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AppearanceCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_AppearanceCharacter, _impl_.character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearanceCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearanceCharacter, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteCharacter, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteCharacter, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _impl_.old_name_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateNickName, _impl_.new_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateNickName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateNickName, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_TravelServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_TravelServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_TravelServer, _impl_.error_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::UserData)},
  { 14, -1, -1, sizeof(::Protocol::SCharacterData)},
  { 25, -1, -1, sizeof(::Protocol::SCharacterAppearance)},
  { 67, -1, -1, sizeof(::Protocol::C2S_EnterServer)},
  { 74, -1, -1, sizeof(::Protocol::S2C_EnterServer)},
  { 81, -1, -1, sizeof(::Protocol::C2S_LeaveServer)},
  { 88, -1, -1, sizeof(::Protocol::S2C_LeaveServer)},
  { 95, -1, -1, sizeof(::Protocol::C2S_Singin)},
  { 103, -1, -1, sizeof(::Protocol::S2C_Singin)},
  { 111, -1, -1, sizeof(::Protocol::C2S_Singup)},
  { 120, -1, -1, sizeof(::Protocol::S2C_Singup)},
  { 127, -1, -1, sizeof(::Protocol::C2S_EmailVerified)},
  { 134, -1, -1, sizeof(::Protocol::S2C_EmailVerified)},
  { 141, -1, -1, sizeof(::Protocol::C2S_LoadServer)},
  { 147, -1, -1, sizeof(::Protocol::S2C_LoadServer)},
  { 155, -1, -1, sizeof(::Protocol::C2S_LoadCharacters)},
  { 161, -1, -1, sizeof(::Protocol::S2C_LoadCharacters)},
  { 169, -1, -1, sizeof(::Protocol::C2S_SelectServer)},
  { 176, -1, -1, sizeof(::Protocol::S2C_SelectServer)},
  { 183, -1, -1, sizeof(::Protocol::C2S_CreateCharacter)},
  { 191, -1, -1, sizeof(::Protocol::S2C_CreateCharacter)},
  { 198, -1, -1, sizeof(::Protocol::C2S_AppearanceCharacter)},
  { 205, -1, -1, sizeof(::Protocol::S2C_AppearanceCharacter)},
  { 212, -1, -1, sizeof(::Protocol::C2S_DeleteCharacter)},
  { 219, -1, -1, sizeof(::Protocol::S2C_DeleteCharacter)},
  { 226, -1, -1, sizeof(::Protocol::C2S_UpdateNickName)},
  { 234, -1, -1, sizeof(::Protocol::S2C_UpdateNickName)},
  { 241, -1, -1, sizeof(::Protocol::C2S_TravelServer)},
  { 247, -1, -1, sizeof(::Protocol::S2C_TravelServer)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_UserData_default_instance_._instance,
  &::Protocol::_SCharacterData_default_instance_._instance,
  &::Protocol::_SCharacterAppearance_default_instance_._instance,
  &::Protocol::_C2S_EnterServer_default_instance_._instance,
  &::Protocol::_S2C_EnterServer_default_instance_._instance,
  &::Protocol::_C2S_LeaveServer_default_instance_._instance,
  &::Protocol::_S2C_LeaveServer_default_instance_._instance,
  &::Protocol::_C2S_Singin_default_instance_._instance,
  &::Protocol::_S2C_Singin_default_instance_._instance,
  &::Protocol::_C2S_Singup_default_instance_._instance,
  &::Protocol::_S2C_Singup_default_instance_._instance,
  &::Protocol::_C2S_EmailVerified_default_instance_._instance,
  &::Protocol::_S2C_EmailVerified_default_instance_._instance,
  &::Protocol::_C2S_LoadServer_default_instance_._instance,
  &::Protocol::_S2C_LoadServer_default_instance_._instance,
  &::Protocol::_C2S_LoadCharacters_default_instance_._instance,
  &::Protocol::_S2C_LoadCharacters_default_instance_._instance,
  &::Protocol::_C2S_SelectServer_default_instance_._instance,
  &::Protocol::_S2C_SelectServer_default_instance_._instance,
  &::Protocol::_C2S_CreateCharacter_default_instance_._instance,
  &::Protocol::_S2C_CreateCharacter_default_instance_._instance,
  &::Protocol::_C2S_AppearanceCharacter_default_instance_._instance,
  &::Protocol::_S2C_AppearanceCharacter_default_instance_._instance,
  &::Protocol::_C2S_DeleteCharacter_default_instance_._instance,
  &::Protocol::_S2C_DeleteCharacter_default_instance_._instance,
  &::Protocol::_C2S_UpdateNickName_default_instance_._instance,
  &::Protocol::_S2C_UpdateNickName_default_instance_._instance,
  &::Protocol::_C2S_TravelServer_default_instance_._instance,
  &::Protocol::_S2C_TravelServer_default_instance_._instance,
};

const char descriptor_table_protodef_IdentityPacket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024IdentityPacket.proto\022\010Protocol\"\230\001\n\010Use"
  "rData\022\n\n\002id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\020\n\010a"
  "ctivate\030\003 \001(\010\022\021\n\tconfirmed\030\004 \001(\010\022\r\n\005emai"
  "l\030\005 \001(\t\022\020\n\010verified\030\006 \001(\010\022\023\n\013update_date"
  "\030\007 \001(\t\022\023\n\013create_date\030\010 \001(\t\"[\n\016SCharacte"
  "rData\022\014\n\004name\030\001 \001(\014\022\r\n\005level\030\002 \001(\005\022\013\n\003jo"
  "b\030\003 \001(\005\022\r\n\005tribe\030\004 \001(\005\022\020\n\010position\030\005 \001(\005"
  "\"\220\005\n\024SCharacterAppearance\022\022\n\nbody_color\030"
  "\001 \001(\r\022\022\n\nhair_color\030\002 \001(\r\022\021\n\teye_color\030\003"
  " \001(\r\022\014\n\004head\030\004 \001(\005\022\014\n\004ears\030\005 \001(\005\022\014\n\004feet"
  "\030\006 \001(\005\022\014\n\004hair\030\007 \001(\005\022\022\n\nfacials_01\030\010 \001(\005"
  "\022\022\n\nfacials_02\030\t \001(\005\022\016\n\006helmet\030\n \001(\005\022\021\n\t"
  "shoulders\030\013 \001(\005\022\r\n\005skirt\030\014 \001(\005\022\014\n\004legs\030\r"
  " \001(\005\022\020\n\010legs_add\030\016 \001(\005\022\r\n\005hands\030\017 \001(\005\022\021\n"
  "\thands_add\030\020 \001(\005\022\r\n\005chest\030\021 \001(\005\022\021\n\tchest"
  "_add\030\022 \001(\005\022\014\n\004cape\030\023 \001(\005\022\017\n\007bracers\030\024 \001("
  "\005\022\023\n\013bracers_add\030\025 \001(\005\022\r\n\005boots\030\026 \001(\005\022\014\n"
  "\004belt\030\027 \001(\005\022\016\n\006tabard\030\030 \001(\005\022\020\n\010back_2hl\030"
  "\031 \001(\005\022\023\n\013back_shield\030\032 \001(\005\022\025\n\rback_weapo"
  "n_l\030\033 \001(\005\022\025\n\rback_weapon_r\030\034 \001(\005\022\020\n\010back"
  "_bow\030\035 \001(\005\022\016\n\006quiver\030\036 \001(\005\022\026\n\016weapon_r_a"
  "rrow\030\037 \001(\005\022\025\n\rweapon_shield\030  \001(\005\022\020\n\010wea"
  "pon_l\030! \001(\005\022\020\n\010weapon_r\030\" \001(\005\022\r\n\005hip_l\030#"
  " \001(\005\022\r\n\005hip_r\030$ \001(\005\" \n\017C2S_EnterServer\022\r"
  "\n\005error\030\001 \001(\005\" \n\017S2C_EnterServer\022\r\n\005erro"
  "r\030\001 \001(\005\" \n\017C2S_LeaveServer\022\r\n\005error\030\001 \001("
  "\005\" \n\017S2C_LeaveServer\022\r\n\005error\030\001 \001(\005\"*\n\nC"
  "2S_Singin\022\n\n\002id\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\""
  "+\n\nS2C_Singin\022\r\n\005error\030\001 \001(\005\022\016\n\006ticket\030\002"
  " \001(\t\"9\n\nC2S_Singup\022\n\n\002id\030\001 \001(\t\022\020\n\010passwo"
  "rd\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\"\033\n\nS2C_Singup\022\r\n"
  "\005error\030\001 \001(\005\"%\n\021C2S_EmailVerified\022\020\n\010ver"
  "ified\030\001 \001(\t\"\"\n\021S2C_EmailVerified\022\r\n\005erro"
  "r\030\001 \001(\005\"\020\n\016C2S_LoadServer\"*\n\016S2C_LoadSer"
  "ver\022\014\n\004port\030\001 \003(\005\022\n\n\002ip\030\002 \003(\t\"\024\n\022C2S_Loa"
  "dCharacters\"u\n\022S2C_LoadCharacters\022+\n\tcha"
  "racter\030\001 \003(\0132\030.Protocol.SCharacterData\0222"
  "\n\nappearance\030\002 \003(\0132\036.Protocol.SCharacter"
  "Appearance\"&\n\020C2S_SelectServer\022\022\n\nserver"
  "_num\030\001 \001(\005\"!\n\020S2C_SelectServer\022\r\n\005error\030"
  "\001 \001(\005\"q\n\023C2S_CreateCharacter\022&\n\004data\030\001 \001"
  "(\0132\030.Protocol.SCharacterData\0222\n\nappearan"
  "ce\030\002 \001(\0132\036.Protocol.SCharacterAppearance"
  "\"$\n\023S2C_CreateCharacter\022\r\n\005error\030\001 \001(\005\"F"
  "\n\027C2S_AppearanceCharacter\022+\n\tcharacter\030\001"
  " \001(\0132\030.Protocol.SCharacterData\"(\n\027S2C_Ap"
  "pearanceCharacter\022\r\n\005error\030\001 \001(\005\"#\n\023C2S_"
  "DeleteCharacter\022\014\n\004name\030\001 \001(\014\"$\n\023S2C_Del"
  "eteCharacter\022\r\n\005error\030\001 \001(\005\"8\n\022C2S_Updat"
  "eNickName\022\020\n\010old_name\030\001 \001(\014\022\020\n\010new_name\030"
  "\002 \001(\014\"#\n\022S2C_UpdateNickName\022\r\n\005error\030\001 \001"
  "(\005\"\022\n\020C2S_TravelServer\"!\n\020S2C_TravelServ"
  "er\022\r\n\005error\030\001 \001(\005b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_IdentityPacket_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_IdentityPacket_2eproto = {
    false, false, 2105, descriptor_table_protodef_IdentityPacket_2eproto,
    "IdentityPacket.proto",
    &descriptor_table_IdentityPacket_2eproto_once, nullptr, 0, 29,
    schemas, file_default_instances, TableStruct_IdentityPacket_2eproto::offsets,
    file_level_metadata_IdentityPacket_2eproto, file_level_enum_descriptors_IdentityPacket_2eproto,
    file_level_service_descriptors_IdentityPacket_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_IdentityPacket_2eproto_getter() {
  return &descriptor_table_IdentityPacket_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_IdentityPacket_2eproto(&descriptor_table_IdentityPacket_2eproto);
namespace Protocol {

// ===================================================================

class UserData::_Internal {
 public:
};

UserData::UserData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UserData)
}
UserData::UserData(const UserData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.update_date_){}
    , decltype(_impl_.create_date_){}
    , decltype(_impl_.activate_){}
    , decltype(_impl_.confirmed_){}
    , decltype(_impl_.verified_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.update_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_date_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_update_date().empty()) {
    _this->_impl_.update_date_.Set(from._internal_update_date(), 
      _this->GetArenaForAllocation());
  }
  _impl_.create_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.create_date_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_create_date().empty()) {
    _this->_impl_.create_date_.Set(from._internal_create_date(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.activate_, &from._impl_.activate_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.verified_) -
    reinterpret_cast<char*>(&_impl_.activate_)) + sizeof(_impl_.verified_));
  // @@protoc_insertion_point(copy_constructor:Protocol.UserData)
}

inline void UserData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.update_date_){}
    , decltype(_impl_.create_date_){}
    , decltype(_impl_.activate_){false}
    , decltype(_impl_.confirmed_){false}
    , decltype(_impl_.verified_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.update_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.update_date_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.create_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.create_date_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserData::~UserData() {
  // @@protoc_insertion_point(destructor:Protocol.UserData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.password_.Destroy();
  _impl_.email_.Destroy();
  _impl_.update_date_.Destroy();
  _impl_.create_date_.Destroy();
}

void UserData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UserData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.update_date_.ClearToEmpty();
  _impl_.create_date_.ClearToEmpty();
  ::memset(&_impl_.activate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.verified_) -
      reinterpret_cast<char*>(&_impl_.activate_)) + sizeof(_impl_.verified_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UserData.id"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UserData.password"));
        } else
          goto handle_unusual;
        continue;
      // bool activate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.activate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool confirmed = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.confirmed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string email = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UserData.email"));
        } else
          goto handle_unusual;
        continue;
      // bool verified = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string update_date = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_update_date();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UserData.update_date"));
        } else
          goto handle_unusual;
        continue;
      // string create_date = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_create_date();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UserData.create_date"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UserData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UserData.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UserData.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // bool activate = 3;
  if (this->_internal_activate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_activate(), target);
  }

  // bool confirmed = 4;
  if (this->_internal_confirmed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_confirmed(), target);
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UserData.email");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_email(), target);
  }

  // bool verified = 6;
  if (this->_internal_verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_verified(), target);
  }

  // string update_date = 7;
  if (!this->_internal_update_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_date().data(), static_cast<int>(this->_internal_update_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UserData.update_date");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_update_date(), target);
  }

  // string create_date = 8;
  if (!this->_internal_create_date().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_create_date().data(), static_cast<int>(this->_internal_create_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UserData.create_date");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_create_date(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UserData)
  return target;
}

size_t UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UserData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string email = 5;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string update_date = 7;
  if (!this->_internal_update_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_date());
  }

  // string create_date = 8;
  if (!this->_internal_create_date().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_create_date());
  }

  // bool activate = 3;
  if (this->_internal_activate() != 0) {
    total_size += 1 + 1;
  }

  // bool confirmed = 4;
  if (this->_internal_confirmed() != 0) {
    total_size += 1 + 1;
  }

  // bool verified = 6;
  if (this->_internal_verified() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserData::GetClassData() const { return &_class_data_; }


void UserData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserData*>(&to_msg);
  auto& from = static_cast<const UserData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UserData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_update_date().empty()) {
    _this->_internal_set_update_date(from._internal_update_date());
  }
  if (!from._internal_create_date().empty()) {
    _this->_internal_set_create_date(from._internal_create_date());
  }
  if (from._internal_activate() != 0) {
    _this->_internal_set_activate(from._internal_activate());
  }
  if (from._internal_confirmed() != 0) {
    _this->_internal_set_confirmed(from._internal_confirmed());
  }
  if (from._internal_verified() != 0) {
    _this->_internal_set_verified(from._internal_verified());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserData::CopyFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData::IsInitialized() const {
  return true;
}

void UserData::InternalSwap(UserData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.update_date_, lhs_arena,
      &other->_impl_.update_date_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.create_date_, lhs_arena,
      &other->_impl_.create_date_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserData, _impl_.verified_)
      + sizeof(UserData::_impl_.verified_)
      - PROTOBUF_FIELD_OFFSET(UserData, _impl_.activate_)>(
          reinterpret_cast<char*>(&_impl_.activate_),
          reinterpret_cast<char*>(&other->_impl_.activate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[0]);
}

// ===================================================================

class SCharacterData::_Internal {
 public:
};

SCharacterData::SCharacterData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.SCharacterData)
}
SCharacterData::SCharacterData(const SCharacterData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SCharacterData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.job_){}
    , decltype(_impl_.tribe_){}
    , decltype(_impl_.position_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.level_, &from._impl_.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.position_) -
    reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.position_));
  // @@protoc_insertion_point(copy_constructor:Protocol.SCharacterData)
}

inline void SCharacterData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.job_){0}
    , decltype(_impl_.tribe_){0}
    , decltype(_impl_.position_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SCharacterData::~SCharacterData() {
  // @@protoc_insertion_point(destructor:Protocol.SCharacterData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SCharacterData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void SCharacterData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SCharacterData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.SCharacterData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.position_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.position_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SCharacterData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 job = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.job_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 tribe = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.tribe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.position_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SCharacterData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.SCharacterData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // int32 job = 3;
  if (this->_internal_job() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_job(), target);
  }

  // int32 tribe = 4;
  if (this->_internal_tribe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_tribe(), target);
  }

  // int32 position = 5;
  if (this->_internal_position() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_position(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.SCharacterData)
  return target;
}

size_t SCharacterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.SCharacterData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // int32 level = 2;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 job = 3;
  if (this->_internal_job() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_job());
  }

  // int32 tribe = 4;
  if (this->_internal_tribe() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_tribe());
  }

  // int32 position = 5;
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_position());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SCharacterData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SCharacterData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SCharacterData::GetClassData() const { return &_class_data_; }


void SCharacterData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SCharacterData*>(&to_msg);
  auto& from = static_cast<const SCharacterData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.SCharacterData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_job() != 0) {
    _this->_internal_set_job(from._internal_job());
  }
  if (from._internal_tribe() != 0) {
    _this->_internal_set_tribe(from._internal_tribe());
  }
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SCharacterData::CopyFrom(const SCharacterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.SCharacterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCharacterData::IsInitialized() const {
  return true;
}

void SCharacterData::InternalSwap(SCharacterData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCharacterData, _impl_.position_)
      + sizeof(SCharacterData::_impl_.position_)
      - PROTOBUF_FIELD_OFFSET(SCharacterData, _impl_.level_)>(
          reinterpret_cast<char*>(&_impl_.level_),
          reinterpret_cast<char*>(&other->_impl_.level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SCharacterData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[1]);
}

// ===================================================================

class SCharacterAppearance::_Internal {
 public:
};

SCharacterAppearance::SCharacterAppearance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.SCharacterAppearance)
}
SCharacterAppearance::SCharacterAppearance(const SCharacterAppearance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SCharacterAppearance* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.body_color_){}
    , decltype(_impl_.hair_color_){}
    , decltype(_impl_.eye_color_){}
    , decltype(_impl_.head_){}
    , decltype(_impl_.ears_){}
    , decltype(_impl_.feet_){}
    , decltype(_impl_.hair_){}
    , decltype(_impl_.facials_01_){}
    , decltype(_impl_.facials_02_){}
    , decltype(_impl_.helmet_){}
    , decltype(_impl_.shoulders_){}
    , decltype(_impl_.skirt_){}
    , decltype(_impl_.legs_){}
    , decltype(_impl_.legs_add_){}
    , decltype(_impl_.hands_){}
    , decltype(_impl_.hands_add_){}
    , decltype(_impl_.chest_){}
    , decltype(_impl_.chest_add_){}
    , decltype(_impl_.cape_){}
    , decltype(_impl_.bracers_){}
    , decltype(_impl_.bracers_add_){}
    , decltype(_impl_.boots_){}
    , decltype(_impl_.belt_){}
    , decltype(_impl_.tabard_){}
    , decltype(_impl_.back_2hl_){}
    , decltype(_impl_.back_shield_){}
    , decltype(_impl_.back_weapon_l_){}
    , decltype(_impl_.back_weapon_r_){}
    , decltype(_impl_.back_bow_){}
    , decltype(_impl_.quiver_){}
    , decltype(_impl_.weapon_r_arrow_){}
    , decltype(_impl_.weapon_shield_){}
    , decltype(_impl_.weapon_l_){}
    , decltype(_impl_.weapon_r_){}
    , decltype(_impl_.hip_l_){}
    , decltype(_impl_.hip_r_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.body_color_, &from._impl_.body_color_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hip_r_) -
    reinterpret_cast<char*>(&_impl_.body_color_)) + sizeof(_impl_.hip_r_));
  // @@protoc_insertion_point(copy_constructor:Protocol.SCharacterAppearance)
}

inline void SCharacterAppearance::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.body_color_){0u}
    , decltype(_impl_.hair_color_){0u}
    , decltype(_impl_.eye_color_){0u}
    , decltype(_impl_.head_){0}
    , decltype(_impl_.ears_){0}
    , decltype(_impl_.feet_){0}
    , decltype(_impl_.hair_){0}
    , decltype(_impl_.facials_01_){0}
    , decltype(_impl_.facials_02_){0}
    , decltype(_impl_.helmet_){0}
    , decltype(_impl_.shoulders_){0}
    , decltype(_impl_.skirt_){0}
    , decltype(_impl_.legs_){0}
    , decltype(_impl_.legs_add_){0}
    , decltype(_impl_.hands_){0}
    , decltype(_impl_.hands_add_){0}
    , decltype(_impl_.chest_){0}
    , decltype(_impl_.chest_add_){0}
    , decltype(_impl_.cape_){0}
    , decltype(_impl_.bracers_){0}
    , decltype(_impl_.bracers_add_){0}
    , decltype(_impl_.boots_){0}
    , decltype(_impl_.belt_){0}
    , decltype(_impl_.tabard_){0}
    , decltype(_impl_.back_2hl_){0}
    , decltype(_impl_.back_shield_){0}
    , decltype(_impl_.back_weapon_l_){0}
    , decltype(_impl_.back_weapon_r_){0}
    , decltype(_impl_.back_bow_){0}
    , decltype(_impl_.quiver_){0}
    , decltype(_impl_.weapon_r_arrow_){0}
    , decltype(_impl_.weapon_shield_){0}
    , decltype(_impl_.weapon_l_){0}
    , decltype(_impl_.weapon_r_){0}
    , decltype(_impl_.hip_l_){0}
    , decltype(_impl_.hip_r_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SCharacterAppearance::~SCharacterAppearance() {
  // @@protoc_insertion_point(destructor:Protocol.SCharacterAppearance)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SCharacterAppearance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SCharacterAppearance::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SCharacterAppearance::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.SCharacterAppearance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.body_color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.hip_r_) -
      reinterpret_cast<char*>(&_impl_.body_color_)) + sizeof(_impl_.hip_r_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SCharacterAppearance::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 body_color = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.body_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 hair_color = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.hair_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 eye_color = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.eye_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 head = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.head_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ears = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.ears_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 feet = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.feet_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hair = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.hair_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 facials_01 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.facials_01_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 facials_02 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.facials_02_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 helmet = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.helmet_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 shoulders = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.shoulders_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 skirt = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.skirt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 legs = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.legs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 legs_add = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.legs_add_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hands = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.hands_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hands_add = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.hands_add_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 chest = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.chest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 chest_add = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _impl_.chest_add_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 cape = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          _impl_.cape_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bracers = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          _impl_.bracers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bracers_add = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          _impl_.bracers_add_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 boots = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          _impl_.boots_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 belt = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          _impl_.belt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 tabard = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          _impl_.tabard_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 back_2hl = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          _impl_.back_2hl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 back_shield = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          _impl_.back_shield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 back_weapon_l = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          _impl_.back_weapon_l_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 back_weapon_r = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          _impl_.back_weapon_r_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 back_bow = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          _impl_.back_bow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 quiver = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          _impl_.quiver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 weapon_r_arrow = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          _impl_.weapon_r_arrow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 weapon_shield = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          _impl_.weapon_shield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 weapon_l = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.weapon_l_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 weapon_r = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.weapon_r_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hip_l = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.hip_l_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hip_r = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.hip_r_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SCharacterAppearance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.SCharacterAppearance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 body_color = 1;
  if (this->_internal_body_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_body_color(), target);
  }

  // uint32 hair_color = 2;
  if (this->_internal_hair_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hair_color(), target);
  }

  // uint32 eye_color = 3;
  if (this->_internal_eye_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_eye_color(), target);
  }

  // int32 head = 4;
  if (this->_internal_head() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_head(), target);
  }

  // int32 ears = 5;
  if (this->_internal_ears() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_ears(), target);
  }

  // int32 feet = 6;
  if (this->_internal_feet() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_feet(), target);
  }

  // int32 hair = 7;
  if (this->_internal_hair() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_hair(), target);
  }

  // int32 facials_01 = 8;
  if (this->_internal_facials_01() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_facials_01(), target);
  }

  // int32 facials_02 = 9;
  if (this->_internal_facials_02() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_facials_02(), target);
  }

  // int32 helmet = 10;
  if (this->_internal_helmet() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_helmet(), target);
  }

  // int32 shoulders = 11;
  if (this->_internal_shoulders() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_shoulders(), target);
  }

  // int32 skirt = 12;
  if (this->_internal_skirt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_skirt(), target);
  }

  // int32 legs = 13;
  if (this->_internal_legs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(13, this->_internal_legs(), target);
  }

  // int32 legs_add = 14;
  if (this->_internal_legs_add() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_legs_add(), target);
  }

  // int32 hands = 15;
  if (this->_internal_hands() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(15, this->_internal_hands(), target);
  }

  // int32 hands_add = 16;
  if (this->_internal_hands_add() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_hands_add(), target);
  }

  // int32 chest = 17;
  if (this->_internal_chest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(17, this->_internal_chest(), target);
  }

  // int32 chest_add = 18;
  if (this->_internal_chest_add() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(18, this->_internal_chest_add(), target);
  }

  // int32 cape = 19;
  if (this->_internal_cape() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(19, this->_internal_cape(), target);
  }

  // int32 bracers = 20;
  if (this->_internal_bracers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(20, this->_internal_bracers(), target);
  }

  // int32 bracers_add = 21;
  if (this->_internal_bracers_add() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(21, this->_internal_bracers_add(), target);
  }

  // int32 boots = 22;
  if (this->_internal_boots() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(22, this->_internal_boots(), target);
  }

  // int32 belt = 23;
  if (this->_internal_belt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(23, this->_internal_belt(), target);
  }

  // int32 tabard = 24;
  if (this->_internal_tabard() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(24, this->_internal_tabard(), target);
  }

  // int32 back_2hl = 25;
  if (this->_internal_back_2hl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(25, this->_internal_back_2hl(), target);
  }

  // int32 back_shield = 26;
  if (this->_internal_back_shield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(26, this->_internal_back_shield(), target);
  }

  // int32 back_weapon_l = 27;
  if (this->_internal_back_weapon_l() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(27, this->_internal_back_weapon_l(), target);
  }

  // int32 back_weapon_r = 28;
  if (this->_internal_back_weapon_r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(28, this->_internal_back_weapon_r(), target);
  }

  // int32 back_bow = 29;
  if (this->_internal_back_bow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(29, this->_internal_back_bow(), target);
  }

  // int32 quiver = 30;
  if (this->_internal_quiver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(30, this->_internal_quiver(), target);
  }

  // int32 weapon_r_arrow = 31;
  if (this->_internal_weapon_r_arrow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(31, this->_internal_weapon_r_arrow(), target);
  }

  // int32 weapon_shield = 32;
  if (this->_internal_weapon_shield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(32, this->_internal_weapon_shield(), target);
  }

  // int32 weapon_l = 33;
  if (this->_internal_weapon_l() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(33, this->_internal_weapon_l(), target);
  }

  // int32 weapon_r = 34;
  if (this->_internal_weapon_r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(34, this->_internal_weapon_r(), target);
  }

  // int32 hip_l = 35;
  if (this->_internal_hip_l() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(35, this->_internal_hip_l(), target);
  }

  // int32 hip_r = 36;
  if (this->_internal_hip_r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(36, this->_internal_hip_r(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.SCharacterAppearance)
  return target;
}

size_t SCharacterAppearance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.SCharacterAppearance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 body_color = 1;
  if (this->_internal_body_color() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_body_color());
  }

  // uint32 hair_color = 2;
  if (this->_internal_hair_color() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_hair_color());
  }

  // uint32 eye_color = 3;
  if (this->_internal_eye_color() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_eye_color());
  }

  // int32 head = 4;
  if (this->_internal_head() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_head());
  }

  // int32 ears = 5;
  if (this->_internal_ears() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ears());
  }

  // int32 feet = 6;
  if (this->_internal_feet() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_feet());
  }

  // int32 hair = 7;
  if (this->_internal_hair() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hair());
  }

  // int32 facials_01 = 8;
  if (this->_internal_facials_01() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_facials_01());
  }

  // int32 facials_02 = 9;
  if (this->_internal_facials_02() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_facials_02());
  }

  // int32 helmet = 10;
  if (this->_internal_helmet() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_helmet());
  }

  // int32 shoulders = 11;
  if (this->_internal_shoulders() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_shoulders());
  }

  // int32 skirt = 12;
  if (this->_internal_skirt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_skirt());
  }

  // int32 legs = 13;
  if (this->_internal_legs() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_legs());
  }

  // int32 legs_add = 14;
  if (this->_internal_legs_add() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_legs_add());
  }

  // int32 hands = 15;
  if (this->_internal_hands() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hands());
  }

  // int32 hands_add = 16;
  if (this->_internal_hands_add() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_hands_add());
  }

  // int32 chest = 17;
  if (this->_internal_chest() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_chest());
  }

  // int32 chest_add = 18;
  if (this->_internal_chest_add() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_chest_add());
  }

  // int32 cape = 19;
  if (this->_internal_cape() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_cape());
  }

  // int32 bracers = 20;
  if (this->_internal_bracers() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_bracers());
  }

  // int32 bracers_add = 21;
  if (this->_internal_bracers_add() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_bracers_add());
  }

  // int32 boots = 22;
  if (this->_internal_boots() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_boots());
  }

  // int32 belt = 23;
  if (this->_internal_belt() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_belt());
  }

  // int32 tabard = 24;
  if (this->_internal_tabard() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_tabard());
  }

  // int32 back_2hl = 25;
  if (this->_internal_back_2hl() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_back_2hl());
  }

  // int32 back_shield = 26;
  if (this->_internal_back_shield() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_back_shield());
  }

  // int32 back_weapon_l = 27;
  if (this->_internal_back_weapon_l() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_back_weapon_l());
  }

  // int32 back_weapon_r = 28;
  if (this->_internal_back_weapon_r() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_back_weapon_r());
  }

  // int32 back_bow = 29;
  if (this->_internal_back_bow() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_back_bow());
  }

  // int32 quiver = 30;
  if (this->_internal_quiver() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_quiver());
  }

  // int32 weapon_r_arrow = 31;
  if (this->_internal_weapon_r_arrow() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_weapon_r_arrow());
  }

  // int32 weapon_shield = 32;
  if (this->_internal_weapon_shield() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_weapon_shield());
  }

  // int32 weapon_l = 33;
  if (this->_internal_weapon_l() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_weapon_l());
  }

  // int32 weapon_r = 34;
  if (this->_internal_weapon_r() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_weapon_r());
  }

  // int32 hip_l = 35;
  if (this->_internal_hip_l() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_hip_l());
  }

  // int32 hip_r = 36;
  if (this->_internal_hip_r() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_hip_r());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SCharacterAppearance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SCharacterAppearance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SCharacterAppearance::GetClassData() const { return &_class_data_; }


void SCharacterAppearance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SCharacterAppearance*>(&to_msg);
  auto& from = static_cast<const SCharacterAppearance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.SCharacterAppearance)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_body_color() != 0) {
    _this->_internal_set_body_color(from._internal_body_color());
  }
  if (from._internal_hair_color() != 0) {
    _this->_internal_set_hair_color(from._internal_hair_color());
  }
  if (from._internal_eye_color() != 0) {
    _this->_internal_set_eye_color(from._internal_eye_color());
  }
  if (from._internal_head() != 0) {
    _this->_internal_set_head(from._internal_head());
  }
  if (from._internal_ears() != 0) {
    _this->_internal_set_ears(from._internal_ears());
  }
  if (from._internal_feet() != 0) {
    _this->_internal_set_feet(from._internal_feet());
  }
  if (from._internal_hair() != 0) {
    _this->_internal_set_hair(from._internal_hair());
  }
  if (from._internal_facials_01() != 0) {
    _this->_internal_set_facials_01(from._internal_facials_01());
  }
  if (from._internal_facials_02() != 0) {
    _this->_internal_set_facials_02(from._internal_facials_02());
  }
  if (from._internal_helmet() != 0) {
    _this->_internal_set_helmet(from._internal_helmet());
  }
  if (from._internal_shoulders() != 0) {
    _this->_internal_set_shoulders(from._internal_shoulders());
  }
  if (from._internal_skirt() != 0) {
    _this->_internal_set_skirt(from._internal_skirt());
  }
  if (from._internal_legs() != 0) {
    _this->_internal_set_legs(from._internal_legs());
  }
  if (from._internal_legs_add() != 0) {
    _this->_internal_set_legs_add(from._internal_legs_add());
  }
  if (from._internal_hands() != 0) {
    _this->_internal_set_hands(from._internal_hands());
  }
  if (from._internal_hands_add() != 0) {
    _this->_internal_set_hands_add(from._internal_hands_add());
  }
  if (from._internal_chest() != 0) {
    _this->_internal_set_chest(from._internal_chest());
  }
  if (from._internal_chest_add() != 0) {
    _this->_internal_set_chest_add(from._internal_chest_add());
  }
  if (from._internal_cape() != 0) {
    _this->_internal_set_cape(from._internal_cape());
  }
  if (from._internal_bracers() != 0) {
    _this->_internal_set_bracers(from._internal_bracers());
  }
  if (from._internal_bracers_add() != 0) {
    _this->_internal_set_bracers_add(from._internal_bracers_add());
  }
  if (from._internal_boots() != 0) {
    _this->_internal_set_boots(from._internal_boots());
  }
  if (from._internal_belt() != 0) {
    _this->_internal_set_belt(from._internal_belt());
  }
  if (from._internal_tabard() != 0) {
    _this->_internal_set_tabard(from._internal_tabard());
  }
  if (from._internal_back_2hl() != 0) {
    _this->_internal_set_back_2hl(from._internal_back_2hl());
  }
  if (from._internal_back_shield() != 0) {
    _this->_internal_set_back_shield(from._internal_back_shield());
  }
  if (from._internal_back_weapon_l() != 0) {
    _this->_internal_set_back_weapon_l(from._internal_back_weapon_l());
  }
  if (from._internal_back_weapon_r() != 0) {
    _this->_internal_set_back_weapon_r(from._internal_back_weapon_r());
  }
  if (from._internal_back_bow() != 0) {
    _this->_internal_set_back_bow(from._internal_back_bow());
  }
  if (from._internal_quiver() != 0) {
    _this->_internal_set_quiver(from._internal_quiver());
  }
  if (from._internal_weapon_r_arrow() != 0) {
    _this->_internal_set_weapon_r_arrow(from._internal_weapon_r_arrow());
  }
  if (from._internal_weapon_shield() != 0) {
    _this->_internal_set_weapon_shield(from._internal_weapon_shield());
  }
  if (from._internal_weapon_l() != 0) {
    _this->_internal_set_weapon_l(from._internal_weapon_l());
  }
  if (from._internal_weapon_r() != 0) {
    _this->_internal_set_weapon_r(from._internal_weapon_r());
  }
  if (from._internal_hip_l() != 0) {
    _this->_internal_set_hip_l(from._internal_hip_l());
  }
  if (from._internal_hip_r() != 0) {
    _this->_internal_set_hip_r(from._internal_hip_r());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SCharacterAppearance::CopyFrom(const SCharacterAppearance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.SCharacterAppearance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCharacterAppearance::IsInitialized() const {
  return true;
}

void SCharacterAppearance::InternalSwap(SCharacterAppearance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SCharacterAppearance, _impl_.hip_r_)
      + sizeof(SCharacterAppearance::_impl_.hip_r_)
      - PROTOBUF_FIELD_OFFSET(SCharacterAppearance, _impl_.body_color_)>(
          reinterpret_cast<char*>(&_impl_.body_color_),
          reinterpret_cast<char*>(&other->_impl_.body_color_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SCharacterAppearance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[2]);
}

// ===================================================================

class C2S_EnterServer::_Internal {
 public:
};

C2S_EnterServer::C2S_EnterServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EnterServer)
}
C2S_EnterServer::C2S_EnterServer(const C2S_EnterServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_EnterServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EnterServer)
}

inline void C2S_EnterServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_EnterServer::~C2S_EnterServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_EnterServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_EnterServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_EnterServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_EnterServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_EnterServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_EnterServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_EnterServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_EnterServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_EnterServer)
  return target;
}

size_t C2S_EnterServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_EnterServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EnterServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_EnterServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EnterServer::GetClassData() const { return &_class_data_; }


void C2S_EnterServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_EnterServer*>(&to_msg);
  auto& from = static_cast<const C2S_EnterServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_EnterServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_EnterServer::CopyFrom(const C2S_EnterServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_EnterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_EnterServer::IsInitialized() const {
  return true;
}

void C2S_EnterServer::InternalSwap(C2S_EnterServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_EnterServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[3]);
}

// ===================================================================

class S2C_EnterServer::_Internal {
 public:
};

S2C_EnterServer::S2C_EnterServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EnterServer)
}
S2C_EnterServer::S2C_EnterServer(const S2C_EnterServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_EnterServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EnterServer)
}

inline void S2C_EnterServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_EnterServer::~S2C_EnterServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EnterServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_EnterServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_EnterServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_EnterServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EnterServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EnterServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EnterServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EnterServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EnterServer)
  return target;
}

size_t S2C_EnterServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EnterServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EnterServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_EnterServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EnterServer::GetClassData() const { return &_class_data_; }


void S2C_EnterServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_EnterServer*>(&to_msg);
  auto& from = static_cast<const S2C_EnterServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EnterServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EnterServer::CopyFrom(const S2C_EnterServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EnterServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EnterServer::IsInitialized() const {
  return true;
}

void S2C_EnterServer::InternalSwap(S2C_EnterServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EnterServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[4]);
}

// ===================================================================

class C2S_LeaveServer::_Internal {
 public:
};

C2S_LeaveServer::C2S_LeaveServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LeaveServer)
}
C2S_LeaveServer::C2S_LeaveServer(const C2S_LeaveServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_LeaveServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LeaveServer)
}

inline void C2S_LeaveServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_LeaveServer::~C2S_LeaveServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_LeaveServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_LeaveServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_LeaveServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_LeaveServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_LeaveServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_LeaveServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_LeaveServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_LeaveServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_LeaveServer)
  return target;
}

size_t C2S_LeaveServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_LeaveServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LeaveServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_LeaveServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LeaveServer::GetClassData() const { return &_class_data_; }


void C2S_LeaveServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_LeaveServer*>(&to_msg);
  auto& from = static_cast<const C2S_LeaveServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_LeaveServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_LeaveServer::CopyFrom(const C2S_LeaveServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_LeaveServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LeaveServer::IsInitialized() const {
  return true;
}

void C2S_LeaveServer::InternalSwap(C2S_LeaveServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_LeaveServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[5]);
}

// ===================================================================

class S2C_LeaveServer::_Internal {
 public:
};

S2C_LeaveServer::S2C_LeaveServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LeaveServer)
}
S2C_LeaveServer::S2C_LeaveServer(const S2C_LeaveServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LeaveServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LeaveServer)
}

inline void S2C_LeaveServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LeaveServer::~S2C_LeaveServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LeaveServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LeaveServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_LeaveServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LeaveServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LeaveServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LeaveServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LeaveServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LeaveServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LeaveServer)
  return target;
}

size_t S2C_LeaveServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LeaveServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LeaveServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LeaveServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LeaveServer::GetClassData() const { return &_class_data_; }


void S2C_LeaveServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LeaveServer*>(&to_msg);
  auto& from = static_cast<const S2C_LeaveServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LeaveServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LeaveServer::CopyFrom(const S2C_LeaveServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LeaveServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LeaveServer::IsInitialized() const {
  return true;
}

void S2C_LeaveServer::InternalSwap(S2C_LeaveServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LeaveServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[6]);
}

// ===================================================================

class C2S_Singin::_Internal {
 public:
};

C2S_Singin::C2S_Singin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_Singin)
}
C2S_Singin::C2S_Singin(const C2S_Singin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_Singin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_Singin)
}

inline void C2S_Singin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_Singin::~C2S_Singin() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_Singin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_Singin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.password_.Destroy();
}

void C2S_Singin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_Singin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_Singin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_Singin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singin.id"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singin.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_Singin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_Singin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singin.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singin.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_Singin)
  return target;
}

size_t C2S_Singin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_Singin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_Singin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_Singin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_Singin::GetClassData() const { return &_class_data_; }


void C2S_Singin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_Singin*>(&to_msg);
  auto& from = static_cast<const C2S_Singin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_Singin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Singin::CopyFrom(const C2S_Singin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_Singin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Singin::IsInitialized() const {
  return true;
}

void C2S_Singin::InternalSwap(C2S_Singin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_Singin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[7]);
}

// ===================================================================

class S2C_Singin::_Internal {
 public:
};

S2C_Singin::S2C_Singin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_Singin)
}
S2C_Singin::S2C_Singin(const S2C_Singin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_Singin* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ticket_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ticket().empty()) {
    _this->_impl_.ticket_.Set(from._internal_ticket(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_Singin)
}

inline void S2C_Singin::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ticket_){}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ticket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ticket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

S2C_Singin::~S2C_Singin() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_Singin)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_Singin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ticket_.Destroy();
}

void S2C_Singin::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_Singin::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_Singin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ticket_.ClearToEmpty();
  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_Singin::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ticket = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ticket();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.S2C_Singin.ticket"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_Singin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_Singin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  // string ticket = 2;
  if (!this->_internal_ticket().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ticket().data(), static_cast<int>(this->_internal_ticket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_Singin.ticket");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ticket(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_Singin)
  return target;
}

size_t S2C_Singin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_Singin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ticket = 2;
  if (!this->_internal_ticket().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ticket());
  }

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_Singin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_Singin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_Singin::GetClassData() const { return &_class_data_; }


void S2C_Singin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_Singin*>(&to_msg);
  auto& from = static_cast<const S2C_Singin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_Singin)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ticket().empty()) {
    _this->_internal_set_ticket(from._internal_ticket());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_Singin::CopyFrom(const S2C_Singin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_Singin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Singin::IsInitialized() const {
  return true;
}

void S2C_Singin::InternalSwap(S2C_Singin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ticket_, lhs_arena,
      &other->_impl_.ticket_, rhs_arena
  );
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_Singin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[8]);
}

// ===================================================================

class C2S_Singup::_Internal {
 public:
};

C2S_Singup::C2S_Singup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_Singup)
}
C2S_Singup::C2S_Singup(const C2S_Singup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_Singup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.email_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_Singup)
}

inline void C2S_Singup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.email_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_Singup::~C2S_Singup() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_Singup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_Singup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.password_.Destroy();
  _impl_.email_.Destroy();
}

void C2S_Singup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_Singup::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_Singup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_Singup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.id"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.password"));
        } else
          goto handle_unusual;
        continue;
      // string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_Singup.email"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_Singup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_Singup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_Singup.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_Singup)
  return target;
}

size_t C2S_Singup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_Singup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_Singup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_Singup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_Singup::GetClassData() const { return &_class_data_; }


void C2S_Singup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_Singup*>(&to_msg);
  auto& from = static_cast<const C2S_Singup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_Singup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_Singup::CopyFrom(const C2S_Singup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_Singup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Singup::IsInitialized() const {
  return true;
}

void C2S_Singup::InternalSwap(C2S_Singup* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_Singup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[9]);
}

// ===================================================================

class S2C_Singup::_Internal {
 public:
};

S2C_Singup::S2C_Singup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_Singup)
}
S2C_Singup::S2C_Singup(const S2C_Singup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_Singup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_Singup)
}

inline void S2C_Singup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_Singup::~S2C_Singup() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_Singup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_Singup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_Singup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_Singup::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_Singup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_Singup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_Singup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_Singup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_Singup)
  return target;
}

size_t S2C_Singup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_Singup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_Singup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_Singup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_Singup::GetClassData() const { return &_class_data_; }


void S2C_Singup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_Singup*>(&to_msg);
  auto& from = static_cast<const S2C_Singup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_Singup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_Singup::CopyFrom(const S2C_Singup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_Singup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Singup::IsInitialized() const {
  return true;
}

void S2C_Singup::InternalSwap(S2C_Singup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_Singup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[10]);
}

// ===================================================================

class C2S_EmailVerified::_Internal {
 public:
};

C2S_EmailVerified::C2S_EmailVerified(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EmailVerified)
}
C2S_EmailVerified::C2S_EmailVerified(const C2S_EmailVerified& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_EmailVerified* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.verified_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.verified_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verified_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_verified().empty()) {
    _this->_impl_.verified_.Set(from._internal_verified(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EmailVerified)
}

inline void C2S_EmailVerified::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.verified_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.verified_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.verified_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_EmailVerified::~C2S_EmailVerified() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_EmailVerified)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_EmailVerified::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.verified_.Destroy();
}

void C2S_EmailVerified::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_EmailVerified::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_EmailVerified)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.verified_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_EmailVerified::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string verified = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_verified();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.C2S_EmailVerified.verified"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_EmailVerified::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_EmailVerified)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string verified = 1;
  if (!this->_internal_verified().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_verified().data(), static_cast<int>(this->_internal_verified().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.C2S_EmailVerified.verified");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_verified(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_EmailVerified)
  return target;
}

size_t C2S_EmailVerified::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_EmailVerified)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string verified = 1;
  if (!this->_internal_verified().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_verified());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EmailVerified::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_EmailVerified::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EmailVerified::GetClassData() const { return &_class_data_; }


void C2S_EmailVerified::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_EmailVerified*>(&to_msg);
  auto& from = static_cast<const C2S_EmailVerified&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_EmailVerified)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_verified().empty()) {
    _this->_internal_set_verified(from._internal_verified());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_EmailVerified::CopyFrom(const C2S_EmailVerified& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_EmailVerified)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_EmailVerified::IsInitialized() const {
  return true;
}

void C2S_EmailVerified::InternalSwap(C2S_EmailVerified* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.verified_, lhs_arena,
      &other->_impl_.verified_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_EmailVerified::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[11]);
}

// ===================================================================

class S2C_EmailVerified::_Internal {
 public:
};

S2C_EmailVerified::S2C_EmailVerified(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EmailVerified)
}
S2C_EmailVerified::S2C_EmailVerified(const S2C_EmailVerified& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_EmailVerified* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EmailVerified)
}

inline void S2C_EmailVerified::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_EmailVerified::~S2C_EmailVerified() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EmailVerified)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_EmailVerified::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_EmailVerified::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_EmailVerified::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EmailVerified)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EmailVerified::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EmailVerified::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EmailVerified)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EmailVerified)
  return target;
}

size_t S2C_EmailVerified::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EmailVerified)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EmailVerified::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_EmailVerified::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EmailVerified::GetClassData() const { return &_class_data_; }


void S2C_EmailVerified::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_EmailVerified*>(&to_msg);
  auto& from = static_cast<const S2C_EmailVerified&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EmailVerified)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EmailVerified::CopyFrom(const S2C_EmailVerified& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EmailVerified)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EmailVerified::IsInitialized() const {
  return true;
}

void S2C_EmailVerified::InternalSwap(S2C_EmailVerified* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EmailVerified::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[12]);
}

// ===================================================================

class C2S_LoadServer::_Internal {
 public:
};

C2S_LoadServer::C2S_LoadServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LoadServer)
}
C2S_LoadServer::C2S_LoadServer(const C2S_LoadServer& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C2S_LoadServer* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LoadServer)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LoadServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LoadServer::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_LoadServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[13]);
}

// ===================================================================

class S2C_LoadServer::_Internal {
 public:
};

S2C_LoadServer::S2C_LoadServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoadServer)
}
S2C_LoadServer::S2C_LoadServer(const S2C_LoadServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LoadServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.port_){from._impl_.port_}
    , /*decltype(_impl_._port_cached_byte_size_)*/{0}
    , decltype(_impl_.ip_){from._impl_.ip_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoadServer)
}

inline void S2C_LoadServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.port_){arena}
    , /*decltype(_impl_._port_cached_byte_size_)*/{0}
    , decltype(_impl_.ip_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LoadServer::~S2C_LoadServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoadServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LoadServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.port_.~RepeatedField();
  _impl_.ip_.~RepeatedPtrField();
}

void S2C_LoadServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LoadServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoadServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_.Clear();
  _impl_.ip_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoadServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 port = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_port(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_port(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string ip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ip();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "Protocol.S2C_LoadServer.ip"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoadServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoadServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 port = 1;
  {
    int byte_size = _impl_._port_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_port(), byte_size, target);
    }
  }

  // repeated string ip = 2;
  for (int i = 0, n = this->_internal_ip_size(); i < n; i++) {
    const auto& s = this->_internal_ip(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.S2C_LoadServer.ip");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoadServer)
  return target;
}

size_t S2C_LoadServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoadServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 port = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.port_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._port_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string ip = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.ip_.size());
  for (int i = 0, n = _impl_.ip_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.ip_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoadServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LoadServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoadServer::GetClassData() const { return &_class_data_; }


void S2C_LoadServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LoadServer*>(&to_msg);
  auto& from = static_cast<const S2C_LoadServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoadServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.port_.MergeFrom(from._impl_.port_);
  _this->_impl_.ip_.MergeFrom(from._impl_.ip_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoadServer::CopyFrom(const S2C_LoadServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoadServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoadServer::IsInitialized() const {
  return true;
}

void S2C_LoadServer::InternalSwap(S2C_LoadServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.port_.InternalSwap(&other->_impl_.port_);
  _impl_.ip_.InternalSwap(&other->_impl_.ip_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoadServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[14]);
}

// ===================================================================

class C2S_LoadCharacters::_Internal {
 public:
};

C2S_LoadCharacters::C2S_LoadCharacters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LoadCharacters)
}
C2S_LoadCharacters::C2S_LoadCharacters(const C2S_LoadCharacters& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C2S_LoadCharacters* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LoadCharacters)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LoadCharacters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LoadCharacters::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_LoadCharacters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[15]);
}

// ===================================================================

class S2C_LoadCharacters::_Internal {
 public:
};

S2C_LoadCharacters::S2C_LoadCharacters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoadCharacters)
}
S2C_LoadCharacters::S2C_LoadCharacters(const S2C_LoadCharacters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LoadCharacters* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){from._impl_.character_}
    , decltype(_impl_.appearance_){from._impl_.appearance_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoadCharacters)
}

inline void S2C_LoadCharacters::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){arena}
    , decltype(_impl_.appearance_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LoadCharacters::~S2C_LoadCharacters() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoadCharacters)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LoadCharacters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_.~RepeatedPtrField();
  _impl_.appearance_.~RepeatedPtrField();
}

void S2C_LoadCharacters::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LoadCharacters::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoadCharacters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_.Clear();
  _impl_.appearance_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoadCharacters::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.SCharacterData character = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_character(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.SCharacterAppearance appearance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_appearance(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoadCharacters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoadCharacters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.SCharacterData character = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_character_size()); i < n; i++) {
    const auto& repfield = this->_internal_character(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .Protocol.SCharacterAppearance appearance = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_appearance_size()); i < n; i++) {
    const auto& repfield = this->_internal_appearance(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoadCharacters)
  return target;
}

size_t S2C_LoadCharacters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoadCharacters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.SCharacterData character = 1;
  total_size += 1UL * this->_internal_character_size();
  for (const auto& msg : this->_impl_.character_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Protocol.SCharacterAppearance appearance = 2;
  total_size += 1UL * this->_internal_appearance_size();
  for (const auto& msg : this->_impl_.appearance_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoadCharacters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LoadCharacters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoadCharacters::GetClassData() const { return &_class_data_; }


void S2C_LoadCharacters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LoadCharacters*>(&to_msg);
  auto& from = static_cast<const S2C_LoadCharacters&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoadCharacters)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.character_.MergeFrom(from._impl_.character_);
  _this->_impl_.appearance_.MergeFrom(from._impl_.appearance_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoadCharacters::CopyFrom(const S2C_LoadCharacters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoadCharacters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoadCharacters::IsInitialized() const {
  return true;
}

void S2C_LoadCharacters::InternalSwap(S2C_LoadCharacters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.character_.InternalSwap(&other->_impl_.character_);
  _impl_.appearance_.InternalSwap(&other->_impl_.appearance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoadCharacters::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[16]);
}

// ===================================================================

class C2S_SelectServer::_Internal {
 public:
};

C2S_SelectServer::C2S_SelectServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_SelectServer)
}
C2S_SelectServer::C2S_SelectServer(const C2S_SelectServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_SelectServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.server_num_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.server_num_ = from._impl_.server_num_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_SelectServer)
}

inline void C2S_SelectServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.server_num_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_SelectServer::~C2S_SelectServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_SelectServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_SelectServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_SelectServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_SelectServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_SelectServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_SelectServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 server_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.server_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_SelectServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_SelectServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 server_num = 1;
  if (this->_internal_server_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_server_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_SelectServer)
  return target;
}

size_t C2S_SelectServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_SelectServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 server_num = 1;
  if (this->_internal_server_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_server_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_SelectServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_SelectServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_SelectServer::GetClassData() const { return &_class_data_; }


void C2S_SelectServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_SelectServer*>(&to_msg);
  auto& from = static_cast<const C2S_SelectServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_SelectServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_server_num() != 0) {
    _this->_internal_set_server_num(from._internal_server_num());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_SelectServer::CopyFrom(const C2S_SelectServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_SelectServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_SelectServer::IsInitialized() const {
  return true;
}

void C2S_SelectServer::InternalSwap(C2S_SelectServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.server_num_, other->_impl_.server_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_SelectServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[17]);
}

// ===================================================================

class S2C_SelectServer::_Internal {
 public:
};

S2C_SelectServer::S2C_SelectServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_SelectServer)
}
S2C_SelectServer::S2C_SelectServer(const S2C_SelectServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_SelectServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_SelectServer)
}

inline void S2C_SelectServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_SelectServer::~S2C_SelectServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_SelectServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_SelectServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_SelectServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_SelectServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_SelectServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_SelectServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_SelectServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_SelectServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_SelectServer)
  return target;
}

size_t S2C_SelectServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_SelectServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_SelectServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_SelectServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_SelectServer::GetClassData() const { return &_class_data_; }


void S2C_SelectServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_SelectServer*>(&to_msg);
  auto& from = static_cast<const S2C_SelectServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_SelectServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_SelectServer::CopyFrom(const S2C_SelectServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_SelectServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_SelectServer::IsInitialized() const {
  return true;
}

void S2C_SelectServer::InternalSwap(S2C_SelectServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_SelectServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[18]);
}

// ===================================================================

class C2S_CreateCharacter::_Internal {
 public:
  static const ::Protocol::SCharacterData& data(const C2S_CreateCharacter* msg);
  static const ::Protocol::SCharacterAppearance& appearance(const C2S_CreateCharacter* msg);
};

const ::Protocol::SCharacterData&
C2S_CreateCharacter::_Internal::data(const C2S_CreateCharacter* msg) {
  return *msg->_impl_.data_;
}
const ::Protocol::SCharacterAppearance&
C2S_CreateCharacter::_Internal::appearance(const C2S_CreateCharacter* msg) {
  return *msg->_impl_.appearance_;
}
C2S_CreateCharacter::C2S_CreateCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_CreateCharacter)
}
C2S_CreateCharacter::C2S_CreateCharacter(const C2S_CreateCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_CreateCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.appearance_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    _this->_impl_.data_ = new ::Protocol::SCharacterData(*from._impl_.data_);
  }
  if (from._internal_has_appearance()) {
    _this->_impl_.appearance_ = new ::Protocol::SCharacterAppearance(*from._impl_.appearance_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_CreateCharacter)
}

inline void C2S_CreateCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){nullptr}
    , decltype(_impl_.appearance_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_CreateCharacter::~C2S_CreateCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_CreateCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_CreateCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.data_;
  if (this != internal_default_instance()) delete _impl_.appearance_;
}

void C2S_CreateCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_CreateCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_CreateCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.data_ != nullptr) {
    delete _impl_.data_;
  }
  _impl_.data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.appearance_ != nullptr) {
    delete _impl_.appearance_;
  }
  _impl_.appearance_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_CreateCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SCharacterData data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SCharacterAppearance appearance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_appearance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_CreateCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_CreateCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SCharacterData data = 1;
  if (this->_internal_has_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  // .Protocol.SCharacterAppearance appearance = 2;
  if (this->_internal_has_appearance()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::appearance(this),
        _Internal::appearance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_CreateCharacter)
  return target;
}

size_t C2S_CreateCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_CreateCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SCharacterData data = 1;
  if (this->_internal_has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.data_);
  }

  // .Protocol.SCharacterAppearance appearance = 2;
  if (this->_internal_has_appearance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.appearance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_CreateCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_CreateCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_CreateCharacter::GetClassData() const { return &_class_data_; }


void C2S_CreateCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_CreateCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_CreateCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_CreateCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_data()) {
    _this->_internal_mutable_data()->::Protocol::SCharacterData::MergeFrom(
        from._internal_data());
  }
  if (from._internal_has_appearance()) {
    _this->_internal_mutable_appearance()->::Protocol::SCharacterAppearance::MergeFrom(
        from._internal_appearance());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_CreateCharacter::CopyFrom(const C2S_CreateCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_CreateCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_CreateCharacter::IsInitialized() const {
  return true;
}

void C2S_CreateCharacter::InternalSwap(C2S_CreateCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_CreateCharacter, _impl_.appearance_)
      + sizeof(C2S_CreateCharacter::_impl_.appearance_)
      - PROTOBUF_FIELD_OFFSET(C2S_CreateCharacter, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_CreateCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[19]);
}

// ===================================================================

class S2C_CreateCharacter::_Internal {
 public:
};

S2C_CreateCharacter::S2C_CreateCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_CreateCharacter)
}
S2C_CreateCharacter::S2C_CreateCharacter(const S2C_CreateCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_CreateCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_CreateCharacter)
}

inline void S2C_CreateCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_CreateCharacter::~S2C_CreateCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_CreateCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_CreateCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_CreateCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_CreateCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_CreateCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_CreateCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_CreateCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_CreateCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_CreateCharacter)
  return target;
}

size_t S2C_CreateCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_CreateCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_CreateCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_CreateCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_CreateCharacter::GetClassData() const { return &_class_data_; }


void S2C_CreateCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_CreateCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_CreateCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_CreateCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_CreateCharacter::CopyFrom(const S2C_CreateCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_CreateCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_CreateCharacter::IsInitialized() const {
  return true;
}

void S2C_CreateCharacter::InternalSwap(S2C_CreateCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_CreateCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[20]);
}

// ===================================================================

class C2S_AppearanceCharacter::_Internal {
 public:
  static const ::Protocol::SCharacterData& character(const C2S_AppearanceCharacter* msg);
};

const ::Protocol::SCharacterData&
C2S_AppearanceCharacter::_Internal::character(const C2S_AppearanceCharacter* msg) {
  return *msg->_impl_.character_;
}
C2S_AppearanceCharacter::C2S_AppearanceCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_AppearanceCharacter)
}
C2S_AppearanceCharacter::C2S_AppearanceCharacter(const C2S_AppearanceCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_AppearanceCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character()) {
    _this->_impl_.character_ = new ::Protocol::SCharacterData(*from._impl_.character_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_AppearanceCharacter)
}

inline void C2S_AppearanceCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_AppearanceCharacter::~C2S_AppearanceCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_AppearanceCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_AppearanceCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_;
}

void C2S_AppearanceCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_AppearanceCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_AppearanceCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.character_ != nullptr) {
    delete _impl_.character_;
  }
  _impl_.character_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_AppearanceCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SCharacterData character = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_AppearanceCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_AppearanceCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SCharacterData character = 1;
  if (this->_internal_has_character()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::character(this),
        _Internal::character(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_AppearanceCharacter)
  return target;
}

size_t C2S_AppearanceCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_AppearanceCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SCharacterData character = 1;
  if (this->_internal_has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_AppearanceCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_AppearanceCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_AppearanceCharacter::GetClassData() const { return &_class_data_; }


void C2S_AppearanceCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_AppearanceCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_AppearanceCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_AppearanceCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character()) {
    _this->_internal_mutable_character()->::Protocol::SCharacterData::MergeFrom(
        from._internal_character());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_AppearanceCharacter::CopyFrom(const C2S_AppearanceCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_AppearanceCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_AppearanceCharacter::IsInitialized() const {
  return true;
}

void C2S_AppearanceCharacter::InternalSwap(C2S_AppearanceCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.character_, other->_impl_.character_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_AppearanceCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[21]);
}

// ===================================================================

class S2C_AppearanceCharacter::_Internal {
 public:
};

S2C_AppearanceCharacter::S2C_AppearanceCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_AppearanceCharacter)
}
S2C_AppearanceCharacter::S2C_AppearanceCharacter(const S2C_AppearanceCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_AppearanceCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_AppearanceCharacter)
}

inline void S2C_AppearanceCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_AppearanceCharacter::~S2C_AppearanceCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_AppearanceCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_AppearanceCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_AppearanceCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_AppearanceCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_AppearanceCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_AppearanceCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_AppearanceCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_AppearanceCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_AppearanceCharacter)
  return target;
}

size_t S2C_AppearanceCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_AppearanceCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_AppearanceCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_AppearanceCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_AppearanceCharacter::GetClassData() const { return &_class_data_; }


void S2C_AppearanceCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_AppearanceCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_AppearanceCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_AppearanceCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_AppearanceCharacter::CopyFrom(const S2C_AppearanceCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_AppearanceCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AppearanceCharacter::IsInitialized() const {
  return true;
}

void S2C_AppearanceCharacter::InternalSwap(S2C_AppearanceCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_AppearanceCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[22]);
}

// ===================================================================

class C2S_DeleteCharacter::_Internal {
 public:
};

C2S_DeleteCharacter::C2S_DeleteCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_DeleteCharacter)
}
C2S_DeleteCharacter::C2S_DeleteCharacter(const C2S_DeleteCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_DeleteCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_DeleteCharacter)
}

inline void C2S_DeleteCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_DeleteCharacter::~C2S_DeleteCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_DeleteCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_DeleteCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void C2S_DeleteCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_DeleteCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_DeleteCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_DeleteCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_DeleteCharacter)
  return target;
}

size_t C2S_DeleteCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_DeleteCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_DeleteCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_DeleteCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_DeleteCharacter::GetClassData() const { return &_class_data_; }


void C2S_DeleteCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_DeleteCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_DeleteCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_DeleteCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_DeleteCharacter::CopyFrom(const C2S_DeleteCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_DeleteCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DeleteCharacter::IsInitialized() const {
  return true;
}

void C2S_DeleteCharacter::InternalSwap(C2S_DeleteCharacter* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_DeleteCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[23]);
}

// ===================================================================

class S2C_DeleteCharacter::_Internal {
 public:
};

S2C_DeleteCharacter::S2C_DeleteCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DeleteCharacter)
}
S2C_DeleteCharacter::S2C_DeleteCharacter(const S2C_DeleteCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DeleteCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DeleteCharacter)
}

inline void S2C_DeleteCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DeleteCharacter::~S2C_DeleteCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DeleteCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DeleteCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_DeleteCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DeleteCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DeleteCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DeleteCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DeleteCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DeleteCharacter)
  return target;
}

size_t S2C_DeleteCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DeleteCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DeleteCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DeleteCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DeleteCharacter::GetClassData() const { return &_class_data_; }


void S2C_DeleteCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DeleteCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_DeleteCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DeleteCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DeleteCharacter::CopyFrom(const S2C_DeleteCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DeleteCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DeleteCharacter::IsInitialized() const {
  return true;
}

void S2C_DeleteCharacter::InternalSwap(S2C_DeleteCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DeleteCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[24]);
}

// ===================================================================

class C2S_UpdateNickName::_Internal {
 public:
};

C2S_UpdateNickName::C2S_UpdateNickName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_UpdateNickName)
}
C2S_UpdateNickName::C2S_UpdateNickName(const C2S_UpdateNickName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_UpdateNickName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.old_name_){}
    , decltype(_impl_.new_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.old_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.old_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_old_name().empty()) {
    _this->_impl_.old_name_.Set(from._internal_old_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_name().empty()) {
    _this->_impl_.new_name_.Set(from._internal_new_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_UpdateNickName)
}

inline void C2S_UpdateNickName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.old_name_){}
    , decltype(_impl_.new_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.old_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.old_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_UpdateNickName::~C2S_UpdateNickName() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_UpdateNickName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_UpdateNickName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.old_name_.Destroy();
  _impl_.new_name_.Destroy();
}

void C2S_UpdateNickName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_UpdateNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_UpdateNickName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.old_name_.ClearToEmpty();
  _impl_.new_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_UpdateNickName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes old_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_old_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes new_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_new_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_UpdateNickName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_UpdateNickName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes old_name = 1;
  if (!this->_internal_old_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_old_name(), target);
  }

  // bytes new_name = 2;
  if (!this->_internal_new_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_new_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_UpdateNickName)
  return target;
}

size_t C2S_UpdateNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_UpdateNickName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes old_name = 1;
  if (!this->_internal_old_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_old_name());
  }

  // bytes new_name = 2;
  if (!this->_internal_new_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_new_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_UpdateNickName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_UpdateNickName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_UpdateNickName::GetClassData() const { return &_class_data_; }


void C2S_UpdateNickName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_UpdateNickName*>(&to_msg);
  auto& from = static_cast<const C2S_UpdateNickName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_UpdateNickName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_old_name().empty()) {
    _this->_internal_set_old_name(from._internal_old_name());
  }
  if (!from._internal_new_name().empty()) {
    _this->_internal_set_new_name(from._internal_new_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UpdateNickName::CopyFrom(const C2S_UpdateNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_UpdateNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateNickName::IsInitialized() const {
  return true;
}

void C2S_UpdateNickName::InternalSwap(C2S_UpdateNickName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.old_name_, lhs_arena,
      &other->_impl_.old_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.new_name_, lhs_arena,
      &other->_impl_.new_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_UpdateNickName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[25]);
}

// ===================================================================

class S2C_UpdateNickName::_Internal {
 public:
};

S2C_UpdateNickName::S2C_UpdateNickName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_UpdateNickName)
}
S2C_UpdateNickName::S2C_UpdateNickName(const S2C_UpdateNickName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_UpdateNickName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_UpdateNickName)
}

inline void S2C_UpdateNickName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_UpdateNickName::~S2C_UpdateNickName() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_UpdateNickName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_UpdateNickName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_UpdateNickName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_UpdateNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_UpdateNickName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_UpdateNickName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_UpdateNickName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_UpdateNickName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_UpdateNickName)
  return target;
}

size_t S2C_UpdateNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_UpdateNickName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_UpdateNickName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_UpdateNickName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_UpdateNickName::GetClassData() const { return &_class_data_; }


void S2C_UpdateNickName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_UpdateNickName*>(&to_msg);
  auto& from = static_cast<const S2C_UpdateNickName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_UpdateNickName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UpdateNickName::CopyFrom(const S2C_UpdateNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_UpdateNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateNickName::IsInitialized() const {
  return true;
}

void S2C_UpdateNickName::InternalSwap(S2C_UpdateNickName* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_UpdateNickName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[26]);
}

// ===================================================================

class C2S_TravelServer::_Internal {
 public:
};

C2S_TravelServer::C2S_TravelServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_TravelServer)
}
C2S_TravelServer::C2S_TravelServer(const C2S_TravelServer& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C2S_TravelServer* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_TravelServer)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_TravelServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_TravelServer::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_TravelServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[27]);
}

// ===================================================================

class S2C_TravelServer::_Internal {
 public:
};

S2C_TravelServer::S2C_TravelServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_TravelServer)
}
S2C_TravelServer::S2C_TravelServer(const S2C_TravelServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_TravelServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_TravelServer)
}

inline void S2C_TravelServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_TravelServer::~S2C_TravelServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_TravelServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_TravelServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_TravelServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_TravelServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_TravelServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_TravelServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_TravelServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_TravelServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_TravelServer)
  return target;
}

size_t S2C_TravelServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_TravelServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_TravelServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_TravelServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_TravelServer::GetClassData() const { return &_class_data_; }


void S2C_TravelServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_TravelServer*>(&to_msg);
  auto& from = static_cast<const S2C_TravelServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_TravelServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_TravelServer::CopyFrom(const S2C_TravelServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_TravelServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_TravelServer::IsInitialized() const {
  return true;
}

void S2C_TravelServer::InternalSwap(S2C_TravelServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_TravelServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_IdentityPacket_2eproto_getter, &descriptor_table_IdentityPacket_2eproto_once,
      file_level_metadata_IdentityPacket_2eproto[28]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::UserData*
Arena::CreateMaybeMessage< ::Protocol::UserData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UserData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::SCharacterData*
Arena::CreateMaybeMessage< ::Protocol::SCharacterData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::SCharacterData >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::SCharacterAppearance*
Arena::CreateMaybeMessage< ::Protocol::SCharacterAppearance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::SCharacterAppearance >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EnterServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_EnterServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EnterServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EnterServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_EnterServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EnterServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LeaveServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_LeaveServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LeaveServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LeaveServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_LeaveServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LeaveServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_Singin*
Arena::CreateMaybeMessage< ::Protocol::C2S_Singin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_Singin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_Singin*
Arena::CreateMaybeMessage< ::Protocol::S2C_Singin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_Singin >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_Singup*
Arena::CreateMaybeMessage< ::Protocol::C2S_Singup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_Singup >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_Singup*
Arena::CreateMaybeMessage< ::Protocol::S2C_Singup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_Singup >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EmailVerified*
Arena::CreateMaybeMessage< ::Protocol::C2S_EmailVerified >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EmailVerified >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EmailVerified*
Arena::CreateMaybeMessage< ::Protocol::S2C_EmailVerified >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EmailVerified >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LoadServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_LoadServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LoadServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoadServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_LoadServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoadServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LoadCharacters*
Arena::CreateMaybeMessage< ::Protocol::C2S_LoadCharacters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LoadCharacters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoadCharacters*
Arena::CreateMaybeMessage< ::Protocol::S2C_LoadCharacters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoadCharacters >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_SelectServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_SelectServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_SelectServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_SelectServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_SelectServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_SelectServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_CreateCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_CreateCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_CreateCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_CreateCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_CreateCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_CreateCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_AppearanceCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_AppearanceCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_AppearanceCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_AppearanceCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_AppearanceCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_AppearanceCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_DeleteCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_DeleteCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_DeleteCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DeleteCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_DeleteCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DeleteCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_UpdateNickName*
Arena::CreateMaybeMessage< ::Protocol::C2S_UpdateNickName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_UpdateNickName >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_UpdateNickName*
Arena::CreateMaybeMessage< ::Protocol::S2C_UpdateNickName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_UpdateNickName >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_TravelServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_TravelServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_TravelServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_TravelServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_TravelServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_TravelServer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
