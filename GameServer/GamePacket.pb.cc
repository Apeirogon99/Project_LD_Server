#if defined(_MSC_VER)
        #pragma warning (disable:4018) // 'expression' : signed/unsigned mismatch
        #pragma warning (disable:4065) // switch statement contains 'default' but no 'case' labels
        #pragma warning (disable:4146) // unary minus operator applied to unsigned type, result still unsigned
        #pragma warning (disable:4244) // 'conversion' conversion from 'type1' to 'type2', possible loss of data
        #pragma warning (disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used byclient of class 'type2'
        #pragma warning (disable:4267) // 'var' : conversion from 'size_t' to 'type', possible loss of data
        #pragma warning (disable:4305) // 'identifier' : truncation from 'type1' to 'type2'
        #pragma warning (disable:4307) // 'operator' : integral constant overflow
        #pragma warning (disable:4309) // 'conversion' : truncation of constant value
        #pragma warning (disable:4334) // 'operator' : result of 32-bit shift implicitly converted to 64 bits (was64bit shift intended?)
        #pragma warning (disable:4355) // 'this' : used in base member initializer list
        #pragma warning (disable:4506) // no definition for inline function 'function'
        #pragma warning (disable:4800) // 'type' : forcing value to bool 'true' or 'false' (performance warning)
		 #pragma warning (disable:4946) // reinterpret_cast used between related classes: 'class1' and 'class2'
        #pragma warning (disable:4996) // The compiler encountered a deprecated declaration.
        #pragma warning (disable:4125) // decimal digit terminates octal escape sequence
#endif

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GamePacket.proto

#include "GamePacket.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR C2S_EnterGameServer::C2S_EnterGameServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_EnterGameServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_EnterGameServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_EnterGameServerDefaultTypeInternal() {}
  union {
    C2S_EnterGameServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_EnterGameServerDefaultTypeInternal _C2S_EnterGameServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_EnterGameServer::S2C_EnterGameServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_data_)*/nullptr
  , /*decltype(_impl_.transform_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_EnterGameServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_EnterGameServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_EnterGameServerDefaultTypeInternal() {}
  union {
    S2C_EnterGameServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_EnterGameServerDefaultTypeInternal _S2C_EnterGameServer_default_instance_;
PROTOBUF_CONSTEXPR C2S_LeaveGameServer::C2S_LeaveGameServer(
    ::_pbi::ConstantInitialized) {}
struct C2S_LeaveGameServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LeaveGameServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LeaveGameServerDefaultTypeInternal() {}
  union {
    C2S_LeaveGameServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LeaveGameServerDefaultTypeInternal _C2S_LeaveGameServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_LeaveGameServer::S2C_LeaveGameServer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LeaveGameServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LeaveGameServerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LeaveGameServerDefaultTypeInternal() {}
  union {
    S2C_LeaveGameServer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LeaveGameServerDefaultTypeInternal _S2C_LeaveGameServer_default_instance_;
PROTOBUF_CONSTEXPR S2C_AppearCharacter::S2C_AppearCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.old_location_)*/nullptr
  , /*decltype(_impl_.new_location_)*/nullptr
  , /*decltype(_impl_.character_data_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_AppearCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_AppearCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_AppearCharacterDefaultTypeInternal() {}
  union {
    S2C_AppearCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_AppearCharacterDefaultTypeInternal _S2C_AppearCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_DisAppearCharacter::S2C_DisAppearCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DisAppearCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DisAppearCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DisAppearCharacterDefaultTypeInternal() {}
  union {
    S2C_DisAppearCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DisAppearCharacterDefaultTypeInternal _S2C_DisAppearCharacter_default_instance_;
PROTOBUF_CONSTEXPR C2S_MovementCharacter::C2S_MovementCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.old_location_)*/nullptr
  , /*decltype(_impl_.new_location_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_MovementCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_MovementCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_MovementCharacterDefaultTypeInternal() {}
  union {
    C2S_MovementCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_MovementCharacterDefaultTypeInternal _C2S_MovementCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_MovementCharacter::S2C_MovementCharacter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.old_location_)*/nullptr
  , /*decltype(_impl_.new_location_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_MovementCharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_MovementCharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_MovementCharacterDefaultTypeInternal() {}
  union {
    S2C_MovementCharacter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_MovementCharacterDefaultTypeInternal _S2C_MovementCharacter_default_instance_;
PROTOBUF_CONSTEXPR S2C_AppearItem::S2C_AppearItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_AppearItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_AppearItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_AppearItemDefaultTypeInternal() {}
  union {
    S2C_AppearItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_AppearItemDefaultTypeInternal _S2C_AppearItem_default_instance_;
PROTOBUF_CONSTEXPR S2C_DisAppearGameObject::S2C_DisAppearGameObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DisAppearGameObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DisAppearGameObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DisAppearGameObjectDefaultTypeInternal() {}
  union {
    S2C_DisAppearGameObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DisAppearGameObjectDefaultTypeInternal _S2C_DisAppearGameObject_default_instance_;
PROTOBUF_CONSTEXPR S2C_DestroyItem::S2C_DestroyItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DestroyItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DestroyItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DestroyItemDefaultTypeInternal() {}
  union {
    S2C_DestroyItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DestroyItemDefaultTypeInternal _S2C_DestroyItem_default_instance_;
PROTOBUF_CONSTEXPR C2S_LoadInventory::C2S_LoadInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_LoadInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_LoadInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_LoadInventoryDefaultTypeInternal() {}
  union {
    C2S_LoadInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_LoadInventoryDefaultTypeInternal _C2S_LoadInventory_default_instance_;
PROTOBUF_CONSTEXPR S2C_LoadInventory::S2C_LoadInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/{}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_LoadInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_LoadInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_LoadInventoryDefaultTypeInternal() {}
  union {
    S2C_LoadInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_LoadInventoryDefaultTypeInternal _S2C_LoadInventory_default_instance_;
PROTOBUF_CONSTEXPR C2S_InsertInventory::C2S_InsertInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_InsertInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_InsertInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_InsertInventoryDefaultTypeInternal() {}
  union {
    C2S_InsertInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_InsertInventoryDefaultTypeInternal _C2S_InsertInventory_default_instance_;
PROTOBUF_CONSTEXPR S2C_InsertInventory::S2C_InsertInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.object_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_InsertInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_InsertInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_InsertInventoryDefaultTypeInternal() {}
  union {
    S2C_InsertInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_InsertInventoryDefaultTypeInternal _S2C_InsertInventory_default_instance_;
PROTOBUF_CONSTEXPR C2S_UpdateInventory::C2S_UpdateInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_UpdateInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UpdateInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UpdateInventoryDefaultTypeInternal() {}
  union {
    C2S_UpdateInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UpdateInventoryDefaultTypeInternal _C2S_UpdateInventory_default_instance_;
PROTOBUF_CONSTEXPR S2C_UpdateInventory::S2C_UpdateInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_UpdateInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UpdateInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UpdateInventoryDefaultTypeInternal() {}
  union {
    S2C_UpdateInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UpdateInventoryDefaultTypeInternal _S2C_UpdateInventory_default_instance_;
PROTOBUF_CONSTEXPR C2S_DeleteInventory::C2S_DeleteInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_DeleteInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_DeleteInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_DeleteInventoryDefaultTypeInternal() {}
  union {
    C2S_DeleteInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_DeleteInventoryDefaultTypeInternal _C2S_DeleteInventory_default_instance_;
PROTOBUF_CONSTEXPR S2C_DeleteInventory::S2C_DeleteInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DeleteInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DeleteInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DeleteInventoryDefaultTypeInternal() {}
  union {
    S2C_DeleteInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DeleteInventoryDefaultTypeInternal _S2C_DeleteInventory_default_instance_;
PROTOBUF_CONSTEXPR S2C_RollbackInventory::S2C_RollbackInventory(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.remote_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_RollbackInventoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_RollbackInventoryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_RollbackInventoryDefaultTypeInternal() {}
  union {
    S2C_RollbackInventory _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_RollbackInventoryDefaultTypeInternal _S2C_RollbackInventory_default_instance_;
PROTOBUF_CONSTEXPR C2S_UpdateEqipment::C2S_UpdateEqipment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_.part_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_UpdateEqipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_UpdateEqipmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_UpdateEqipmentDefaultTypeInternal() {}
  union {
    C2S_UpdateEqipment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_UpdateEqipmentDefaultTypeInternal _C2S_UpdateEqipment_default_instance_;
PROTOBUF_CONSTEXPR S2C_UpdateEqipment::S2C_UpdateEqipment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.part_)*/0
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_UpdateEqipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_UpdateEqipmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_UpdateEqipmentDefaultTypeInternal() {}
  union {
    S2C_UpdateEqipment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_UpdateEqipmentDefaultTypeInternal _S2C_UpdateEqipment_default_instance_;
PROTOBUF_CONSTEXPR C2S_DeleteEqipment::C2S_DeleteEqipment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.timestamp_)*/int64_t{0}
  , /*decltype(_impl_.part_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct C2S_DeleteEqipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_DeleteEqipmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_DeleteEqipmentDefaultTypeInternal() {}
  union {
    C2S_DeleteEqipment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_DeleteEqipmentDefaultTypeInternal _C2S_DeleteEqipment_default_instance_;
PROTOBUF_CONSTEXPR S2C_DeleteEqipment::S2C_DeleteEqipment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.part_)*/0
  , /*decltype(_impl_.error_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct S2C_DeleteEqipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_DeleteEqipmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_DeleteEqipmentDefaultTypeInternal() {}
  union {
    S2C_DeleteEqipment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_DeleteEqipmentDefaultTypeInternal _S2C_DeleteEqipment_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_GamePacket_2eproto[24];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_GamePacket_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_GamePacket_2eproto = nullptr;

const uint32_t TableStruct_GamePacket_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_EnterGameServer, _impl_.token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterGameServer, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterGameServer, _impl_.character_data_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterGameServer, _impl_.transform_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_EnterGameServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LeaveGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveGameServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LeaveGameServer, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _impl_.old_location_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _impl_.new_location_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearCharacter, _impl_.character_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DisAppearCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DisAppearCharacter, _impl_.remote_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_MovementCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_MovementCharacter, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_MovementCharacter, _impl_.old_location_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_MovementCharacter, _impl_.new_location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_MovementCharacter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_MovementCharacter, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_MovementCharacter, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_MovementCharacter, _impl_.old_location_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_MovementCharacter, _impl_.new_location_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_AppearItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DisAppearGameObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DisAppearGameObject, _impl_.object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DestroyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DestroyItem, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_LoadInventory, _impl_.timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadInventory, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_LoadInventory, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_InsertInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_InsertInventory, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_InsertInventory, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InsertInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InsertInventory, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InsertInventory, _impl_.object_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_InsertInventory, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateInventory, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateInventory, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateInventory, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteInventory, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteInventory, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteInventory, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteInventory, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteInventory, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RollbackInventory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RollbackInventory, _impl_.remote_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_RollbackInventory, _impl_.item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateEqipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateEqipment, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateEqipment, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_UpdateEqipment, _impl_.part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateEqipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateEqipment, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateEqipment, _impl_.part_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_UpdateEqipment, _impl_.error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteEqipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteEqipment, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteEqipment, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::C2S_DeleteEqipment, _impl_.part_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteEqipment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteEqipment, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteEqipment, _impl_.part_),
  PROTOBUF_FIELD_OFFSET(::Protocol::S2C_DeleteEqipment, _impl_.error_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::C2S_EnterGameServer)},
  { 7, -1, -1, sizeof(::Protocol::S2C_EnterGameServer)},
  { 17, -1, -1, sizeof(::Protocol::C2S_LeaveGameServer)},
  { 23, -1, -1, sizeof(::Protocol::S2C_LeaveGameServer)},
  { 30, -1, -1, sizeof(::Protocol::S2C_AppearCharacter)},
  { 41, -1, -1, sizeof(::Protocol::S2C_DisAppearCharacter)},
  { 48, -1, -1, sizeof(::Protocol::C2S_MovementCharacter)},
  { 57, -1, -1, sizeof(::Protocol::S2C_MovementCharacter)},
  { 67, -1, -1, sizeof(::Protocol::S2C_AppearItem)},
  { 74, -1, -1, sizeof(::Protocol::S2C_DisAppearGameObject)},
  { 81, -1, -1, sizeof(::Protocol::S2C_DestroyItem)},
  { 88, -1, -1, sizeof(::Protocol::C2S_LoadInventory)},
  { 95, -1, -1, sizeof(::Protocol::S2C_LoadInventory)},
  { 103, -1, -1, sizeof(::Protocol::C2S_InsertInventory)},
  { 111, -1, -1, sizeof(::Protocol::S2C_InsertInventory)},
  { 120, -1, -1, sizeof(::Protocol::C2S_UpdateInventory)},
  { 128, -1, -1, sizeof(::Protocol::S2C_UpdateInventory)},
  { 135, -1, -1, sizeof(::Protocol::C2S_DeleteInventory)},
  { 143, -1, -1, sizeof(::Protocol::S2C_DeleteInventory)},
  { 152, -1, -1, sizeof(::Protocol::S2C_RollbackInventory)},
  { 160, -1, -1, sizeof(::Protocol::C2S_UpdateEqipment)},
  { 169, -1, -1, sizeof(::Protocol::S2C_UpdateEqipment)},
  { 178, -1, -1, sizeof(::Protocol::C2S_DeleteEqipment)},
  { 187, -1, -1, sizeof(::Protocol::S2C_DeleteEqipment)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_C2S_EnterGameServer_default_instance_._instance,
  &::Protocol::_S2C_EnterGameServer_default_instance_._instance,
  &::Protocol::_C2S_LeaveGameServer_default_instance_._instance,
  &::Protocol::_S2C_LeaveGameServer_default_instance_._instance,
  &::Protocol::_S2C_AppearCharacter_default_instance_._instance,
  &::Protocol::_S2C_DisAppearCharacter_default_instance_._instance,
  &::Protocol::_C2S_MovementCharacter_default_instance_._instance,
  &::Protocol::_S2C_MovementCharacter_default_instance_._instance,
  &::Protocol::_S2C_AppearItem_default_instance_._instance,
  &::Protocol::_S2C_DisAppearGameObject_default_instance_._instance,
  &::Protocol::_S2C_DestroyItem_default_instance_._instance,
  &::Protocol::_C2S_LoadInventory_default_instance_._instance,
  &::Protocol::_S2C_LoadInventory_default_instance_._instance,
  &::Protocol::_C2S_InsertInventory_default_instance_._instance,
  &::Protocol::_S2C_InsertInventory_default_instance_._instance,
  &::Protocol::_C2S_UpdateInventory_default_instance_._instance,
  &::Protocol::_S2C_UpdateInventory_default_instance_._instance,
  &::Protocol::_C2S_DeleteInventory_default_instance_._instance,
  &::Protocol::_S2C_DeleteInventory_default_instance_._instance,
  &::Protocol::_S2C_RollbackInventory_default_instance_._instance,
  &::Protocol::_C2S_UpdateEqipment_default_instance_._instance,
  &::Protocol::_S2C_UpdateEqipment_default_instance_._instance,
  &::Protocol::_C2S_DeleteEqipment_default_instance_._instance,
  &::Protocol::_S2C_DeleteEqipment_default_instance_._instance,
};

const char descriptor_table_protodef_GamePacket_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020GamePacket.proto\022\010Protocol\032\022PacketStru"
  "ct.proto\032\020PacketEnum.proto\"$\n\023C2S_EnterG"
  "ameServer\022\r\n\005token\030\001 \001(\014\"\222\001\n\023S2C_EnterGa"
  "meServer\022\021\n\tremote_id\030\001 \001(\003\0220\n\016character"
  "_data\030\002 \001(\0132\030.Protocol.SCharacterData\022\'\n"
  "\ttransform\030\003 \001(\0132\024.Protocol.STransform\022\r"
  "\n\005error\030\004 \001(\005\"\025\n\023C2S_LeaveGameServer\"$\n\023"
  "S2C_LeaveGameServer\022\r\n\005error\030\001 \001(\005\"\277\001\n\023S"
  "2C_AppearCharacter\022\021\n\tremote_id\030\001 \001(\003\022\021\n"
  "\ttimestamp\030\002 \001(\003\022\'\n\014old_location\030\003 \001(\0132\021"
  ".Protocol.SVector\022\'\n\014new_location\030\004 \001(\0132"
  "\021.Protocol.SVector\0220\n\016character_data\030\005 \001"
  "(\0132\030.Protocol.SCharacterData\"+\n\026S2C_DisA"
  "ppearCharacter\022\021\n\tremote_id\030\001 \001(\003\"|\n\025C2S"
  "_MovementCharacter\022\021\n\ttimestamp\030\001 \001(\003\022\'\n"
  "\014old_location\030\002 \001(\0132\021.Protocol.SVector\022\'"
  "\n\014new_location\030\003 \001(\0132\021.Protocol.SVector\""
  "\217\001\n\025S2C_MovementCharacter\022\021\n\tremote_id\030\001"
  " \001(\003\022\021\n\ttimestamp\030\002 \001(\003\022\'\n\014old_location\030"
  "\003 \001(\0132\021.Protocol.SVector\022\'\n\014new_location"
  "\030\004 \001(\0132\021.Protocol.SVector\"/\n\016S2C_AppearI"
  "tem\022\035\n\004item\030\001 \003(\0132\017.Protocol.SItem\",\n\027S2"
  "C_DisAppearGameObject\022\021\n\tobject_id\030\001 \001(\003"
  "\"0\n\017S2C_DestroyItem\022\035\n\004item\030\001 \001(\0132\017.Prot"
  "ocol.SItem\"&\n\021C2S_LoadInventory\022\021\n\ttimes"
  "tamp\030\001 \001(\003\"A\n\021S2C_LoadInventory\022\035\n\004item\030"
  "\001 \003(\0132\017.Protocol.SItem\022\r\n\005error\030\002 \001(\005\"G\n"
  "\023C2S_InsertInventory\022\021\n\ttimestamp\030\001 \001(\003\022"
  "\035\n\004item\030\002 \001(\0132\017.Protocol.SItem\"J\n\023S2C_In"
  "sertInventory\022\021\n\tremote_id\030\001 \001(\003\022\021\n\tobje"
  "ct_id\030\002 \001(\003\022\r\n\005error\030\003 \001(\005\"G\n\023C2S_Update"
  "Inventory\022\021\n\ttimestamp\030\001 \001(\003\022\035\n\004item\030\002 \001"
  "(\0132\017.Protocol.SItem\"$\n\023S2C_UpdateInvento"
  "ry\022\r\n\005error\030\001 \001(\005\"G\n\023C2S_DeleteInventory"
  "\022\021\n\ttimestamp\030\001 \001(\003\022\035\n\004item\030\002 \001(\0132\017.Prot"
  "ocol.SItem\"V\n\023S2C_DeleteInventory\022\021\n\trem"
  "ote_id\030\001 \001(\003\022\035\n\004item\030\002 \001(\0132\017.Protocol.SI"
  "tem\022\r\n\005error\030\003 \001(\005\"I\n\025S2C_RollbackInvent"
  "ory\022\021\n\tremote_id\030\001 \001(\003\022\035\n\004item\030\002 \001(\0132\017.P"
  "rotocol.SItem\"n\n\022C2S_UpdateEqipment\022\021\n\tt"
  "imestamp\030\001 \001(\003\022\035\n\004item\030\002 \001(\0132\017.Protocol."
  "SItem\022&\n\004part\030\003 \001(\0162\030.Protocol.ECharacte"
  "rPart\"j\n\022S2C_UpdateEqipment\022\035\n\004item\030\001 \001("
  "\0132\017.Protocol.SItem\022&\n\004part\030\002 \001(\0162\030.Proto"
  "col.ECharacterPart\022\r\n\005error\030\003 \001(\005\"n\n\022C2S"
  "_DeleteEqipment\022\021\n\ttimestamp\030\001 \001(\003\022\035\n\004it"
  "em\030\002 \001(\0132\017.Protocol.SItem\022&\n\004part\030\003 \001(\0162"
  "\030.Protocol.ECharacterPart\"j\n\022S2C_DeleteE"
  "qipment\022\035\n\004item\030\001 \001(\0132\017.Protocol.SItem\022&"
  "\n\004part\030\002 \001(\0162\030.Protocol.ECharacterPart\022\r"
  "\n\005error\030\003 \001(\005b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_GamePacket_2eproto_deps[2] = {
  &::descriptor_table_PacketEnum_2eproto,
  &::descriptor_table_PacketStruct_2eproto,
};
static ::_pbi::once_flag descriptor_table_GamePacket_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_GamePacket_2eproto = {
    false, false, 2021, descriptor_table_protodef_GamePacket_2eproto,
    "GamePacket.proto",
    &descriptor_table_GamePacket_2eproto_once, descriptor_table_GamePacket_2eproto_deps, 2, 24,
    schemas, file_default_instances, TableStruct_GamePacket_2eproto::offsets,
    file_level_metadata_GamePacket_2eproto, file_level_enum_descriptors_GamePacket_2eproto,
    file_level_service_descriptors_GamePacket_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_GamePacket_2eproto_getter() {
  return &descriptor_table_GamePacket_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_GamePacket_2eproto(&descriptor_table_GamePacket_2eproto);
namespace Protocol {

// ===================================================================

class C2S_EnterGameServer::_Internal {
 public:
};

C2S_EnterGameServer::C2S_EnterGameServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_EnterGameServer)
}
C2S_EnterGameServer::C2S_EnterGameServer(const C2S_EnterGameServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_EnterGameServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_EnterGameServer)
}

inline void C2S_EnterGameServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

C2S_EnterGameServer::~C2S_EnterGameServer() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_EnterGameServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_EnterGameServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
}

void C2S_EnterGameServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_EnterGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_EnterGameServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_EnterGameServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_EnterGameServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_EnterGameServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (!this->_internal_token().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_EnterGameServer)
  return target;
}

size_t C2S_EnterGameServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_EnterGameServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_EnterGameServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_EnterGameServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_EnterGameServer::GetClassData() const { return &_class_data_; }


void C2S_EnterGameServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_EnterGameServer*>(&to_msg);
  auto& from = static_cast<const C2S_EnterGameServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_EnterGameServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_EnterGameServer::CopyFrom(const C2S_EnterGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_EnterGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_EnterGameServer::IsInitialized() const {
  return true;
}

void C2S_EnterGameServer::InternalSwap(C2S_EnterGameServer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_EnterGameServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[0]);
}

// ===================================================================

class S2C_EnterGameServer::_Internal {
 public:
  static const ::Protocol::SCharacterData& character_data(const S2C_EnterGameServer* msg);
  static const ::Protocol::STransform& transform(const S2C_EnterGameServer* msg);
};

const ::Protocol::SCharacterData&
S2C_EnterGameServer::_Internal::character_data(const S2C_EnterGameServer* msg) {
  return *msg->_impl_.character_data_;
}
const ::Protocol::STransform&
S2C_EnterGameServer::_Internal::transform(const S2C_EnterGameServer* msg) {
  return *msg->_impl_.transform_;
}
void S2C_EnterGameServer::clear_character_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.character_data_ != nullptr) {
    delete _impl_.character_data_;
  }
  _impl_.character_data_ = nullptr;
}
void S2C_EnterGameServer::clear_transform() {
  if (GetArenaForAllocation() == nullptr && _impl_.transform_ != nullptr) {
    delete _impl_.transform_;
  }
  _impl_.transform_ = nullptr;
}
S2C_EnterGameServer::S2C_EnterGameServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_EnterGameServer)
}
S2C_EnterGameServer::S2C_EnterGameServer(const S2C_EnterGameServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_EnterGameServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_data_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character_data()) {
    _this->_impl_.character_data_ = new ::Protocol::SCharacterData(*from._impl_.character_data_);
  }
  if (from._internal_has_transform()) {
    _this->_impl_.transform_ = new ::Protocol::STransform(*from._impl_.transform_);
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_EnterGameServer)
}

inline void S2C_EnterGameServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_data_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_EnterGameServer::~S2C_EnterGameServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_EnterGameServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_EnterGameServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_data_;
  if (this != internal_default_instance()) delete _impl_.transform_;
}

void S2C_EnterGameServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_EnterGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_EnterGameServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.character_data_ != nullptr) {
    delete _impl_.character_data_;
  }
  _impl_.character_data_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.transform_ != nullptr) {
    delete _impl_.transform_;
  }
  _impl_.transform_ = nullptr;
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_EnterGameServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SCharacterData character_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.STransform transform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_EnterGameServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_EnterGameServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // .Protocol.SCharacterData character_data = 2;
  if (this->_internal_has_character_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::character_data(this),
        _Internal::character_data(this).GetCachedSize(), target, stream);
  }

  // .Protocol.STransform transform = 3;
  if (this->_internal_has_transform()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // int32 error = 4;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_EnterGameServer)
  return target;
}

size_t S2C_EnterGameServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_EnterGameServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SCharacterData character_data = 2;
  if (this->_internal_has_character_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_data_);
  }

  // .Protocol.STransform transform = 3;
  if (this->_internal_has_transform()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transform_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 4;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_EnterGameServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_EnterGameServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_EnterGameServer::GetClassData() const { return &_class_data_; }


void S2C_EnterGameServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_EnterGameServer*>(&to_msg);
  auto& from = static_cast<const S2C_EnterGameServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_EnterGameServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character_data()) {
    _this->_internal_mutable_character_data()->::Protocol::SCharacterData::MergeFrom(
        from._internal_character_data());
  }
  if (from._internal_has_transform()) {
    _this->_internal_mutable_transform()->::Protocol::STransform::MergeFrom(
        from._internal_transform());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_EnterGameServer::CopyFrom(const S2C_EnterGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_EnterGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_EnterGameServer::IsInitialized() const {
  return true;
}

void S2C_EnterGameServer::InternalSwap(S2C_EnterGameServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_EnterGameServer, _impl_.error_)
      + sizeof(S2C_EnterGameServer::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_EnterGameServer, _impl_.character_data_)>(
          reinterpret_cast<char*>(&_impl_.character_data_),
          reinterpret_cast<char*>(&other->_impl_.character_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_EnterGameServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[1]);
}

// ===================================================================

class C2S_LeaveGameServer::_Internal {
 public:
};

C2S_LeaveGameServer::C2S_LeaveGameServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LeaveGameServer)
}
C2S_LeaveGameServer::C2S_LeaveGameServer(const C2S_LeaveGameServer& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  C2S_LeaveGameServer* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LeaveGameServer)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LeaveGameServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LeaveGameServer::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C2S_LeaveGameServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[2]);
}

// ===================================================================

class S2C_LeaveGameServer::_Internal {
 public:
};

S2C_LeaveGameServer::S2C_LeaveGameServer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LeaveGameServer)
}
S2C_LeaveGameServer::S2C_LeaveGameServer(const S2C_LeaveGameServer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LeaveGameServer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LeaveGameServer)
}

inline void S2C_LeaveGameServer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LeaveGameServer::~S2C_LeaveGameServer() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LeaveGameServer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LeaveGameServer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_LeaveGameServer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LeaveGameServer::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LeaveGameServer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LeaveGameServer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LeaveGameServer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LeaveGameServer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LeaveGameServer)
  return target;
}

size_t S2C_LeaveGameServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LeaveGameServer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LeaveGameServer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LeaveGameServer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LeaveGameServer::GetClassData() const { return &_class_data_; }


void S2C_LeaveGameServer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LeaveGameServer*>(&to_msg);
  auto& from = static_cast<const S2C_LeaveGameServer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LeaveGameServer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LeaveGameServer::CopyFrom(const S2C_LeaveGameServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LeaveGameServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LeaveGameServer::IsInitialized() const {
  return true;
}

void S2C_LeaveGameServer::InternalSwap(S2C_LeaveGameServer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LeaveGameServer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[3]);
}

// ===================================================================

class S2C_AppearCharacter::_Internal {
 public:
  static const ::Protocol::SVector& old_location(const S2C_AppearCharacter* msg);
  static const ::Protocol::SVector& new_location(const S2C_AppearCharacter* msg);
  static const ::Protocol::SCharacterData& character_data(const S2C_AppearCharacter* msg);
};

const ::Protocol::SVector&
S2C_AppearCharacter::_Internal::old_location(const S2C_AppearCharacter* msg) {
  return *msg->_impl_.old_location_;
}
const ::Protocol::SVector&
S2C_AppearCharacter::_Internal::new_location(const S2C_AppearCharacter* msg) {
  return *msg->_impl_.new_location_;
}
const ::Protocol::SCharacterData&
S2C_AppearCharacter::_Internal::character_data(const S2C_AppearCharacter* msg) {
  return *msg->_impl_.character_data_;
}
void S2C_AppearCharacter::clear_old_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
}
void S2C_AppearCharacter::clear_new_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
}
void S2C_AppearCharacter::clear_character_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.character_data_ != nullptr) {
    delete _impl_.character_data_;
  }
  _impl_.character_data_ = nullptr;
}
S2C_AppearCharacter::S2C_AppearCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_AppearCharacter)
}
S2C_AppearCharacter::S2C_AppearCharacter(const S2C_AppearCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_AppearCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.character_data_){nullptr}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_old_location()) {
    _this->_impl_.old_location_ = new ::Protocol::SVector(*from._impl_.old_location_);
  }
  if (from._internal_has_new_location()) {
    _this->_impl_.new_location_ = new ::Protocol::SVector(*from._impl_.new_location_);
  }
  if (from._internal_has_character_data()) {
    _this->_impl_.character_data_ = new ::Protocol::SCharacterData(*from._impl_.character_data_);
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.timestamp_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.timestamp_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_AppearCharacter)
}

inline void S2C_AppearCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.character_data_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_AppearCharacter::~S2C_AppearCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_AppearCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_AppearCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.old_location_;
  if (this != internal_default_instance()) delete _impl_.new_location_;
  if (this != internal_default_instance()) delete _impl_.character_data_;
}

void S2C_AppearCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_AppearCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_AppearCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.character_data_ != nullptr) {
    delete _impl_.character_data_;
  }
  _impl_.character_data_ = nullptr;
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_AppearCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector old_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector new_location = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SCharacterData character_data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_AppearCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_AppearCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // .Protocol.SVector old_location = 3;
  if (this->_internal_has_old_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::old_location(this),
        _Internal::old_location(this).GetCachedSize(), target, stream);
  }

  // .Protocol.SVector new_location = 4;
  if (this->_internal_has_new_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::new_location(this),
        _Internal::new_location(this).GetCachedSize(), target, stream);
  }

  // .Protocol.SCharacterData character_data = 5;
  if (this->_internal_has_character_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::character_data(this),
        _Internal::character_data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_AppearCharacter)
  return target;
}

size_t S2C_AppearCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_AppearCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SVector old_location = 3;
  if (this->_internal_has_old_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.old_location_);
  }

  // .Protocol.SVector new_location = 4;
  if (this->_internal_has_new_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.new_location_);
  }

  // .Protocol.SCharacterData character_data = 5;
  if (this->_internal_has_character_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_data_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_AppearCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_AppearCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_AppearCharacter::GetClassData() const { return &_class_data_; }


void S2C_AppearCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_AppearCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_AppearCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_AppearCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_old_location()) {
    _this->_internal_mutable_old_location()->::Protocol::SVector::MergeFrom(
        from._internal_old_location());
  }
  if (from._internal_has_new_location()) {
    _this->_internal_mutable_new_location()->::Protocol::SVector::MergeFrom(
        from._internal_new_location());
  }
  if (from._internal_has_character_data()) {
    _this->_internal_mutable_character_data()->::Protocol::SCharacterData::MergeFrom(
        from._internal_character_data());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_AppearCharacter::CopyFrom(const S2C_AppearCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_AppearCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AppearCharacter::IsInitialized() const {
  return true;
}

void S2C_AppearCharacter::InternalSwap(S2C_AppearCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_AppearCharacter, _impl_.timestamp_)
      + sizeof(S2C_AppearCharacter::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(S2C_AppearCharacter, _impl_.old_location_)>(
          reinterpret_cast<char*>(&_impl_.old_location_),
          reinterpret_cast<char*>(&other->_impl_.old_location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_AppearCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[4]);
}

// ===================================================================

class S2C_DisAppearCharacter::_Internal {
 public:
};

S2C_DisAppearCharacter::S2C_DisAppearCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DisAppearCharacter)
}
S2C_DisAppearCharacter::S2C_DisAppearCharacter(const S2C_DisAppearCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DisAppearCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DisAppearCharacter)
}

inline void S2C_DisAppearCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DisAppearCharacter::~S2C_DisAppearCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DisAppearCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DisAppearCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_DisAppearCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DisAppearCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DisAppearCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DisAppearCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DisAppearCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DisAppearCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DisAppearCharacter)
  return target;
}

size_t S2C_DisAppearCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DisAppearCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DisAppearCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DisAppearCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DisAppearCharacter::GetClassData() const { return &_class_data_; }


void S2C_DisAppearCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DisAppearCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_DisAppearCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DisAppearCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DisAppearCharacter::CopyFrom(const S2C_DisAppearCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DisAppearCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DisAppearCharacter::IsInitialized() const {
  return true;
}

void S2C_DisAppearCharacter::InternalSwap(S2C_DisAppearCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.remote_id_, other->_impl_.remote_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DisAppearCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[5]);
}

// ===================================================================

class C2S_MovementCharacter::_Internal {
 public:
  static const ::Protocol::SVector& old_location(const C2S_MovementCharacter* msg);
  static const ::Protocol::SVector& new_location(const C2S_MovementCharacter* msg);
};

const ::Protocol::SVector&
C2S_MovementCharacter::_Internal::old_location(const C2S_MovementCharacter* msg) {
  return *msg->_impl_.old_location_;
}
const ::Protocol::SVector&
C2S_MovementCharacter::_Internal::new_location(const C2S_MovementCharacter* msg) {
  return *msg->_impl_.new_location_;
}
void C2S_MovementCharacter::clear_old_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
}
void C2S_MovementCharacter::clear_new_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
}
C2S_MovementCharacter::C2S_MovementCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_MovementCharacter)
}
C2S_MovementCharacter::C2S_MovementCharacter(const C2S_MovementCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_MovementCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_old_location()) {
    _this->_impl_.old_location_ = new ::Protocol::SVector(*from._impl_.old_location_);
  }
  if (from._internal_has_new_location()) {
    _this->_impl_.new_location_ = new ::Protocol::SVector(*from._impl_.new_location_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_MovementCharacter)
}

inline void C2S_MovementCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_MovementCharacter::~C2S_MovementCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_MovementCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_MovementCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.old_location_;
  if (this != internal_default_instance()) delete _impl_.new_location_;
}

void C2S_MovementCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_MovementCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_MovementCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
  _impl_.timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_MovementCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector old_location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector new_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_MovementCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_MovementCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SVector old_location = 2;
  if (this->_internal_has_old_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::old_location(this),
        _Internal::old_location(this).GetCachedSize(), target, stream);
  }

  // .Protocol.SVector new_location = 3;
  if (this->_internal_has_new_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::new_location(this),
        _Internal::new_location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_MovementCharacter)
  return target;
}

size_t C2S_MovementCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_MovementCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SVector old_location = 2;
  if (this->_internal_has_old_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.old_location_);
  }

  // .Protocol.SVector new_location = 3;
  if (this->_internal_has_new_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.new_location_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_MovementCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_MovementCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_MovementCharacter::GetClassData() const { return &_class_data_; }


void C2S_MovementCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_MovementCharacter*>(&to_msg);
  auto& from = static_cast<const C2S_MovementCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_MovementCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_old_location()) {
    _this->_internal_mutable_old_location()->::Protocol::SVector::MergeFrom(
        from._internal_old_location());
  }
  if (from._internal_has_new_location()) {
    _this->_internal_mutable_new_location()->::Protocol::SVector::MergeFrom(
        from._internal_new_location());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_MovementCharacter::CopyFrom(const C2S_MovementCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_MovementCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_MovementCharacter::IsInitialized() const {
  return true;
}

void C2S_MovementCharacter::InternalSwap(C2S_MovementCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_MovementCharacter, _impl_.timestamp_)
      + sizeof(C2S_MovementCharacter::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(C2S_MovementCharacter, _impl_.old_location_)>(
          reinterpret_cast<char*>(&_impl_.old_location_),
          reinterpret_cast<char*>(&other->_impl_.old_location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_MovementCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[6]);
}

// ===================================================================

class S2C_MovementCharacter::_Internal {
 public:
  static const ::Protocol::SVector& old_location(const S2C_MovementCharacter* msg);
  static const ::Protocol::SVector& new_location(const S2C_MovementCharacter* msg);
};

const ::Protocol::SVector&
S2C_MovementCharacter::_Internal::old_location(const S2C_MovementCharacter* msg) {
  return *msg->_impl_.old_location_;
}
const ::Protocol::SVector&
S2C_MovementCharacter::_Internal::new_location(const S2C_MovementCharacter* msg) {
  return *msg->_impl_.new_location_;
}
void S2C_MovementCharacter::clear_old_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
}
void S2C_MovementCharacter::clear_new_location() {
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
}
S2C_MovementCharacter::S2C_MovementCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_MovementCharacter)
}
S2C_MovementCharacter::S2C_MovementCharacter(const S2C_MovementCharacter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_MovementCharacter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_old_location()) {
    _this->_impl_.old_location_ = new ::Protocol::SVector(*from._impl_.old_location_);
  }
  if (from._internal_has_new_location()) {
    _this->_impl_.new_location_ = new ::Protocol::SVector(*from._impl_.new_location_);
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.timestamp_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.timestamp_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_MovementCharacter)
}

inline void S2C_MovementCharacter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.old_location_){nullptr}
    , decltype(_impl_.new_location_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_MovementCharacter::~S2C_MovementCharacter() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_MovementCharacter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_MovementCharacter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.old_location_;
  if (this != internal_default_instance()) delete _impl_.new_location_;
}

void S2C_MovementCharacter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_MovementCharacter::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_MovementCharacter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.old_location_ != nullptr) {
    delete _impl_.old_location_;
  }
  _impl_.old_location_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.new_location_ != nullptr) {
    delete _impl_.new_location_;
  }
  _impl_.new_location_ = nullptr;
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_MovementCharacter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector old_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SVector new_location = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_location(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_MovementCharacter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_MovementCharacter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // .Protocol.SVector old_location = 3;
  if (this->_internal_has_old_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::old_location(this),
        _Internal::old_location(this).GetCachedSize(), target, stream);
  }

  // .Protocol.SVector new_location = 4;
  if (this->_internal_has_new_location()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::new_location(this),
        _Internal::new_location(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_MovementCharacter)
  return target;
}

size_t S2C_MovementCharacter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_MovementCharacter)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SVector old_location = 3;
  if (this->_internal_has_old_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.old_location_);
  }

  // .Protocol.SVector new_location = 4;
  if (this->_internal_has_new_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.new_location_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_MovementCharacter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_MovementCharacter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_MovementCharacter::GetClassData() const { return &_class_data_; }


void S2C_MovementCharacter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_MovementCharacter*>(&to_msg);
  auto& from = static_cast<const S2C_MovementCharacter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_MovementCharacter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_old_location()) {
    _this->_internal_mutable_old_location()->::Protocol::SVector::MergeFrom(
        from._internal_old_location());
  }
  if (from._internal_has_new_location()) {
    _this->_internal_mutable_new_location()->::Protocol::SVector::MergeFrom(
        from._internal_new_location());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_MovementCharacter::CopyFrom(const S2C_MovementCharacter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_MovementCharacter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_MovementCharacter::IsInitialized() const {
  return true;
}

void S2C_MovementCharacter::InternalSwap(S2C_MovementCharacter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_MovementCharacter, _impl_.timestamp_)
      + sizeof(S2C_MovementCharacter::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(S2C_MovementCharacter, _impl_.old_location_)>(
          reinterpret_cast<char*>(&_impl_.old_location_),
          reinterpret_cast<char*>(&other->_impl_.old_location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_MovementCharacter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[7]);
}

// ===================================================================

class S2C_AppearItem::_Internal {
 public:
};

void S2C_AppearItem::clear_item() {
  _impl_.item_.Clear();
}
S2C_AppearItem::S2C_AppearItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_AppearItem)
}
S2C_AppearItem::S2C_AppearItem(const S2C_AppearItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_AppearItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){from._impl_.item_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_AppearItem)
}

inline void S2C_AppearItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_AppearItem::~S2C_AppearItem() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_AppearItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_AppearItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_.~RepeatedPtrField();
}

void S2C_AppearItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_AppearItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_AppearItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_AppearItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.SItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_AppearItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_AppearItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.SItem item = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_size()); i < n; i++) {
    const auto& repfield = this->_internal_item(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_AppearItem)
  return target;
}

size_t S2C_AppearItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_AppearItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.SItem item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->_impl_.item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_AppearItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_AppearItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_AppearItem::GetClassData() const { return &_class_data_; }


void S2C_AppearItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_AppearItem*>(&to_msg);
  auto& from = static_cast<const S2C_AppearItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_AppearItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_.MergeFrom(from._impl_.item_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_AppearItem::CopyFrom(const S2C_AppearItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_AppearItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_AppearItem::IsInitialized() const {
  return true;
}

void S2C_AppearItem::InternalSwap(S2C_AppearItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_AppearItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[8]);
}

// ===================================================================

class S2C_DisAppearGameObject::_Internal {
 public:
};

S2C_DisAppearGameObject::S2C_DisAppearGameObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DisAppearGameObject)
}
S2C_DisAppearGameObject::S2C_DisAppearGameObject(const S2C_DisAppearGameObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DisAppearGameObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.object_id_ = from._impl_.object_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DisAppearGameObject)
}

inline void S2C_DisAppearGameObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DisAppearGameObject::~S2C_DisAppearGameObject() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DisAppearGameObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DisAppearGameObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_DisAppearGameObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DisAppearGameObject::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DisAppearGameObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DisAppearGameObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DisAppearGameObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DisAppearGameObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DisAppearGameObject)
  return target;
}

size_t S2C_DisAppearGameObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DisAppearGameObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DisAppearGameObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DisAppearGameObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DisAppearGameObject::GetClassData() const { return &_class_data_; }


void S2C_DisAppearGameObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DisAppearGameObject*>(&to_msg);
  auto& from = static_cast<const S2C_DisAppearGameObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DisAppearGameObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DisAppearGameObject::CopyFrom(const S2C_DisAppearGameObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DisAppearGameObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DisAppearGameObject::IsInitialized() const {
  return true;
}

void S2C_DisAppearGameObject::InternalSwap(S2C_DisAppearGameObject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.object_id_, other->_impl_.object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DisAppearGameObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[9]);
}

// ===================================================================

class S2C_DestroyItem::_Internal {
 public:
  static const ::Protocol::SItem& item(const S2C_DestroyItem* msg);
};

const ::Protocol::SItem&
S2C_DestroyItem::_Internal::item(const S2C_DestroyItem* msg) {
  return *msg->_impl_.item_;
}
void S2C_DestroyItem::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
S2C_DestroyItem::S2C_DestroyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DestroyItem)
}
S2C_DestroyItem::S2C_DestroyItem(const S2C_DestroyItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DestroyItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DestroyItem)
}

inline void S2C_DestroyItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DestroyItem::~S2C_DestroyItem() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DestroyItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DestroyItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void S2C_DestroyItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DestroyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DestroyItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DestroyItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DestroyItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DestroyItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DestroyItem)
  return target;
}

size_t S2C_DestroyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DestroyItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DestroyItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DestroyItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DestroyItem::GetClassData() const { return &_class_data_; }


void S2C_DestroyItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DestroyItem*>(&to_msg);
  auto& from = static_cast<const S2C_DestroyItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DestroyItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DestroyItem::CopyFrom(const S2C_DestroyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DestroyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DestroyItem::IsInitialized() const {
  return true;
}

void S2C_DestroyItem::InternalSwap(S2C_DestroyItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_, other->_impl_.item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DestroyItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[10]);
}

// ===================================================================

class C2S_LoadInventory::_Internal {
 public:
};

C2S_LoadInventory::C2S_LoadInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_LoadInventory)
}
C2S_LoadInventory::C2S_LoadInventory(const C2S_LoadInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_LoadInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_LoadInventory)
}

inline void C2S_LoadInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_LoadInventory::~C2S_LoadInventory() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_LoadInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_LoadInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C2S_LoadInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_LoadInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_LoadInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_LoadInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_LoadInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_LoadInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_LoadInventory)
  return target;
}

size_t C2S_LoadInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_LoadInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_LoadInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_LoadInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_LoadInventory::GetClassData() const { return &_class_data_; }


void C2S_LoadInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_LoadInventory*>(&to_msg);
  auto& from = static_cast<const C2S_LoadInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_LoadInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_LoadInventory::CopyFrom(const C2S_LoadInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_LoadInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LoadInventory::IsInitialized() const {
  return true;
}

void C2S_LoadInventory::InternalSwap(C2S_LoadInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_LoadInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[11]);
}

// ===================================================================

class S2C_LoadInventory::_Internal {
 public:
};

void S2C_LoadInventory::clear_item() {
  _impl_.item_.Clear();
}
S2C_LoadInventory::S2C_LoadInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_LoadInventory)
}
S2C_LoadInventory::S2C_LoadInventory(const S2C_LoadInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_LoadInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){from._impl_.item_}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_LoadInventory)
}

inline void S2C_LoadInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){arena}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_LoadInventory::~S2C_LoadInventory() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_LoadInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_LoadInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_.~RepeatedPtrField();
}

void S2C_LoadInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_LoadInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_LoadInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_LoadInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.SItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_LoadInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_LoadInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.SItem item = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_size()); i < n; i++) {
    const auto& repfield = this->_internal_item(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_LoadInventory)
  return target;
}

size_t S2C_LoadInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_LoadInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.SItem item = 1;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->_impl_.item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 error = 2;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_LoadInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_LoadInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_LoadInventory::GetClassData() const { return &_class_data_; }


void S2C_LoadInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_LoadInventory*>(&to_msg);
  auto& from = static_cast<const S2C_LoadInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_LoadInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_.MergeFrom(from._impl_.item_);
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_LoadInventory::CopyFrom(const S2C_LoadInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_LoadInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoadInventory::IsInitialized() const {
  return true;
}

void S2C_LoadInventory::InternalSwap(S2C_LoadInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_LoadInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[12]);
}

// ===================================================================

class C2S_InsertInventory::_Internal {
 public:
  static const ::Protocol::SItem& item(const C2S_InsertInventory* msg);
};

const ::Protocol::SItem&
C2S_InsertInventory::_Internal::item(const C2S_InsertInventory* msg) {
  return *msg->_impl_.item_;
}
void C2S_InsertInventory::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
C2S_InsertInventory::C2S_InsertInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_InsertInventory)
}
C2S_InsertInventory::C2S_InsertInventory(const C2S_InsertInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_InsertInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_InsertInventory)
}

inline void C2S_InsertInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_InsertInventory::~C2S_InsertInventory() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_InsertInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_InsertInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void C2S_InsertInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_InsertInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_InsertInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _impl_.timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_InsertInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_InsertInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_InsertInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_InsertInventory)
  return target;
}

size_t C2S_InsertInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_InsertInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_InsertInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_InsertInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_InsertInventory::GetClassData() const { return &_class_data_; }


void C2S_InsertInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_InsertInventory*>(&to_msg);
  auto& from = static_cast<const C2S_InsertInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_InsertInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_InsertInventory::CopyFrom(const C2S_InsertInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_InsertInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_InsertInventory::IsInitialized() const {
  return true;
}

void C2S_InsertInventory::InternalSwap(C2S_InsertInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_InsertInventory, _impl_.timestamp_)
      + sizeof(C2S_InsertInventory::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(C2S_InsertInventory, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_InsertInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[13]);
}

// ===================================================================

class S2C_InsertInventory::_Internal {
 public:
};

S2C_InsertInventory::S2C_InsertInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_InsertInventory)
}
S2C_InsertInventory::S2C_InsertInventory(const S2C_InsertInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_InsertInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){}
    , decltype(_impl_.object_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_InsertInventory)
}

inline void S2C_InsertInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.object_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_InsertInventory::~S2C_InsertInventory() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_InsertInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_InsertInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_InsertInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_InsertInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_InsertInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_InsertInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 object_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_InsertInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_InsertInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // int64 object_id = 2;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_object_id(), target);
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_InsertInventory)
  return target;
}

size_t S2C_InsertInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_InsertInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int64 object_id = 2;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_object_id());
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_InsertInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_InsertInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_InsertInventory::GetClassData() const { return &_class_data_; }


void S2C_InsertInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_InsertInventory*>(&to_msg);
  auto& from = static_cast<const S2C_InsertInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_InsertInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_InsertInventory::CopyFrom(const S2C_InsertInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_InsertInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_InsertInventory::IsInitialized() const {
  return true;
}

void S2C_InsertInventory::InternalSwap(S2C_InsertInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_InsertInventory, _impl_.error_)
      + sizeof(S2C_InsertInventory::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_InsertInventory, _impl_.remote_id_)>(
          reinterpret_cast<char*>(&_impl_.remote_id_),
          reinterpret_cast<char*>(&other->_impl_.remote_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_InsertInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[14]);
}

// ===================================================================

class C2S_UpdateInventory::_Internal {
 public:
  static const ::Protocol::SItem& item(const C2S_UpdateInventory* msg);
};

const ::Protocol::SItem&
C2S_UpdateInventory::_Internal::item(const C2S_UpdateInventory* msg) {
  return *msg->_impl_.item_;
}
void C2S_UpdateInventory::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
C2S_UpdateInventory::C2S_UpdateInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_UpdateInventory)
}
C2S_UpdateInventory::C2S_UpdateInventory(const C2S_UpdateInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_UpdateInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_UpdateInventory)
}

inline void C2S_UpdateInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_UpdateInventory::~C2S_UpdateInventory() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_UpdateInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_UpdateInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void C2S_UpdateInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_UpdateInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_UpdateInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _impl_.timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_UpdateInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_UpdateInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_UpdateInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_UpdateInventory)
  return target;
}

size_t C2S_UpdateInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_UpdateInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_UpdateInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_UpdateInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_UpdateInventory::GetClassData() const { return &_class_data_; }


void C2S_UpdateInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_UpdateInventory*>(&to_msg);
  auto& from = static_cast<const C2S_UpdateInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_UpdateInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UpdateInventory::CopyFrom(const C2S_UpdateInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_UpdateInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateInventory::IsInitialized() const {
  return true;
}

void C2S_UpdateInventory::InternalSwap(C2S_UpdateInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_UpdateInventory, _impl_.timestamp_)
      + sizeof(C2S_UpdateInventory::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(C2S_UpdateInventory, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_UpdateInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[15]);
}

// ===================================================================

class S2C_UpdateInventory::_Internal {
 public:
};

S2C_UpdateInventory::S2C_UpdateInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_UpdateInventory)
}
S2C_UpdateInventory::S2C_UpdateInventory(const S2C_UpdateInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_UpdateInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.error_ = from._impl_.error_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_UpdateInventory)
}

inline void S2C_UpdateInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_UpdateInventory::~S2C_UpdateInventory() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_UpdateInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_UpdateInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S2C_UpdateInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_UpdateInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_UpdateInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_UpdateInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_UpdateInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_UpdateInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_UpdateInventory)
  return target;
}

size_t S2C_UpdateInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_UpdateInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 error = 1;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_UpdateInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_UpdateInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_UpdateInventory::GetClassData() const { return &_class_data_; }


void S2C_UpdateInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_UpdateInventory*>(&to_msg);
  auto& from = static_cast<const S2C_UpdateInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_UpdateInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UpdateInventory::CopyFrom(const S2C_UpdateInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_UpdateInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateInventory::IsInitialized() const {
  return true;
}

void S2C_UpdateInventory::InternalSwap(S2C_UpdateInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.error_, other->_impl_.error_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_UpdateInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[16]);
}

// ===================================================================

class C2S_DeleteInventory::_Internal {
 public:
  static const ::Protocol::SItem& item(const C2S_DeleteInventory* msg);
};

const ::Protocol::SItem&
C2S_DeleteInventory::_Internal::item(const C2S_DeleteInventory* msg) {
  return *msg->_impl_.item_;
}
void C2S_DeleteInventory::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
C2S_DeleteInventory::C2S_DeleteInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_DeleteInventory)
}
C2S_DeleteInventory::C2S_DeleteInventory(const C2S_DeleteInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_DeleteInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_DeleteInventory)
}

inline void C2S_DeleteInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_DeleteInventory::~C2S_DeleteInventory() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_DeleteInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_DeleteInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void C2S_DeleteInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_DeleteInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_DeleteInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _impl_.timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_DeleteInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_DeleteInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_DeleteInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_DeleteInventory)
  return target;
}

size_t C2S_DeleteInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_DeleteInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_DeleteInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_DeleteInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_DeleteInventory::GetClassData() const { return &_class_data_; }


void C2S_DeleteInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_DeleteInventory*>(&to_msg);
  auto& from = static_cast<const C2S_DeleteInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_DeleteInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_DeleteInventory::CopyFrom(const C2S_DeleteInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_DeleteInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DeleteInventory::IsInitialized() const {
  return true;
}

void C2S_DeleteInventory::InternalSwap(C2S_DeleteInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_DeleteInventory, _impl_.timestamp_)
      + sizeof(C2S_DeleteInventory::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(C2S_DeleteInventory, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_DeleteInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[17]);
}

// ===================================================================

class S2C_DeleteInventory::_Internal {
 public:
  static const ::Protocol::SItem& item(const S2C_DeleteInventory* msg);
};

const ::Protocol::SItem&
S2C_DeleteInventory::_Internal::item(const S2C_DeleteInventory* msg) {
  return *msg->_impl_.item_;
}
void S2C_DeleteInventory::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
S2C_DeleteInventory::S2C_DeleteInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DeleteInventory)
}
S2C_DeleteInventory::S2C_DeleteInventory(const S2C_DeleteInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DeleteInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.remote_id_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  ::memcpy(&_impl_.remote_id_, &from._impl_.remote_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DeleteInventory)
}

inline void S2C_DeleteInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DeleteInventory::~S2C_DeleteInventory() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DeleteInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DeleteInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void S2C_DeleteInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DeleteInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DeleteInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  ::memset(&_impl_.remote_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.remote_id_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DeleteInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DeleteInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DeleteInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DeleteInventory)
  return target;
}

size_t S2C_DeleteInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DeleteInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DeleteInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DeleteInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DeleteInventory::GetClassData() const { return &_class_data_; }


void S2C_DeleteInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DeleteInventory*>(&to_msg);
  auto& from = static_cast<const S2C_DeleteInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DeleteInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DeleteInventory::CopyFrom(const S2C_DeleteInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DeleteInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DeleteInventory::IsInitialized() const {
  return true;
}

void S2C_DeleteInventory::InternalSwap(S2C_DeleteInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_DeleteInventory, _impl_.error_)
      + sizeof(S2C_DeleteInventory::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_DeleteInventory, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DeleteInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[18]);
}

// ===================================================================

class S2C_RollbackInventory::_Internal {
 public:
  static const ::Protocol::SItem& item(const S2C_RollbackInventory* msg);
};

const ::Protocol::SItem&
S2C_RollbackInventory::_Internal::item(const S2C_RollbackInventory* msg) {
  return *msg->_impl_.item_;
}
void S2C_RollbackInventory::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
S2C_RollbackInventory::S2C_RollbackInventory(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_RollbackInventory)
}
S2C_RollbackInventory::S2C_RollbackInventory(const S2C_RollbackInventory& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_RollbackInventory* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.remote_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  _this->_impl_.remote_id_ = from._impl_.remote_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_RollbackInventory)
}

inline void S2C_RollbackInventory::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.remote_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_RollbackInventory::~S2C_RollbackInventory() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_RollbackInventory)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_RollbackInventory::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void S2C_RollbackInventory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_RollbackInventory::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_RollbackInventory)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _impl_.remote_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_RollbackInventory::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 remote_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.remote_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_RollbackInventory::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_RollbackInventory)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_remote_id(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_RollbackInventory)
  return target;
}

size_t S2C_RollbackInventory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_RollbackInventory)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 remote_id = 1;
  if (this->_internal_remote_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_remote_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_RollbackInventory::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_RollbackInventory::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_RollbackInventory::GetClassData() const { return &_class_data_; }


void S2C_RollbackInventory::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_RollbackInventory*>(&to_msg);
  auto& from = static_cast<const S2C_RollbackInventory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_RollbackInventory)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_remote_id() != 0) {
    _this->_internal_set_remote_id(from._internal_remote_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_RollbackInventory::CopyFrom(const S2C_RollbackInventory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_RollbackInventory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_RollbackInventory::IsInitialized() const {
  return true;
}

void S2C_RollbackInventory::InternalSwap(S2C_RollbackInventory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_RollbackInventory, _impl_.remote_id_)
      + sizeof(S2C_RollbackInventory::_impl_.remote_id_)
      - PROTOBUF_FIELD_OFFSET(S2C_RollbackInventory, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_RollbackInventory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[19]);
}

// ===================================================================

class C2S_UpdateEqipment::_Internal {
 public:
  static const ::Protocol::SItem& item(const C2S_UpdateEqipment* msg);
};

const ::Protocol::SItem&
C2S_UpdateEqipment::_Internal::item(const C2S_UpdateEqipment* msg) {
  return *msg->_impl_.item_;
}
void C2S_UpdateEqipment::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
C2S_UpdateEqipment::C2S_UpdateEqipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_UpdateEqipment)
}
C2S_UpdateEqipment::C2S_UpdateEqipment(const C2S_UpdateEqipment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_UpdateEqipment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.part_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.part_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.part_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_UpdateEqipment)
}

inline void C2S_UpdateEqipment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , decltype(_impl_.part_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_UpdateEqipment::~C2S_UpdateEqipment() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_UpdateEqipment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_UpdateEqipment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void C2S_UpdateEqipment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_UpdateEqipment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_UpdateEqipment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  ::memset(&_impl_.timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.part_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.part_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_UpdateEqipment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ECharacterPart part = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_part(static_cast<::Protocol::ECharacterPart>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_UpdateEqipment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_UpdateEqipment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .Protocol.ECharacterPart part = 3;
  if (this->_internal_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_part(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_UpdateEqipment)
  return target;
}

size_t C2S_UpdateEqipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_UpdateEqipment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  // .Protocol.ECharacterPart part = 3;
  if (this->_internal_part() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_part());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_UpdateEqipment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_UpdateEqipment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_UpdateEqipment::GetClassData() const { return &_class_data_; }


void C2S_UpdateEqipment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_UpdateEqipment*>(&to_msg);
  auto& from = static_cast<const C2S_UpdateEqipment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_UpdateEqipment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_part() != 0) {
    _this->_internal_set_part(from._internal_part());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_UpdateEqipment::CopyFrom(const C2S_UpdateEqipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_UpdateEqipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_UpdateEqipment::IsInitialized() const {
  return true;
}

void C2S_UpdateEqipment::InternalSwap(C2S_UpdateEqipment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_UpdateEqipment, _impl_.part_)
      + sizeof(C2S_UpdateEqipment::_impl_.part_)
      - PROTOBUF_FIELD_OFFSET(C2S_UpdateEqipment, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_UpdateEqipment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[20]);
}

// ===================================================================

class S2C_UpdateEqipment::_Internal {
 public:
  static const ::Protocol::SItem& item(const S2C_UpdateEqipment* msg);
};

const ::Protocol::SItem&
S2C_UpdateEqipment::_Internal::item(const S2C_UpdateEqipment* msg) {
  return *msg->_impl_.item_;
}
void S2C_UpdateEqipment::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
S2C_UpdateEqipment::S2C_UpdateEqipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_UpdateEqipment)
}
S2C_UpdateEqipment::S2C_UpdateEqipment(const S2C_UpdateEqipment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_UpdateEqipment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.part_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  ::memcpy(&_impl_.part_, &from._impl_.part_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.part_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_UpdateEqipment)
}

inline void S2C_UpdateEqipment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.part_){0}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_UpdateEqipment::~S2C_UpdateEqipment() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_UpdateEqipment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_UpdateEqipment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void S2C_UpdateEqipment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_UpdateEqipment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_UpdateEqipment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  ::memset(&_impl_.part_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.part_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_UpdateEqipment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ECharacterPart part = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_part(static_cast<::Protocol::ECharacterPart>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_UpdateEqipment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_UpdateEqipment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .Protocol.ECharacterPart part = 2;
  if (this->_internal_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_part(), target);
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_UpdateEqipment)
  return target;
}

size_t S2C_UpdateEqipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_UpdateEqipment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // .Protocol.ECharacterPart part = 2;
  if (this->_internal_part() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_part());
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_UpdateEqipment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_UpdateEqipment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_UpdateEqipment::GetClassData() const { return &_class_data_; }


void S2C_UpdateEqipment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_UpdateEqipment*>(&to_msg);
  auto& from = static_cast<const S2C_UpdateEqipment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_UpdateEqipment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_part() != 0) {
    _this->_internal_set_part(from._internal_part());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_UpdateEqipment::CopyFrom(const S2C_UpdateEqipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_UpdateEqipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_UpdateEqipment::IsInitialized() const {
  return true;
}

void S2C_UpdateEqipment::InternalSwap(S2C_UpdateEqipment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_UpdateEqipment, _impl_.error_)
      + sizeof(S2C_UpdateEqipment::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_UpdateEqipment, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_UpdateEqipment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[21]);
}

// ===================================================================

class C2S_DeleteEqipment::_Internal {
 public:
  static const ::Protocol::SItem& item(const C2S_DeleteEqipment* msg);
};

const ::Protocol::SItem&
C2S_DeleteEqipment::_Internal::item(const C2S_DeleteEqipment* msg) {
  return *msg->_impl_.item_;
}
void C2S_DeleteEqipment::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
C2S_DeleteEqipment::C2S_DeleteEqipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.C2S_DeleteEqipment)
}
C2S_DeleteEqipment::C2S_DeleteEqipment(const C2S_DeleteEqipment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  C2S_DeleteEqipment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.part_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.part_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.part_));
  // @@protoc_insertion_point(copy_constructor:Protocol.C2S_DeleteEqipment)
}

inline void C2S_DeleteEqipment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.timestamp_){int64_t{0}}
    , decltype(_impl_.part_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

C2S_DeleteEqipment::~C2S_DeleteEqipment() {
  // @@protoc_insertion_point(destructor:Protocol.C2S_DeleteEqipment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C2S_DeleteEqipment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void C2S_DeleteEqipment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void C2S_DeleteEqipment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.C2S_DeleteEqipment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  ::memset(&_impl_.timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.part_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.part_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2S_DeleteEqipment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ECharacterPart part = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_part(static_cast<::Protocol::ECharacterPart>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C2S_DeleteEqipment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.C2S_DeleteEqipment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .Protocol.ECharacterPart part = 3;
  if (this->_internal_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_part(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.C2S_DeleteEqipment)
  return target;
}

size_t C2S_DeleteEqipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.C2S_DeleteEqipment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // int64 timestamp = 1;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  // .Protocol.ECharacterPart part = 3;
  if (this->_internal_part() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_part());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C2S_DeleteEqipment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    C2S_DeleteEqipment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C2S_DeleteEqipment::GetClassData() const { return &_class_data_; }


void C2S_DeleteEqipment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<C2S_DeleteEqipment*>(&to_msg);
  auto& from = static_cast<const C2S_DeleteEqipment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.C2S_DeleteEqipment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_part() != 0) {
    _this->_internal_set_part(from._internal_part());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_DeleteEqipment::CopyFrom(const C2S_DeleteEqipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.C2S_DeleteEqipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_DeleteEqipment::IsInitialized() const {
  return true;
}

void C2S_DeleteEqipment::InternalSwap(C2S_DeleteEqipment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_DeleteEqipment, _impl_.part_)
      + sizeof(C2S_DeleteEqipment::_impl_.part_)
      - PROTOBUF_FIELD_OFFSET(C2S_DeleteEqipment, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C2S_DeleteEqipment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[22]);
}

// ===================================================================

class S2C_DeleteEqipment::_Internal {
 public:
  static const ::Protocol::SItem& item(const S2C_DeleteEqipment* msg);
};

const ::Protocol::SItem&
S2C_DeleteEqipment::_Internal::item(const S2C_DeleteEqipment* msg) {
  return *msg->_impl_.item_;
}
void S2C_DeleteEqipment::clear_item() {
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
}
S2C_DeleteEqipment::S2C_DeleteEqipment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.S2C_DeleteEqipment)
}
S2C_DeleteEqipment::S2C_DeleteEqipment(const S2C_DeleteEqipment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  S2C_DeleteEqipment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.part_){}
    , decltype(_impl_.error_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::Protocol::SItem(*from._impl_.item_);
  }
  ::memcpy(&_impl_.part_, &from._impl_.part_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.error_) -
    reinterpret_cast<char*>(&_impl_.part_)) + sizeof(_impl_.error_));
  // @@protoc_insertion_point(copy_constructor:Protocol.S2C_DeleteEqipment)
}

inline void S2C_DeleteEqipment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_){nullptr}
    , decltype(_impl_.part_){0}
    , decltype(_impl_.error_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

S2C_DeleteEqipment::~S2C_DeleteEqipment() {
  // @@protoc_insertion_point(destructor:Protocol.S2C_DeleteEqipment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S2C_DeleteEqipment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.item_;
}

void S2C_DeleteEqipment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void S2C_DeleteEqipment::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S2C_DeleteEqipment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  ::memset(&_impl_.part_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.error_) -
      reinterpret_cast<char*>(&_impl_.part_)) + sizeof(_impl_.error_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S2C_DeleteEqipment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SItem item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.ECharacterPart part = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_part(static_cast<::Protocol::ECharacterPart>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S2C_DeleteEqipment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S2C_DeleteEqipment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // .Protocol.ECharacterPart part = 2;
  if (this->_internal_part() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_part(), target);
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S2C_DeleteEqipment)
  return target;
}

size_t S2C_DeleteEqipment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.S2C_DeleteEqipment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SItem item = 1;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // .Protocol.ECharacterPart part = 2;
  if (this->_internal_part() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_part());
  }

  // int32 error = 3;
  if (this->_internal_error() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_error());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S2C_DeleteEqipment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    S2C_DeleteEqipment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S2C_DeleteEqipment::GetClassData() const { return &_class_data_; }


void S2C_DeleteEqipment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<S2C_DeleteEqipment*>(&to_msg);
  auto& from = static_cast<const S2C_DeleteEqipment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S2C_DeleteEqipment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::Protocol::SItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_part() != 0) {
    _this->_internal_set_part(from._internal_part());
  }
  if (from._internal_error() != 0) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_DeleteEqipment::CopyFrom(const S2C_DeleteEqipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S2C_DeleteEqipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_DeleteEqipment::IsInitialized() const {
  return true;
}

void S2C_DeleteEqipment::InternalSwap(S2C_DeleteEqipment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_DeleteEqipment, _impl_.error_)
      + sizeof(S2C_DeleteEqipment::_impl_.error_)
      - PROTOBUF_FIELD_OFFSET(S2C_DeleteEqipment, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S2C_DeleteEqipment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_GamePacket_2eproto_getter, &descriptor_table_GamePacket_2eproto_once,
      file_level_metadata_GamePacket_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::C2S_EnterGameServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_EnterGameServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_EnterGameServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_EnterGameServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_EnterGameServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_EnterGameServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LeaveGameServer*
Arena::CreateMaybeMessage< ::Protocol::C2S_LeaveGameServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LeaveGameServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LeaveGameServer*
Arena::CreateMaybeMessage< ::Protocol::S2C_LeaveGameServer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LeaveGameServer >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_AppearCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_AppearCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_AppearCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DisAppearCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_DisAppearCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DisAppearCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_MovementCharacter*
Arena::CreateMaybeMessage< ::Protocol::C2S_MovementCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_MovementCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_MovementCharacter*
Arena::CreateMaybeMessage< ::Protocol::S2C_MovementCharacter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_MovementCharacter >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_AppearItem*
Arena::CreateMaybeMessage< ::Protocol::S2C_AppearItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_AppearItem >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DisAppearGameObject*
Arena::CreateMaybeMessage< ::Protocol::S2C_DisAppearGameObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DisAppearGameObject >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DestroyItem*
Arena::CreateMaybeMessage< ::Protocol::S2C_DestroyItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DestroyItem >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_LoadInventory*
Arena::CreateMaybeMessage< ::Protocol::C2S_LoadInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_LoadInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_LoadInventory*
Arena::CreateMaybeMessage< ::Protocol::S2C_LoadInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_LoadInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_InsertInventory*
Arena::CreateMaybeMessage< ::Protocol::C2S_InsertInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_InsertInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_InsertInventory*
Arena::CreateMaybeMessage< ::Protocol::S2C_InsertInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_InsertInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_UpdateInventory*
Arena::CreateMaybeMessage< ::Protocol::C2S_UpdateInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_UpdateInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_UpdateInventory*
Arena::CreateMaybeMessage< ::Protocol::S2C_UpdateInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_UpdateInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_DeleteInventory*
Arena::CreateMaybeMessage< ::Protocol::C2S_DeleteInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_DeleteInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DeleteInventory*
Arena::CreateMaybeMessage< ::Protocol::S2C_DeleteInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DeleteInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_RollbackInventory*
Arena::CreateMaybeMessage< ::Protocol::S2C_RollbackInventory >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_RollbackInventory >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_UpdateEqipment*
Arena::CreateMaybeMessage< ::Protocol::C2S_UpdateEqipment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_UpdateEqipment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_UpdateEqipment*
Arena::CreateMaybeMessage< ::Protocol::S2C_UpdateEqipment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_UpdateEqipment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::C2S_DeleteEqipment*
Arena::CreateMaybeMessage< ::Protocol::C2S_DeleteEqipment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::C2S_DeleteEqipment >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::S2C_DeleteEqipment*
Arena::CreateMaybeMessage< ::Protocol::S2C_DeleteEqipment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::S2C_DeleteEqipment >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
